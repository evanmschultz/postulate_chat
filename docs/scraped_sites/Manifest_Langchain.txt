This notebook goes over how to use Manifest and LangChain. For more detailed information on manifest, and how to use it with local hugginface models like in this example, see https://github.com/HazyResearch/manifest Another example of using Manifest with Langchain. IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsAI21Aleph AlphaAmazon API GatewayAnyscaleAzure MLAzure OpenAIBananaBasetenBeamBedrockBittensorCerebriumAIChatGLMClarifaiCohereC TransformersCTranslate2DatabricksDeepInfraDeepSparseEden AIFireworksForefrontAIGoogle Vertex AI PaLMGooseAIGPT4AllHugging Face HubHugging Face Local PipelinesHuggingface TextGen InferenceJSONFormerKoboldAI APILlama.cppLLM Caching integrationsManifestMinimaxModalMosaicMLNLP CloudOctoAIOllamaOpaquePromptsOpenAIOpenLLMOpenLMPetalsPipelineAIPredibasePrediction GuardPromptLayer OpenAIRELLMReplicateRunhouseSageMakerEndpointStochasticAINebula (Symbl.ai)TextGenTitan TakeoffTongyi QwenvLLMWriterXorbits Inference (Xinference)MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by provider Callbacks Chat models Chat loaders Document loaders Document transformers LLMsAI21Aleph AlphaAmazon API GatewayAnyscaleAzure MLAzure OpenAIBananaBasetenBeamBedrockBittensorCerebriumAIChatGLMClarifaiCohereC TransformersCTranslate2DatabricksDeepInfraDeepSparseEden AIFireworksForefrontAIGoogle Vertex AI PaLMGooseAIGPT4AllHugging Face HubHugging Face Local PipelinesHuggingface TextGen InferenceJSONFormerKoboldAI APILlama.cppLLM Caching integrationsManifestMinimaxModalMosaicMLNLP CloudOctoAIOllamaOpaquePromptsOpenAIOpenLLMOpenLMPetalsPipelineAIPredibasePrediction GuardPromptLayer OpenAIRELLMReplicateRunhouseSageMakerEndpointStochasticAINebula (Symbl.ai)TextGenTitan TakeoffTongyi QwenvLLMWriterXorbits Inference (Xinference) AI21 Aleph Alpha Amazon API Gateway Anyscale Azure ML Azure OpenAI Banana Baseten Beam Bedrock Bittensor CerebriumAI ChatGLM Clarifai Cohere C Transformers CTranslate2 Databricks DeepInfra DeepSparse Eden AI Fireworks ForefrontAI Google Vertex AI PaLM GooseAI GPT4All Hugging Face Hub Hugging Face Local Pipelines Huggingface TextGen Inference JSONFormer KoboldAI API Llama.cpp LLM Caching integrations Manifest Minimax Modal MosaicML NLP Cloud OctoAI Ollama OpaquePrompts OpenAI OpenLLM OpenLM Petals PipelineAI Predibase Prediction Guard PromptLayer OpenAI RELLM Replicate Runhouse SageMakerEndpoint StochasticAI Nebula (Symbl.ai) TextGen Titan Takeoff Tongyi Qwen vLLM Writer Xorbits Inference (Xinference) Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by provider  Integrations LLMs Manifest ManifestWrapper CharacterTextSplitter MapReduceChain ModelLaboratory Compare HF Models Discord Twitter Python JS/TS Homepage Blog Skip to main contentü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLKIntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsAI21Aleph AlphaAmazon API GatewayAnyscaleAzure MLAzure OpenAIBananaBasetenBeamBedrockBittensorCerebriumAIChatGLMClarifaiCohereC TransformersCTranslate2DatabricksDeepInfraDeepSparseEden AIFireworksForefrontAIGoogle Vertex AI PaLMGooseAIGPT4AllHugging Face HubHugging Face Local PipelinesHuggingface TextGen InferenceJSONFormerKoboldAI APILlama.cppLLM Caching integrationsManifestMinimaxModalMosaicMLNLP CloudOctoAIOllamaOpaquePromptsOpenAIOpenLLMOpenLMPetalsPipelineAIPredibasePrediction GuardPromptLayer OpenAIRELLMReplicateRunhouseSageMakerEndpointStochasticAINebula (Symbl.ai)TextGenTitan TakeoffTongyi QwenvLLMWriterXorbits Inference (Xinference)MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerIntegrationsLLMsManifestOn this pageManifestThis notebook goes over how to use Manifest and LangChain.For more detailed information on manifest, and how to use it with local hugginface models like in this example, see https://github.com/HazyResearch/manifestAnother example of using Manifest with Langchain.pip install manifest-mlfrom manifest import Manifestfrom langchain.llms.manifest import ManifestWrapperAPI Reference:ManifestWrappermanifest = Manifest(    client_name="huggingface", client_connection="http://127.0.0.1:5000")print(manifest.client_pool.get_current_client().get_model_params())llm = ManifestWrapper(    client=manifest, llm_kwargs={"temperature": 0.001, "max_tokens": 256})# Map reduce examplefrom langchain import PromptTemplatefrom langchain.text_splitter import CharacterTextSplitterfrom langchain.chains.mapreduce import MapReduceChain_prompt = """Write a concise summary of the following:{text}CONCISE SUMMARY:"""prompt = PromptTemplate(template=_prompt, input_variables=["text"])text_splitter = CharacterTextSplitter()mp_chain = MapReduceChain.from_params(llm, prompt, text_splitter)API Reference:CharacterTextSplitterMapReduceChainwith open("../../../state_of_the_union.txt") as f:    state_of_the_union = f.read()mp_chain.run(state_of_the_union)    'President Obama delivered his annual State of the Union address on Tuesday night, laying out his priorities for the coming year. Obama said the government will provide free flu vaccines to all Americans, ending the government shutdown and allowing businesses to reopen. The president also said that the government will continue to send vaccines to 112 countries, more than any other nation. "We have lost so much to COVID-19," Trump said. "Time with one another. And worst of all, so much loss of life." He said the CDC is working on a vaccine for kids under 5, and that the government will be ready with plenty of vaccines when they are available. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government is launching a "Test to Treat" initiative that will allow people to get tested at a pharmacy and get antiviral pills on the spot at no cost. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government will continue to send vaccines to 112 countries, more than any other nation. "We are coming for your'Compare HF Models‚Äãfrom langchain.model_laboratory import ModelLaboratorymanifest1 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5000"    ),    llm_kwargs={"temperature": 0.01},)manifest2 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5001"    ),    llm_kwargs={"temperature": 0.01},)manifest3 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5002"    ),    llm_kwargs={"temperature": 0.01},)llms = [manifest1, manifest2, manifest3]model_lab = ModelLaboratory(llms)API Reference:ModelLaboratorymodel_lab.compare("What color is a flamingo?")    Input:    What color is a flamingo?        ManifestWrapper    Params: {'model_name': 'bigscience/T0_3B', 'model_path': 'bigscience/T0_3B', 'temperature': 0.01}    pink        ManifestWrapper    Params: {'model_name': 'EleutherAI/gpt-neo-125M', 'model_path': 'EleutherAI/gpt-neo-125M', 'temperature': 0.01}    A flamingo is a small, round        ManifestWrapper    Params: {'model_name': 'google/flan-t5-xl', 'model_path': 'google/flan-t5-xl', 'temperature': 0.01}    pink    PreviousLLM Caching integrationsNextMinimaxCompare HF ModelsCommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright ¬© 2023 LangChain, Inc. Skip to main content ü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLK ü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPI LangSmithJS/TS DocsCTRLK  CTRLK CTRLK  CTRLK   IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsAI21Aleph AlphaAmazon API GatewayAnyscaleAzure MLAzure OpenAIBananaBasetenBeamBedrockBittensorCerebriumAIChatGLMClarifaiCohereC TransformersCTranslate2DatabricksDeepInfraDeepSparseEden AIFireworksForefrontAIGoogle Vertex AI PaLMGooseAIGPT4AllHugging Face HubHugging Face Local PipelinesHuggingface TextGen InferenceJSONFormerKoboldAI APILlama.cppLLM Caching integrationsManifestMinimaxModalMosaicMLNLP CloudOctoAIOllamaOpaquePromptsOpenAIOpenLLMOpenLMPetalsPipelineAIPredibasePrediction GuardPromptLayer OpenAIRELLMReplicateRunhouseSageMakerEndpointStochasticAINebula (Symbl.ai)TextGenTitan TakeoffTongyi QwenvLLMWriterXorbits Inference (Xinference)MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerIntegrationsLLMsManifestOn this pageManifestThis notebook goes over how to use Manifest and LangChain.For more detailed information on manifest, and how to use it with local hugginface models like in this example, see https://github.com/HazyResearch/manifestAnother example of using Manifest with Langchain.pip install manifest-mlfrom manifest import Manifestfrom langchain.llms.manifest import ManifestWrapperAPI Reference:ManifestWrappermanifest = Manifest(    client_name="huggingface", client_connection="http://127.0.0.1:5000")print(manifest.client_pool.get_current_client().get_model_params())llm = ManifestWrapper(    client=manifest, llm_kwargs={"temperature": 0.001, "max_tokens": 256})# Map reduce examplefrom langchain import PromptTemplatefrom langchain.text_splitter import CharacterTextSplitterfrom langchain.chains.mapreduce import MapReduceChain_prompt = """Write a concise summary of the following:{text}CONCISE SUMMARY:"""prompt = PromptTemplate(template=_prompt, input_variables=["text"])text_splitter = CharacterTextSplitter()mp_chain = MapReduceChain.from_params(llm, prompt, text_splitter)API Reference:CharacterTextSplitterMapReduceChainwith open("../../../state_of_the_union.txt") as f:    state_of_the_union = f.read()mp_chain.run(state_of_the_union)    'President Obama delivered his annual State of the Union address on Tuesday night, laying out his priorities for the coming year. Obama said the government will provide free flu vaccines to all Americans, ending the government shutdown and allowing businesses to reopen. The president also said that the government will continue to send vaccines to 112 countries, more than any other nation. "We have lost so much to COVID-19," Trump said. "Time with one another. And worst of all, so much loss of life." He said the CDC is working on a vaccine for kids under 5, and that the government will be ready with plenty of vaccines when they are available. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government is launching a "Test to Treat" initiative that will allow people to get tested at a pharmacy and get antiviral pills on the spot at no cost. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government will continue to send vaccines to 112 countries, more than any other nation. "We are coming for your'Compare HF Models‚Äãfrom langchain.model_laboratory import ModelLaboratorymanifest1 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5000"    ),    llm_kwargs={"temperature": 0.01},)manifest2 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5001"    ),    llm_kwargs={"temperature": 0.01},)manifest3 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5002"    ),    llm_kwargs={"temperature": 0.01},)llms = [manifest1, manifest2, manifest3]model_lab = ModelLaboratory(llms)API Reference:ModelLaboratorymodel_lab.compare("What color is a flamingo?")    Input:    What color is a flamingo?        ManifestWrapper    Params: {'model_name': 'bigscience/T0_3B', 'model_path': 'bigscience/T0_3B', 'temperature': 0.01}    pink        ManifestWrapper    Params: {'model_name': 'EleutherAI/gpt-neo-125M', 'model_path': 'EleutherAI/gpt-neo-125M', 'temperature': 0.01}    A flamingo is a small, round        ManifestWrapper    Params: {'model_name': 'google/flan-t5-xl', 'model_path': 'google/flan-t5-xl', 'temperature': 0.01}    pink    PreviousLLM Caching integrationsNextMinimaxCompare HF Models IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsAI21Aleph AlphaAmazon API GatewayAnyscaleAzure MLAzure OpenAIBananaBasetenBeamBedrockBittensorCerebriumAIChatGLMClarifaiCohereC TransformersCTranslate2DatabricksDeepInfraDeepSparseEden AIFireworksForefrontAIGoogle Vertex AI PaLMGooseAIGPT4AllHugging Face HubHugging Face Local PipelinesHuggingface TextGen InferenceJSONFormerKoboldAI APILlama.cppLLM Caching integrationsManifestMinimaxModalMosaicMLNLP CloudOctoAIOllamaOpaquePromptsOpenAIOpenLLMOpenLMPetalsPipelineAIPredibasePrediction GuardPromptLayer OpenAIRELLMReplicateRunhouseSageMakerEndpointStochasticAINebula (Symbl.ai)TextGenTitan TakeoffTongyi QwenvLLMWriterXorbits Inference (Xinference)MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerIntegrationsLLMsManifestOn this pageManifestThis notebook goes over how to use Manifest and LangChain.For more detailed information on manifest, and how to use it with local hugginface models like in this example, see https://github.com/HazyResearch/manifestAnother example of using Manifest with Langchain.pip install manifest-mlfrom manifest import Manifestfrom langchain.llms.manifest import ManifestWrapperAPI Reference:ManifestWrappermanifest = Manifest(    client_name="huggingface", client_connection="http://127.0.0.1:5000")print(manifest.client_pool.get_current_client().get_model_params())llm = ManifestWrapper(    client=manifest, llm_kwargs={"temperature": 0.001, "max_tokens": 256})# Map reduce examplefrom langchain import PromptTemplatefrom langchain.text_splitter import CharacterTextSplitterfrom langchain.chains.mapreduce import MapReduceChain_prompt = """Write a concise summary of the following:{text}CONCISE SUMMARY:"""prompt = PromptTemplate(template=_prompt, input_variables=["text"])text_splitter = CharacterTextSplitter()mp_chain = MapReduceChain.from_params(llm, prompt, text_splitter)API Reference:CharacterTextSplitterMapReduceChainwith open("../../../state_of_the_union.txt") as f:    state_of_the_union = f.read()mp_chain.run(state_of_the_union)    'President Obama delivered his annual State of the Union address on Tuesday night, laying out his priorities for the coming year. Obama said the government will provide free flu vaccines to all Americans, ending the government shutdown and allowing businesses to reopen. The president also said that the government will continue to send vaccines to 112 countries, more than any other nation. "We have lost so much to COVID-19," Trump said. "Time with one another. And worst of all, so much loss of life." He said the CDC is working on a vaccine for kids under 5, and that the government will be ready with plenty of vaccines when they are available. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government is launching a "Test to Treat" initiative that will allow people to get tested at a pharmacy and get antiviral pills on the spot at no cost. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government will continue to send vaccines to 112 countries, more than any other nation. "We are coming for your'Compare HF Models‚Äãfrom langchain.model_laboratory import ModelLaboratorymanifest1 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5000"    ),    llm_kwargs={"temperature": 0.01},)manifest2 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5001"    ),    llm_kwargs={"temperature": 0.01},)manifest3 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5002"    ),    llm_kwargs={"temperature": 0.01},)llms = [manifest1, manifest2, manifest3]model_lab = ModelLaboratory(llms)API Reference:ModelLaboratorymodel_lab.compare("What color is a flamingo?")    Input:    What color is a flamingo?        ManifestWrapper    Params: {'model_name': 'bigscience/T0_3B', 'model_path': 'bigscience/T0_3B', 'temperature': 0.01}    pink        ManifestWrapper    Params: {'model_name': 'EleutherAI/gpt-neo-125M', 'model_path': 'EleutherAI/gpt-neo-125M', 'temperature': 0.01}    A flamingo is a small, round        ManifestWrapper    Params: {'model_name': 'google/flan-t5-xl', 'model_path': 'google/flan-t5-xl', 'temperature': 0.01}    pink    PreviousLLM Caching integrationsNextMinimaxCompare HF Models IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsAI21Aleph AlphaAmazon API GatewayAnyscaleAzure MLAzure OpenAIBananaBasetenBeamBedrockBittensorCerebriumAIChatGLMClarifaiCohereC TransformersCTranslate2DatabricksDeepInfraDeepSparseEden AIFireworksForefrontAIGoogle Vertex AI PaLMGooseAIGPT4AllHugging Face HubHugging Face Local PipelinesHuggingface TextGen InferenceJSONFormerKoboldAI APILlama.cppLLM Caching integrationsManifestMinimaxModalMosaicMLNLP CloudOctoAIOllamaOpaquePromptsOpenAIOpenLLMOpenLMPetalsPipelineAIPredibasePrediction GuardPromptLayer OpenAIRELLMReplicateRunhouseSageMakerEndpointStochasticAINebula (Symbl.ai)TextGenTitan TakeoffTongyi QwenvLLMWriterXorbits Inference (Xinference)MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by provider IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsAI21Aleph AlphaAmazon API GatewayAnyscaleAzure MLAzure OpenAIBananaBasetenBeamBedrockBittensorCerebriumAIChatGLMClarifaiCohereC TransformersCTranslate2DatabricksDeepInfraDeepSparseEden AIFireworksForefrontAIGoogle Vertex AI PaLMGooseAIGPT4AllHugging Face HubHugging Face Local PipelinesHuggingface TextGen InferenceJSONFormerKoboldAI APILlama.cppLLM Caching integrationsManifestMinimaxModalMosaicMLNLP CloudOctoAIOllamaOpaquePromptsOpenAIOpenLLMOpenLMPetalsPipelineAIPredibasePrediction GuardPromptLayer OpenAIRELLMReplicateRunhouseSageMakerEndpointStochasticAINebula (Symbl.ai)TextGenTitan TakeoffTongyi QwenvLLMWriterXorbits Inference (Xinference)MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by provider Integrations Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by provider IntegrationsLLMsManifestOn this pageManifestThis notebook goes over how to use Manifest and LangChain.For more detailed information on manifest, and how to use it with local hugginface models like in this example, see https://github.com/HazyResearch/manifestAnother example of using Manifest with Langchain.pip install manifest-mlfrom manifest import Manifestfrom langchain.llms.manifest import ManifestWrapperAPI Reference:ManifestWrappermanifest = Manifest(    client_name="huggingface", client_connection="http://127.0.0.1:5000")print(manifest.client_pool.get_current_client().get_model_params())llm = ManifestWrapper(    client=manifest, llm_kwargs={"temperature": 0.001, "max_tokens": 256})# Map reduce examplefrom langchain import PromptTemplatefrom langchain.text_splitter import CharacterTextSplitterfrom langchain.chains.mapreduce import MapReduceChain_prompt = """Write a concise summary of the following:{text}CONCISE SUMMARY:"""prompt = PromptTemplate(template=_prompt, input_variables=["text"])text_splitter = CharacterTextSplitter()mp_chain = MapReduceChain.from_params(llm, prompt, text_splitter)API Reference:CharacterTextSplitterMapReduceChainwith open("../../../state_of_the_union.txt") as f:    state_of_the_union = f.read()mp_chain.run(state_of_the_union)    'President Obama delivered his annual State of the Union address on Tuesday night, laying out his priorities for the coming year. Obama said the government will provide free flu vaccines to all Americans, ending the government shutdown and allowing businesses to reopen. The president also said that the government will continue to send vaccines to 112 countries, more than any other nation. "We have lost so much to COVID-19," Trump said. "Time with one another. And worst of all, so much loss of life." He said the CDC is working on a vaccine for kids under 5, and that the government will be ready with plenty of vaccines when they are available. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government is launching a "Test to Treat" initiative that will allow people to get tested at a pharmacy and get antiviral pills on the spot at no cost. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government will continue to send vaccines to 112 countries, more than any other nation. "We are coming for your'Compare HF Models‚Äãfrom langchain.model_laboratory import ModelLaboratorymanifest1 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5000"    ),    llm_kwargs={"temperature": 0.01},)manifest2 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5001"    ),    llm_kwargs={"temperature": 0.01},)manifest3 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5002"    ),    llm_kwargs={"temperature": 0.01},)llms = [manifest1, manifest2, manifest3]model_lab = ModelLaboratory(llms)API Reference:ModelLaboratorymodel_lab.compare("What color is a flamingo?")    Input:    What color is a flamingo?        ManifestWrapper    Params: {'model_name': 'bigscience/T0_3B', 'model_path': 'bigscience/T0_3B', 'temperature': 0.01}    pink        ManifestWrapper    Params: {'model_name': 'EleutherAI/gpt-neo-125M', 'model_path': 'EleutherAI/gpt-neo-125M', 'temperature': 0.01}    A flamingo is a small, round        ManifestWrapper    Params: {'model_name': 'google/flan-t5-xl', 'model_path': 'google/flan-t5-xl', 'temperature': 0.01}    pink    PreviousLLM Caching integrationsNextMinimaxCompare HF Models IntegrationsLLMsManifestOn this pageManifestThis notebook goes over how to use Manifest and LangChain.For more detailed information on manifest, and how to use it with local hugginface models like in this example, see https://github.com/HazyResearch/manifestAnother example of using Manifest with Langchain.pip install manifest-mlfrom manifest import Manifestfrom langchain.llms.manifest import ManifestWrapperAPI Reference:ManifestWrappermanifest = Manifest(    client_name="huggingface", client_connection="http://127.0.0.1:5000")print(manifest.client_pool.get_current_client().get_model_params())llm = ManifestWrapper(    client=manifest, llm_kwargs={"temperature": 0.001, "max_tokens": 256})# Map reduce examplefrom langchain import PromptTemplatefrom langchain.text_splitter import CharacterTextSplitterfrom langchain.chains.mapreduce import MapReduceChain_prompt = """Write a concise summary of the following:{text}CONCISE SUMMARY:"""prompt = PromptTemplate(template=_prompt, input_variables=["text"])text_splitter = CharacterTextSplitter()mp_chain = MapReduceChain.from_params(llm, prompt, text_splitter)API Reference:CharacterTextSplitterMapReduceChainwith open("../../../state_of_the_union.txt") as f:    state_of_the_union = f.read()mp_chain.run(state_of_the_union)    'President Obama delivered his annual State of the Union address on Tuesday night, laying out his priorities for the coming year. Obama said the government will provide free flu vaccines to all Americans, ending the government shutdown and allowing businesses to reopen. The president also said that the government will continue to send vaccines to 112 countries, more than any other nation. "We have lost so much to COVID-19," Trump said. "Time with one another. And worst of all, so much loss of life." He said the CDC is working on a vaccine for kids under 5, and that the government will be ready with plenty of vaccines when they are available. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government is launching a "Test to Treat" initiative that will allow people to get tested at a pharmacy and get antiviral pills on the spot at no cost. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government will continue to send vaccines to 112 countries, more than any other nation. "We are coming for your'Compare HF Models‚Äãfrom langchain.model_laboratory import ModelLaboratorymanifest1 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5000"    ),    llm_kwargs={"temperature": 0.01},)manifest2 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5001"    ),    llm_kwargs={"temperature": 0.01},)manifest3 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5002"    ),    llm_kwargs={"temperature": 0.01},)llms = [manifest1, manifest2, manifest3]model_lab = ModelLaboratory(llms)API Reference:ModelLaboratorymodel_lab.compare("What color is a flamingo?")    Input:    What color is a flamingo?        ManifestWrapper    Params: {'model_name': 'bigscience/T0_3B', 'model_path': 'bigscience/T0_3B', 'temperature': 0.01}    pink        ManifestWrapper    Params: {'model_name': 'EleutherAI/gpt-neo-125M', 'model_path': 'EleutherAI/gpt-neo-125M', 'temperature': 0.01}    A flamingo is a small, round        ManifestWrapper    Params: {'model_name': 'google/flan-t5-xl', 'model_path': 'google/flan-t5-xl', 'temperature': 0.01}    pink    PreviousLLM Caching integrationsNextMinimaxCompare HF Models IntegrationsLLMsManifestOn this pageManifestThis notebook goes over how to use Manifest and LangChain.For more detailed information on manifest, and how to use it with local hugginface models like in this example, see https://github.com/HazyResearch/manifestAnother example of using Manifest with Langchain.pip install manifest-mlfrom manifest import Manifestfrom langchain.llms.manifest import ManifestWrapperAPI Reference:ManifestWrappermanifest = Manifest(    client_name="huggingface", client_connection="http://127.0.0.1:5000")print(manifest.client_pool.get_current_client().get_model_params())llm = ManifestWrapper(    client=manifest, llm_kwargs={"temperature": 0.001, "max_tokens": 256})# Map reduce examplefrom langchain import PromptTemplatefrom langchain.text_splitter import CharacterTextSplitterfrom langchain.chains.mapreduce import MapReduceChain_prompt = """Write a concise summary of the following:{text}CONCISE SUMMARY:"""prompt = PromptTemplate(template=_prompt, input_variables=["text"])text_splitter = CharacterTextSplitter()mp_chain = MapReduceChain.from_params(llm, prompt, text_splitter)API Reference:CharacterTextSplitterMapReduceChainwith open("../../../state_of_the_union.txt") as f:    state_of_the_union = f.read()mp_chain.run(state_of_the_union)    'President Obama delivered his annual State of the Union address on Tuesday night, laying out his priorities for the coming year. Obama said the government will provide free flu vaccines to all Americans, ending the government shutdown and allowing businesses to reopen. The president also said that the government will continue to send vaccines to 112 countries, more than any other nation. "We have lost so much to COVID-19," Trump said. "Time with one another. And worst of all, so much loss of life." He said the CDC is working on a vaccine for kids under 5, and that the government will be ready with plenty of vaccines when they are available. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government is launching a "Test to Treat" initiative that will allow people to get tested at a pharmacy and get antiviral pills on the spot at no cost. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government will continue to send vaccines to 112 countries, more than any other nation. "We are coming for your'Compare HF Models‚Äãfrom langchain.model_laboratory import ModelLaboratorymanifest1 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5000"    ),    llm_kwargs={"temperature": 0.01},)manifest2 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5001"    ),    llm_kwargs={"temperature": 0.01},)manifest3 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5002"    ),    llm_kwargs={"temperature": 0.01},)llms = [manifest1, manifest2, manifest3]model_lab = ModelLaboratory(llms)API Reference:ModelLaboratorymodel_lab.compare("What color is a flamingo?")    Input:    What color is a flamingo?        ManifestWrapper    Params: {'model_name': 'bigscience/T0_3B', 'model_path': 'bigscience/T0_3B', 'temperature': 0.01}    pink        ManifestWrapper    Params: {'model_name': 'EleutherAI/gpt-neo-125M', 'model_path': 'EleutherAI/gpt-neo-125M', 'temperature': 0.01}    A flamingo is a small, round        ManifestWrapper    Params: {'model_name': 'google/flan-t5-xl', 'model_path': 'google/flan-t5-xl', 'temperature': 0.01}    pink    PreviousLLM Caching integrationsNextMinimax IntegrationsLLMsManifestOn this pageManifestThis notebook goes over how to use Manifest and LangChain.For more detailed information on manifest, and how to use it with local hugginface models like in this example, see https://github.com/HazyResearch/manifestAnother example of using Manifest with Langchain.pip install manifest-mlfrom manifest import Manifestfrom langchain.llms.manifest import ManifestWrapperAPI Reference:ManifestWrappermanifest = Manifest(    client_name="huggingface", client_connection="http://127.0.0.1:5000")print(manifest.client_pool.get_current_client().get_model_params())llm = ManifestWrapper(    client=manifest, llm_kwargs={"temperature": 0.001, "max_tokens": 256})# Map reduce examplefrom langchain import PromptTemplatefrom langchain.text_splitter import CharacterTextSplitterfrom langchain.chains.mapreduce import MapReduceChain_prompt = """Write a concise summary of the following:{text}CONCISE SUMMARY:"""prompt = PromptTemplate(template=_prompt, input_variables=["text"])text_splitter = CharacterTextSplitter()mp_chain = MapReduceChain.from_params(llm, prompt, text_splitter)API Reference:CharacterTextSplitterMapReduceChainwith open("../../../state_of_the_union.txt") as f:    state_of_the_union = f.read()mp_chain.run(state_of_the_union)    'President Obama delivered his annual State of the Union address on Tuesday night, laying out his priorities for the coming year. Obama said the government will provide free flu vaccines to all Americans, ending the government shutdown and allowing businesses to reopen. The president also said that the government will continue to send vaccines to 112 countries, more than any other nation. "We have lost so much to COVID-19," Trump said. "Time with one another. And worst of all, so much loss of life." He said the CDC is working on a vaccine for kids under 5, and that the government will be ready with plenty of vaccines when they are available. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government is launching a "Test to Treat" initiative that will allow people to get tested at a pharmacy and get antiviral pills on the spot at no cost. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government will continue to send vaccines to 112 countries, more than any other nation. "We are coming for your'Compare HF Models‚Äãfrom langchain.model_laboratory import ModelLaboratorymanifest1 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5000"    ),    llm_kwargs={"temperature": 0.01},)manifest2 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5001"    ),    llm_kwargs={"temperature": 0.01},)manifest3 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5002"    ),    llm_kwargs={"temperature": 0.01},)llms = [manifest1, manifest2, manifest3]model_lab = ModelLaboratory(llms)API Reference:ModelLaboratorymodel_lab.compare("What color is a flamingo?")    Input:    What color is a flamingo?        ManifestWrapper    Params: {'model_name': 'bigscience/T0_3B', 'model_path': 'bigscience/T0_3B', 'temperature': 0.01}    pink        ManifestWrapper    Params: {'model_name': 'EleutherAI/gpt-neo-125M', 'model_path': 'EleutherAI/gpt-neo-125M', 'temperature': 0.01}    A flamingo is a small, round        ManifestWrapper    Params: {'model_name': 'google/flan-t5-xl', 'model_path': 'google/flan-t5-xl', 'temperature': 0.01}    pink    PreviousLLM Caching integrationsNextMinimax On this page ManifestThis notebook goes over how to use Manifest and LangChain.For more detailed information on manifest, and how to use it with local hugginface models like in this example, see https://github.com/HazyResearch/manifestAnother example of using Manifest with Langchain.pip install manifest-mlfrom manifest import Manifestfrom langchain.llms.manifest import ManifestWrapperAPI Reference:ManifestWrappermanifest = Manifest(    client_name="huggingface", client_connection="http://127.0.0.1:5000")print(manifest.client_pool.get_current_client().get_model_params())llm = ManifestWrapper(    client=manifest, llm_kwargs={"temperature": 0.001, "max_tokens": 256})# Map reduce examplefrom langchain import PromptTemplatefrom langchain.text_splitter import CharacterTextSplitterfrom langchain.chains.mapreduce import MapReduceChain_prompt = """Write a concise summary of the following:{text}CONCISE SUMMARY:"""prompt = PromptTemplate(template=_prompt, input_variables=["text"])text_splitter = CharacterTextSplitter()mp_chain = MapReduceChain.from_params(llm, prompt, text_splitter)API Reference:CharacterTextSplitterMapReduceChainwith open("../../../state_of_the_union.txt") as f:    state_of_the_union = f.read()mp_chain.run(state_of_the_union)    'President Obama delivered his annual State of the Union address on Tuesday night, laying out his priorities for the coming year. Obama said the government will provide free flu vaccines to all Americans, ending the government shutdown and allowing businesses to reopen. The president also said that the government will continue to send vaccines to 112 countries, more than any other nation. "We have lost so much to COVID-19," Trump said. "Time with one another. And worst of all, so much loss of life." He said the CDC is working on a vaccine for kids under 5, and that the government will be ready with plenty of vaccines when they are available. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government is launching a "Test to Treat" initiative that will allow people to get tested at a pharmacy and get antiviral pills on the spot at no cost. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government will continue to send vaccines to 112 countries, more than any other nation. "We are coming for your'Compare HF Models‚Äãfrom langchain.model_laboratory import ModelLaboratorymanifest1 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5000"    ),    llm_kwargs={"temperature": 0.01},)manifest2 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5001"    ),    llm_kwargs={"temperature": 0.01},)manifest3 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5002"    ),    llm_kwargs={"temperature": 0.01},)llms = [manifest1, manifest2, manifest3]model_lab = ModelLaboratory(llms)API Reference:ModelLaboratorymodel_lab.compare("What color is a flamingo?")    Input:    What color is a flamingo?        ManifestWrapper    Params: {'model_name': 'bigscience/T0_3B', 'model_path': 'bigscience/T0_3B', 'temperature': 0.01}    pink        ManifestWrapper    Params: {'model_name': 'EleutherAI/gpt-neo-125M', 'model_path': 'EleutherAI/gpt-neo-125M', 'temperature': 0.01}    A flamingo is a small, round        ManifestWrapper    Params: {'model_name': 'google/flan-t5-xl', 'model_path': 'google/flan-t5-xl', 'temperature': 0.01}    pink     pip install manifest-ml pip install manifest-ml  from manifest import Manifestfrom langchain.llms.manifest import ManifestWrapper from manifest import Manifestfrom langchain.llms.manifest import ManifestWrapper  API Reference:ManifestWrapper manifest = Manifest(    client_name="huggingface", client_connection="http://127.0.0.1:5000")print(manifest.client_pool.get_current_client().get_model_params()) manifest = Manifest(    client_name="huggingface", client_connection="http://127.0.0.1:5000")print(manifest.client_pool.get_current_client().get_model_params())  llm = ManifestWrapper(    client=manifest, llm_kwargs={"temperature": 0.001, "max_tokens": 256}) llm = ManifestWrapper(    client=manifest, llm_kwargs={"temperature": 0.001, "max_tokens": 256})  # Map reduce examplefrom langchain import PromptTemplatefrom langchain.text_splitter import CharacterTextSplitterfrom langchain.chains.mapreduce import MapReduceChain_prompt = """Write a concise summary of the following:{text}CONCISE SUMMARY:"""prompt = PromptTemplate(template=_prompt, input_variables=["text"])text_splitter = CharacterTextSplitter()mp_chain = MapReduceChain.from_params(llm, prompt, text_splitter) # Map reduce examplefrom langchain import PromptTemplatefrom langchain.text_splitter import CharacterTextSplitterfrom langchain.chains.mapreduce import MapReduceChain_prompt = """Write a concise summary of the following:{text}CONCISE SUMMARY:"""prompt = PromptTemplate(template=_prompt, input_variables=["text"])text_splitter = CharacterTextSplitter()mp_chain = MapReduceChain.from_params(llm, prompt, text_splitter)  API Reference:CharacterTextSplitterMapReduceChain with open("../../../state_of_the_union.txt") as f:    state_of_the_union = f.read()mp_chain.run(state_of_the_union) with open("../../../state_of_the_union.txt") as f:    state_of_the_union = f.read()mp_chain.run(state_of_the_union)      'President Obama delivered his annual State of the Union address on Tuesday night, laying out his priorities for the coming year. Obama said the government will provide free flu vaccines to all Americans, ending the government shutdown and allowing businesses to reopen. The president also said that the government will continue to send vaccines to 112 countries, more than any other nation. "We have lost so much to COVID-19," Trump said. "Time with one another. And worst of all, so much loss of life." He said the CDC is working on a vaccine for kids under 5, and that the government will be ready with plenty of vaccines when they are available. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government is launching a "Test to Treat" initiative that will allow people to get tested at a pharmacy and get antiviral pills on the spot at no cost. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government will continue to send vaccines to 112 countries, more than any other nation. "We are coming for your'     'President Obama delivered his annual State of the Union address on Tuesday night, laying out his priorities for the coming year. Obama said the government will provide free flu vaccines to all Americans, ending the government shutdown and allowing businesses to reopen. The president also said that the government will continue to send vaccines to 112 countries, more than any other nation. "We have lost so much to COVID-19," Trump said. "Time with one another. And worst of all, so much loss of life." He said the CDC is working on a vaccine for kids under 5, and that the government will be ready with plenty of vaccines when they are available. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government is launching a "Test to Treat" initiative that will allow people to get tested at a pharmacy and get antiviral pills on the spot at no cost. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government will continue to send vaccines to 112 countries, more than any other nation. "We are coming for your'     'President Obama delivered his annual State of the Union address on Tuesday night, laying out his priorities for the coming year. Obama said the government will provide free flu vaccines to all Americans, ending the government shutdown and allowing businesses to reopen. The president also said that the government will continue to send vaccines to 112 countries, more than any other nation. "We have lost so much to COVID-19," Trump said. "Time with one another. And worst of all, so much loss of life." He said the CDC is working on a vaccine for kids under 5, and that the government will be ready with plenty of vaccines when they are available. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government is launching a "Test to Treat" initiative that will allow people to get tested at a pharmacy and get antiviral pills on the spot at no cost. Obama says the new guidelines are a "great step forward" and that the virus is no longer a threat. He says the government will continue to send vaccines to 112 countries, more than any other nation. "We are coming for your'  from langchain.model_laboratory import ModelLaboratorymanifest1 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5000"    ),    llm_kwargs={"temperature": 0.01},)manifest2 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5001"    ),    llm_kwargs={"temperature": 0.01},)manifest3 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5002"    ),    llm_kwargs={"temperature": 0.01},)llms = [manifest1, manifest2, manifest3]model_lab = ModelLaboratory(llms) from langchain.model_laboratory import ModelLaboratorymanifest1 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5000"    ),    llm_kwargs={"temperature": 0.01},)manifest2 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5001"    ),    llm_kwargs={"temperature": 0.01},)manifest3 = ManifestWrapper(    client=Manifest(        client_name="huggingface", client_connection="http://127.0.0.1:5002"    ),    llm_kwargs={"temperature": 0.01},)llms = [manifest1, manifest2, manifest3]model_lab = ModelLaboratory(llms)  API Reference:ModelLaboratory model_lab.compare("What color is a flamingo?") model_lab.compare("What color is a flamingo?")      Input:    What color is a flamingo?        ManifestWrapper    Params: {'model_name': 'bigscience/T0_3B', 'model_path': 'bigscience/T0_3B', 'temperature': 0.01}    pink        ManifestWrapper    Params: {'model_name': 'EleutherAI/gpt-neo-125M', 'model_path': 'EleutherAI/gpt-neo-125M', 'temperature': 0.01}    A flamingo is a small, round        ManifestWrapper    Params: {'model_name': 'google/flan-t5-xl', 'model_path': 'google/flan-t5-xl', 'temperature': 0.01}    pink         Input:    What color is a flamingo?        ManifestWrapper    Params: {'model_name': 'bigscience/T0_3B', 'model_path': 'bigscience/T0_3B', 'temperature': 0.01}    pink        ManifestWrapper    Params: {'model_name': 'EleutherAI/gpt-neo-125M', 'model_path': 'EleutherAI/gpt-neo-125M', 'temperature': 0.01}    A flamingo is a small, round        ManifestWrapper    Params: {'model_name': 'google/flan-t5-xl', 'model_path': 'google/flan-t5-xl', 'temperature': 0.01}    pink         Input:    What color is a flamingo?        ManifestWrapper    Params: {'model_name': 'bigscience/T0_3B', 'model_path': 'bigscience/T0_3B', 'temperature': 0.01}    pink        ManifestWrapper    Params: {'model_name': 'EleutherAI/gpt-neo-125M', 'model_path': 'EleutherAI/gpt-neo-125M', 'temperature': 0.01}    A flamingo is a small, round        ManifestWrapper    Params: {'model_name': 'google/flan-t5-xl', 'model_path': 'google/flan-t5-xl', 'temperature': 0.01}    pink      Previous LLM Caching integrations Next Minimax Compare HF Models Compare HF Models CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright ¬© 2023 LangChain, Inc. CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlog CommunityDiscordTwitter Community GitHubPythonJS/TS GitHub MoreHomepageBlog More Copyright ¬© 2023 LangChain, Inc. Copyright ¬© 2023 LangChain, Inc. Skip to main content (#docusaurus_skipToContent_fallback) ü¶úÔ∏èüîó LangChain (/) Docs (/docs/get_started/introduction) Use cases (/docs/use_cases) Integrations (/docs/integrations) API (https://api.python.langchain.com) LangSmith (https://smith.langchain.com) JS/TS Docs (https://js.langchain.com/docs)  (https://github.com/hwchase17/langchain) Integrations (/docs/integrations) Callbacks (/docs/integrations/callbacks/) Chat models (/docs/integrations/chat/) Chat loaders (/docs/integrations/chat_loaders/) Document loaders (/docs/integrations/document_loaders/) Document transformers (/docs/integrations/document_transformers/) LLMs (/docs/integrations/llms/) AI21 (/docs/integrations/llms/ai21) Aleph Alpha (/docs/integrations/llms/aleph_alpha) Amazon API Gateway (/docs/integrations/llms/amazon_api_gateway) Anyscale (/docs/integrations/llms/anyscale) Azure ML (/docs/integrations/llms/azure_ml) Azure OpenAI (/docs/integrations/llms/azure_openai) Banana (/docs/integrations/llms/banana) Baseten (/docs/integrations/llms/baseten) Beam (/docs/integrations/llms/beam) Bedrock (/docs/integrations/llms/bedrock) Bittensor (/docs/integrations/llms/bittensor) CerebriumAI (/docs/integrations/llms/cerebriumai) ChatGLM (/docs/integrations/llms/chatglm) Clarifai (/docs/integrations/llms/clarifai) Cohere (/docs/integrations/llms/cohere) C Transformers (/docs/integrations/llms/ctransformers) CTranslate2 (/docs/integrations/llms/ctranslate2) Databricks (/docs/integrations/llms/databricks) DeepInfra (/docs/integrations/llms/deepinfra) DeepSparse (/docs/integrations/llms/deepsparse) Eden AI (/docs/integrations/llms/edenai) Fireworks (/docs/integrations/llms/fireworks) ForefrontAI (/docs/integrations/llms/forefrontai) Google Vertex AI PaLM (/docs/integrations/llms/google_vertex_ai_palm) GooseAI (/docs/integrations/llms/gooseai) GPT4All (/docs/integrations/llms/gpt4all) Hugging Face Hub (/docs/integrations/llms/huggingface_hub) Hugging Face Local Pipelines (/docs/integrations/llms/huggingface_pipelines) Huggingface TextGen Inference (/docs/integrations/llms/huggingface_textgen_inference) JSONFormer (/docs/integrations/llms/jsonformer_experimental) KoboldAI API (/docs/integrations/llms/koboldai) Llama.cpp (/docs/integrations/llms/llamacpp) LLM Caching integrations (/docs/integrations/llms/llm_caching) Manifest (/docs/integrations/llms/manifest) Minimax (/docs/integrations/llms/minimax) Modal (/docs/integrations/llms/modal) MosaicML (/docs/integrations/llms/mosaicml) NLP Cloud (/docs/integrations/llms/nlpcloud) OctoAI (/docs/integrations/llms/octoai) Ollama (/docs/integrations/llms/ollama) OpaquePrompts (/docs/integrations/llms/opaqueprompts) OpenAI (/docs/integrations/llms/openai) OpenLLM (/docs/integrations/llms/openllm) OpenLM (/docs/integrations/llms/openlm) Petals (/docs/integrations/llms/petals) PipelineAI (/docs/integrations/llms/pipelineai) Predibase (/docs/integrations/llms/predibase) Prediction Guard (/docs/integrations/llms/predictionguard) PromptLayer OpenAI (/docs/integrations/llms/promptlayer_openai) RELLM (/docs/integrations/llms/rellm_experimental) Replicate (/docs/integrations/llms/replicate) Runhouse (/docs/integrations/llms/runhouse) SageMakerEndpoint (/docs/integrations/llms/sagemaker) StochasticAI (/docs/integrations/llms/stochasticai) Nebula (Symbl.ai) (/docs/integrations/llms/symblai_nebula) TextGen (/docs/integrations/llms/textgen) Titan Takeoff (/docs/integrations/llms/titan_takeoff) Tongyi Qwen (/docs/integrations/llms/tongyi) vLLM (/docs/integrations/llms/vllm) Writer (/docs/integrations/llms/writer) Xorbits Inference (Xinference) (/docs/integrations/llms/xinference) Memory (/docs/integrations/memory/) Retrievers (/docs/integrations/retrievers/) Text embedding models (/docs/integrations/text_embedding/) Agents & Toolkits (/docs/integrations/toolkits/) Tools (/docs/integrations/tools/) Vector stores (/docs/integrations/vectorstores/) Grouped by provider (/docs/integrations/providers/)  (/) Integrations (/docs/integrations) LLMs (/docs/integrations/llms/) https://github.com/HazyResearch/manifest (https://github.com/HazyResearch/manifest) using Manifest with Langchain (https://github.com/HazyResearch/manifest/blob/main/examples/langchain_chatgpt.html) ManifestWrapper (https://api.python.langchain.com/en/latest/llms/langchain.llms.manifest.ManifestWrapper.html) CharacterTextSplitter (https://api.python.langchain.com/en/latest/text_splitter/langchain.text_splitter.CharacterTextSplitter.html) MapReduceChain (https://api.python.langchain.com/en/latest/chains/langchain.chains.mapreduce.MapReduceChain.html) ‚Äã (#compare-hf-models) ModelLaboratory (https://api.python.langchain.com/en/latest/model_laboratory/langchain.model_laboratory.ModelLaboratory.html) PreviousLLM Caching integrations (/docs/integrations/llms/llm_caching) NextMinimax (/docs/integrations/llms/minimax) Compare HF Models (#compare-hf-models) Discord (https://discord.gg/cU2adEyC7w) Twitter (https://twitter.com/LangChainAI) Python (https://github.com/hwchase17/langchain) JS/TS (https://github.com/hwchase17/langchainjs) Homepage (https://langchain.com) Blog (https://blog.langchain.dev)