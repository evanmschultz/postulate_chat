ClearML is a ML/DL development and production suite, it contains 5 main modules: In order to properly keep track of your langchain experiments and their results, you can enable the ClearML integration. We use the ClearML Experiment Manager that neatly tracks and organizes all your experiment runs. We'll be using quite some APIs in this notebook, here is a list and where to get them: First, let's just run a single LLM a few times and capture the resulting prompt-answer conversation in ClearML At this point you can already go to https://app.clear.ml and take a look at the resulting ClearML Task that was created. Among others, you should see that this notebook is saved along with any git information. The model JSON that contains the used parameters is saved as an artifact, there are also console logs and under the plots section, you'll find tables that represent the flow of the chain. Finally, if you enabled visualizations, these are stored as HTML files under debug samples. To show a more advanced workflow, let's create an agent with access to tools. The way ClearML tracks the results is not different though, only the table will look slightly different as there are other types of actions taken when compared to the earlier, simpler example. You can now also see the use of the finish=True keyword, which will fully close the ClearML Task, instead of just resetting the parameters and prompts for a new conversation. Make sure you always use a unique name argument for the clearml_callback.flush_tracker function. If not, the model parameters used for a run will override the previous run! If you close the ClearML Callback using clearml_callback.flush_tracker(..., finish=True) the Callback cannot be used anymore. Make a new one if you want to keep logging. Check out the rest of the open source ClearML ecosystem, there is a data version manager, a remote execution agent, automated pipelines and much more! IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerActiveloop Deep LakeAI21 LabsAimAINetworkAirbyteAirtableAleph AlphaAlibaba Cloud OpensearchAmazon API GatewayAnalyticDBAnnoyAnyscaleApifyArangoDBArgillaArthurArxivAtlasAwaDBAWS S3 DirectoryAZLyricsAzure Blob StorageAzure Cognitive SearchAzure OpenAIBagelDBBananaBasetenBeamBedrockBiliBiliNIBittensorBlackboardBrave SearchCassandraCerebriumAIChaindeskChromaClarifaiClearMLClickHouseCnosDBCohereCollege ConfidentialCometConfident AIConfluenceC TransformersDashVectorDatabricksDatadog TracingDatadog LogsDataForSEODeepInfraDeepSparseDiffbotDingoDiscordDocArrayDocugamiDuckDBElasticsearchEpsillaEverNoteFacebook ChatFacebook FaissFigmaFireworksFlyteForefrontAIGitGitBookGoldenGoogle BigQueryGoogle Cloud StorageGoogle DriveGoogle SearchGoogle SerperGoogle Vertex AI MatchingEngineGooseAIGPT4AllGraphsignalGrobidGutenbergHacker NewsHazy ResearchHeliconeHologresHugging FaceiFixitIMSDbInfinoJinaKonkoLanceDBLangChain Decorators ‚ú®Llama.cppLog10MarqoMediaWikiDumpMeilisearchMetalMicrosoft OneDriveMicrosoft PowerPointMicrosoft WordMilvusMinimaxMLflow AI GatewayMLflowModalModelScopeModern TreasuryMomentoMongoDB AtlasMotherduckMyScaleNeo4jNLPCloudNotion DBObsidianOpenAIOpenLLMOpenSearchOpenWeatherMapPetalsPostgres EmbeddingPGVectorPineconePipelineAIPortkeyPredibasePrediction GuardPromptLayerPsychicPubMedQdrantRay ServeRebuffRedditRedisReplicateRoamRocksetRunhouseRWKV-4SageMaker EndpointSageMaker TrackingScaNNSearxNG Search APISerpAPIShale ProtocolSingleStoreDBscikit-learnSlackspaCySpreedlyStarRocksStochasticAIStripeSupabase (Postgres)NebulaTairTelegramTencentVectorDBTensorFlow DatasetsTigris2MarkdownTrelloTruLensTwitterTypesenseUnstructuredUSearchVearchVectaraVespaWandB TracingWeights & BiasesWeatherWeaviateWhatsAppWhyLabsWikipediaWolfram AlphaWriterXataXorbits Inference (Xinference)Yeager.aiYouTubeZepZilliz Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by providerActiveloop Deep LakeAI21 LabsAimAINetworkAirbyteAirtableAleph AlphaAlibaba Cloud OpensearchAmazon API GatewayAnalyticDBAnnoyAnyscaleApifyArangoDBArgillaArthurArxivAtlasAwaDBAWS S3 DirectoryAZLyricsAzure Blob StorageAzure Cognitive SearchAzure OpenAIBagelDBBananaBasetenBeamBedrockBiliBiliNIBittensorBlackboardBrave SearchCassandraCerebriumAIChaindeskChromaClarifaiClearMLClickHouseCnosDBCohereCollege ConfidentialCometConfident AIConfluenceC TransformersDashVectorDatabricksDatadog TracingDatadog LogsDataForSEODeepInfraDeepSparseDiffbotDingoDiscordDocArrayDocugamiDuckDBElasticsearchEpsillaEverNoteFacebook ChatFacebook FaissFigmaFireworksFlyteForefrontAIGitGitBookGoldenGoogle BigQueryGoogle Cloud StorageGoogle DriveGoogle SearchGoogle SerperGoogle Vertex AI MatchingEngineGooseAIGPT4AllGraphsignalGrobidGutenbergHacker NewsHazy ResearchHeliconeHologresHugging FaceiFixitIMSDbInfinoJinaKonkoLanceDBLangChain Decorators ‚ú®Llama.cppLog10MarqoMediaWikiDumpMeilisearchMetalMicrosoft OneDriveMicrosoft PowerPointMicrosoft WordMilvusMinimaxMLflow AI GatewayMLflowModalModelScopeModern TreasuryMomentoMongoDB AtlasMotherduckMyScaleNeo4jNLPCloudNotion DBObsidianOpenAIOpenLLMOpenSearchOpenWeatherMapPetalsPostgres EmbeddingPGVectorPineconePipelineAIPortkeyPredibasePrediction GuardPromptLayerPsychicPubMedQdrantRay ServeRebuffRedditRedisReplicateRoamRocksetRunhouseRWKV-4SageMaker EndpointSageMaker TrackingScaNNSearxNG Search APISerpAPIShale ProtocolSingleStoreDBscikit-learnSlackspaCySpreedlyStarRocksStochasticAIStripeSupabase (Postgres)NebulaTairTelegramTencentVectorDBTensorFlow DatasetsTigris2MarkdownTrelloTruLensTwitterTypesenseUnstructuredUSearchVearchVectaraVespaWandB TracingWeights & BiasesWeatherWeaviateWhatsAppWhyLabsWikipediaWolfram AlphaWriterXataXorbits Inference (Xinference)Yeager.aiYouTubeZepZilliz Activeloop Deep Lake AI21 Labs Aim AINetwork Airbyte Airtable Aleph Alpha Alibaba Cloud Opensearch Amazon API Gateway AnalyticDB Annoy Anyscale Apify ArangoDB Argilla Arthur Arxiv Atlas AwaDB AWS S3 Directory AZLyrics Azure Blob Storage Azure Cognitive Search Azure OpenAI BagelDB Banana Baseten Beam Bedrock BiliBili NIBittensor Blackboard Brave Search Cassandra CerebriumAI Chaindesk Chroma Clarifai ClearML ClickHouse CnosDB Cohere College Confidential Comet Confident AI Confluence C Transformers DashVector Databricks Datadog Tracing Datadog Logs DataForSEO DeepInfra DeepSparse Diffbot Dingo Discord DocArray Docugami DuckDB Elasticsearch Epsilla EverNote Facebook Chat Facebook Faiss Figma Fireworks Flyte ForefrontAI Git GitBook Golden Google BigQuery Google Cloud Storage Google Drive Google Search Google Serper Google Vertex AI MatchingEngine GooseAI GPT4All Graphsignal Grobid Gutenberg Hacker News Hazy Research Helicone Hologres Hugging Face iFixit IMSDb Infino Jina Konko LanceDB LangChain Decorators ‚ú® Llama.cpp Log10 Marqo MediaWikiDump Meilisearch Metal Microsoft OneDrive Microsoft PowerPoint Microsoft Word Milvus Minimax MLflow AI Gateway MLflow Modal ModelScope Modern Treasury Momento MongoDB Atlas Motherduck MyScale Neo4j NLPCloud Notion DB Obsidian OpenAI OpenLLM OpenSearch OpenWeatherMap Petals Postgres Embedding PGVector Pinecone PipelineAI Portkey Predibase Prediction Guard PromptLayer Psychic PubMed Qdrant Ray Serve Rebuff Reddit Redis Replicate Roam Rockset Runhouse RWKV-4 SageMaker Endpoint SageMaker Tracking ScaNN SearxNG Search API SerpAPI Shale Protocol SingleStoreDB scikit-learn Slack spaCy Spreedly StarRocks StochasticAI Stripe Supabase (Postgres) Nebula Tair Telegram TencentVectorDB TensorFlow Datasets Tigris 2Markdown Trello TruLens Twitter Typesense Unstructured USearch Vearch Vectara Vespa WandB Tracing Weights & Biases Weather Weaviate WhatsApp WhyLabs Wikipedia Wolfram Alpha Writer Xata Xorbits Inference (Xinference) Yeager.ai YouTube Zep Zilliz  Integrations Grouped by provider ClearML Experiment Manager - Automagical experiment tracking, environments and results MLOps - Orchestration, Automation & Pipelines solution for ML/DL jobs (K8s / Cloud / bare-metal) Data-Management - Fully differentiable data management & version control solution on top of object-storage (S3 / GS / Azure / NAS) Model-Serving - cloud-ready Scalable model serving solution! Deploy new model endpoints in under 5 minutes Includes optimized GPU serving support backed by Nvidia-Triton with out-of-the-box Model Monitoring Fire Reports - Create and share rich MarkDown documents supporting embeddable online content ClearML: https://app.clear.ml/settings/workspace-configuration OpenAI: https://platform.openai.com/account/api-keys SerpAPI (google search): https://serpapi.com/dashboard ClearMLCallbackHandler StdOutCallbackHandler OpenAI initialize_agent load_tools AgentType Make sure you always use a unique name argument for the clearml_callback.flush_tracker function. If not, the model parameters used for a run will override the previous run! If you close the ClearML Callback using clearml_callback.flush_tracker(..., finish=True) the Callback cannot be used anymore. Make a new one if you want to keep logging. Check out the rest of the open source ClearML ecosystem, there is a data version manager, a remote execution agent, automated pipelines and much more! Installation and SetupGetting API Credentials Getting API Credentials CallbacksScenario 1: Just an LLMScenario 2: Creating an agent with toolsTips and Next Steps Scenario 1: Just an LLM Scenario 2: Creating an agent with tools Tips and Next Steps Discord Twitter Python JS/TS Homepage Blog Skip to main contentü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLKIntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerActiveloop Deep LakeAI21 LabsAimAINetworkAirbyteAirtableAleph AlphaAlibaba Cloud OpensearchAmazon API GatewayAnalyticDBAnnoyAnyscaleApifyArangoDBArgillaArthurArxivAtlasAwaDBAWS S3 DirectoryAZLyricsAzure Blob StorageAzure Cognitive SearchAzure OpenAIBagelDBBananaBasetenBeamBedrockBiliBiliNIBittensorBlackboardBrave SearchCassandraCerebriumAIChaindeskChromaClarifaiClearMLClickHouseCnosDBCohereCollege ConfidentialCometConfident AIConfluenceC TransformersDashVectorDatabricksDatadog TracingDatadog LogsDataForSEODeepInfraDeepSparseDiffbotDingoDiscordDocArrayDocugamiDuckDBElasticsearchEpsillaEverNoteFacebook ChatFacebook FaissFigmaFireworksFlyteForefrontAIGitGitBookGoldenGoogle BigQueryGoogle Cloud StorageGoogle DriveGoogle SearchGoogle SerperGoogle Vertex AI MatchingEngineGooseAIGPT4AllGraphsignalGrobidGutenbergHacker NewsHazy ResearchHeliconeHologresHugging FaceiFixitIMSDbInfinoJinaKonkoLanceDBLangChain Decorators ‚ú®Llama.cppLog10MarqoMediaWikiDumpMeilisearchMetalMicrosoft OneDriveMicrosoft PowerPointMicrosoft WordMilvusMinimaxMLflow AI GatewayMLflowModalModelScopeModern TreasuryMomentoMongoDB AtlasMotherduckMyScaleNeo4jNLPCloudNotion DBObsidianOpenAIOpenLLMOpenSearchOpenWeatherMapPetalsPostgres EmbeddingPGVectorPineconePipelineAIPortkeyPredibasePrediction GuardPromptLayerPsychicPubMedQdrantRay ServeRebuffRedditRedisReplicateRoamRocksetRunhouseRWKV-4SageMaker EndpointSageMaker TrackingScaNNSearxNG Search APISerpAPIShale ProtocolSingleStoreDBscikit-learnSlackspaCySpreedlyStarRocksStochasticAIStripeSupabase (Postgres)NebulaTairTelegramTencentVectorDBTensorFlow DatasetsTigris2MarkdownTrelloTruLensTwitterTypesenseUnstructuredUSearchVearchVectaraVespaWandB TracingWeights & BiasesWeatherWeaviateWhatsAppWhyLabsWikipediaWolfram AlphaWriterXataXorbits Inference (Xinference)Yeager.aiYouTubeZepZillizIntegrationsGrouped by providerClearMLOn this pageClearMLClearML is a ML/DL development and production suite, it contains 5 main modules:Experiment Manager - Automagical experiment tracking, environments and resultsMLOps - Orchestration, Automation & Pipelines solution for ML/DL jobs (K8s / Cloud / bare-metal)Data-Management - Fully differentiable data management & version control solution on top of object-storage (S3 / GS / Azure / NAS)Model-Serving - cloud-ready Scalable model serving solution! with out-of-the-box Model MonitoringFire Reports - Create and share rich MarkDown documents supporting embeddable online contentIn order to properly keep track of your langchain experiments and their results, you can enable the ClearML integration. We use the ClearML Experiment Manager that neatly tracks and organizes all your experiment runs.Installation and Setup‚Äãpip install clearmlpip install pandaspip install textstatpip install spacypython -m spacy download en_core_web_smGetting API Credentials‚ÄãWe'll be using quite some APIs in this notebook, here is a list and where to get them:ClearML: https://app.clear.ml/settings/workspace-configurationOpenAI: https://platform.openai.com/account/api-keysSerpAPI (google search): https://serpapi.com/dashboardimport osos.environ["CLEARML_API_ACCESS_KEY"] = ""os.environ["CLEARML_API_SECRET_KEY"] = ""os.environ["OPENAI_API_KEY"] = ""os.environ["SERPAPI_API_KEY"] = ""Callbacks‚Äãfrom langchain.callbacks import ClearMLCallbackHandlerAPI Reference:ClearMLCallbackHandlerfrom datetime import datetimefrom langchain.callbacks import StdOutCallbackHandlerfrom langchain.llms import OpenAI# Setup and use the ClearML Callbackclearml_callback = ClearMLCallbackHandler(    task_type="inference",    project_name="langchain_callback_demo",    task_name="llm",    tags=["test"],    # Change the following parameters based on the amount of detail you want tracked    visualize=True,    complexity_metrics=True,    stream_logs=True,)callbacks = [StdOutCallbackHandler(), clearml_callback]# Get the OpenAI model ready to gollm = OpenAI(temperature=0, callbacks=callbacks)API Reference:StdOutCallbackHandlerOpenAI    The clearml callback is currently in beta and is subject to change based on updates to `langchain`. Please report any issues to https://github.com/allegroai/clearml/issues with the tag `langchain`.Scenario 1: Just an LLM‚ÄãFirst, let's just run a single LLM a few times and capture the resulting prompt-answer conversation in ClearML# SCENARIO 1 - LLMllm_result = llm.generate(["Tell me a joke", "Tell me a poem"] * 3)# After every generation run, use flush to make sure all the metrics# prompts and other output are properly saved separatelyclearml_callback.flush_tracker(langchain_asset=llm, name="simple_sequential")    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action_records':           action    name  step  starts  ends  errors  text_ctr  chain_starts  \    0   on_llm_start  OpenAI     1       1     0       0         0             0       1   on_llm_start  OpenAI     1       1     0       0         0             0       2   on_llm_start  OpenAI     1       1     0       0         0             0       3   on_llm_start  OpenAI     1       1     0       0         0             0       4   on_llm_start  OpenAI     1       1     0       0         0             0       5   on_llm_start  OpenAI     1       1     0       0         0             0       6     on_llm_end     NaN     2       1     1       0         0             0       7     on_llm_end     NaN     2       1     1       0         0             0       8     on_llm_end     NaN     2       1     1       0         0             0       9     on_llm_end     NaN     2       1     1       0         0             0       10    on_llm_end     NaN     2       1     1       0         0             0       11    on_llm_end     NaN     2       1     1       0         0             0       12  on_llm_start  OpenAI     3       2     1       0         0             0       13  on_llm_start  OpenAI     3       2     1       0         0             0       14  on_llm_start  OpenAI     3       2     1       0         0             0       15  on_llm_start  OpenAI     3       2     1       0         0             0       16  on_llm_start  OpenAI     3       2     1       0         0             0       17  on_llm_start  OpenAI     3       2     1       0         0             0       18    on_llm_end     NaN     4       2     2       0         0             0       19    on_llm_end     NaN     4       2     2       0         0             0       20    on_llm_end     NaN     4       2     2       0         0             0       21    on_llm_end     NaN     4       2     2       0         0             0       22    on_llm_end     NaN     4       2     2       0         0             0       23    on_llm_end     NaN     4       2     2       0         0             0               chain_ends  llm_starts  ...  difficult_words  linsear_write_formula  \    0            0           1  ...              NaN                    NaN       1            0           1  ...              NaN                    NaN       2            0           1  ...              NaN                    NaN       3            0           1  ...              NaN                    NaN       4            0           1  ...              NaN                    NaN       5            0           1  ...              NaN                    NaN       6            0           1  ...              0.0                    5.5       7            0           1  ...              2.0                    6.5       8            0           1  ...              0.0                    5.5       9            0           1  ...              2.0                    6.5       10           0           1  ...              0.0                    5.5       11           0           1  ...              2.0                    6.5       12           0           2  ...              NaN                    NaN       13           0           2  ...              NaN                    NaN       14           0           2  ...              NaN                    NaN       15           0           2  ...              NaN                    NaN       16           0           2  ...              NaN                    NaN       17           0           2  ...              NaN                    NaN       18           0           2  ...              0.0                    5.5       19           0           2  ...              2.0                    6.5       20           0           2  ...              0.0                    5.5       21           0           2  ...              2.0                    6.5       22           0           2  ...              0.0                    5.5       23           0           2  ...              2.0                    6.5               gunning_fog      text_standard  fernandez_huerta szigriszt_pazos  \    0           NaN                NaN               NaN             NaN       1           NaN                NaN               NaN             NaN       2           NaN                NaN               NaN             NaN       3           NaN                NaN               NaN             NaN       4           NaN                NaN               NaN             NaN       5           NaN                NaN               NaN             NaN       6          5.20  5th and 6th grade            133.58          131.54       7          8.28  6th and 7th grade            115.58          112.37       8          5.20  5th and 6th grade            133.58          131.54       9          8.28  6th and 7th grade            115.58          112.37       10         5.20  5th and 6th grade            133.58          131.54       11         8.28  6th and 7th grade            115.58          112.37       12          NaN                NaN               NaN             NaN       13          NaN                NaN               NaN             NaN       14          NaN                NaN               NaN             NaN       15          NaN                NaN               NaN             NaN       16          NaN                NaN               NaN             NaN       17          NaN                NaN               NaN             NaN       18         5.20  5th and 6th grade            133.58          131.54       19         8.28  6th and 7th grade            115.58          112.37       20         5.20  5th and 6th grade            133.58          131.54       21         8.28  6th and 7th grade            115.58          112.37       22         5.20  5th and 6th grade            133.58          131.54       23         8.28  6th and 7th grade            115.58          112.37               gutierrez_polini  crawford  gulpease_index   osman      0                NaN       NaN             NaN     NaN      1                NaN       NaN             NaN     NaN      2                NaN       NaN             NaN     NaN      3                NaN       NaN             NaN     NaN      4                NaN       NaN             NaN     NaN      5                NaN       NaN             NaN     NaN      6              62.30      -0.2            79.8  116.91      7              54.83       1.4            72.1  100.17      8              62.30      -0.2            79.8  116.91      9              54.83       1.4            72.1  100.17      10             62.30      -0.2            79.8  116.91      11             54.83       1.4            72.1  100.17      12               NaN       NaN             NaN     NaN      13               NaN       NaN             NaN     NaN      14               NaN       NaN             NaN     NaN      15               NaN       NaN             NaN     NaN      16               NaN       NaN             NaN     NaN      17               NaN       NaN             NaN     NaN      18             62.30      -0.2            79.8  116.91      19             54.83       1.4            72.1  100.17      20             62.30      -0.2            79.8  116.91      21             54.83       1.4            72.1  100.17      22             62.30      -0.2            79.8  116.91      23             54.83       1.4            72.1  100.17          [24 rows x 39 columns], 'session_analysis':     prompt_step         prompts    name  output_step  \    0             1  Tell me a joke  OpenAI            2       1             1  Tell me a poem  OpenAI            2       2             1  Tell me a joke  OpenAI            2       3             1  Tell me a poem  OpenAI            2       4             1  Tell me a joke  OpenAI            2       5             1  Tell me a poem  OpenAI            2       6             3  Tell me a joke  OpenAI            4       7             3  Tell me a poem  OpenAI            4       8             3  Tell me a joke  OpenAI            4       9             3  Tell me a poem  OpenAI            4       10            3  Tell me a joke  OpenAI            4       11            3  Tell me a poem  OpenAI            4                                                          output  \    0   \n\nQ: What did the fish say when it hit the w...       1   \n\nRoses are red,\nViolets are blue,\nSugar i...       2   \n\nQ: What did the fish say when it hit the w...       3   \n\nRoses are red,\nViolets are blue,\nSugar i...       4   \n\nQ: What did the fish say when it hit the w...       5   \n\nRoses are red,\nViolets are blue,\nSugar i...       6   \n\nQ: What did the fish say when it hit the w...       7   \n\nRoses are red,\nViolets are blue,\nSugar i...       8   \n\nQ: What did the fish say when it hit the w...       9   \n\nRoses are red,\nViolets are blue,\nSugar i...       10  \n\nQ: What did the fish say when it hit the w...       11  \n\nRoses are red,\nViolets are blue,\nSugar i...               token_usage_total_tokens  token_usage_prompt_tokens  \    0                        162                         24       1                        162                         24       2                        162                         24       3                        162                         24       4                        162                         24       5                        162                         24       6                        162                         24       7                        162                         24       8                        162                         24       9                        162                         24       10                       162                         24       11                       162                         24               token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             138               109.04                   1.3       1                             138                83.66                   4.8       2                             138               109.04                   1.3       3                             138                83.66                   4.8       4                             138               109.04                   1.3       5                             138                83.66                   4.8       6                             138               109.04                   1.3       7                             138                83.66                   4.8       8                             138               109.04                   1.3       9                             138                83.66                   4.8       10                            138               109.04                   1.3       11                            138                83.66                   4.8               ...  difficult_words  linsear_write_formula  gunning_fog  \    0   ...                0                    5.5         5.20       1   ...                2                    6.5         8.28       2   ...                0                    5.5         5.20       3   ...                2                    6.5         8.28       4   ...                0                    5.5         5.20       5   ...                2                    6.5         8.28       6   ...                0                    5.5         5.20       7   ...                2                    6.5         8.28       8   ...                0                    5.5         5.20       9   ...                2                    6.5         8.28       10  ...                0                    5.5         5.20       11  ...                2                    6.5         8.28                   text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0   5th and 6th grade            133.58           131.54             62.30       1   6th and 7th grade            115.58           112.37             54.83       2   5th and 6th grade            133.58           131.54             62.30       3   6th and 7th grade            115.58           112.37             54.83       4   5th and 6th grade            133.58           131.54             62.30       5   6th and 7th grade            115.58           112.37             54.83       6   5th and 6th grade            133.58           131.54             62.30       7   6th and 7th grade            115.58           112.37             54.83       8   5th and 6th grade            133.58           131.54             62.30       9   6th and 7th grade            115.58           112.37             54.83       10  5th and 6th grade            133.58           131.54             62.30       11  6th and 7th grade            115.58           112.37             54.83              crawford  gulpease_index   osman      0      -0.2            79.8  116.91      1       1.4            72.1  100.17      2      -0.2            79.8  116.91      3       1.4            72.1  100.17      4      -0.2            79.8  116.91      5       1.4            72.1  100.17      6      -0.2            79.8  116.91      7       1.4            72.1  100.17      8      -0.2            79.8  116.91      9       1.4            72.1  100.17      10     -0.2            79.8  116.91      11      1.4            72.1  100.17          [12 rows x 24 columns]}    2023-03-29 14:00:25,948 - clearml.Task - INFO - Completed model upload to https://files.clear.ml/langchain_callback_demo/llm.988bd727b0e94a29a3ac0ee526813545/models/simple_sequentialAt this point you can already go to https://app.clear.ml and take a look at the resulting ClearML Task that was created.Among others, you should see that this notebook is saved along with any git information. The model JSON that contains the used parameters is saved as an artifact, there are also console logs and under the plots section, you'll find tables that represent the flow of the chain.Finally, if you enabled visualizations, these are stored as HTML files under debug samples.Scenario 2: Creating an agent with tools‚ÄãTo show a more advanced workflow, let's create an agent with access to tools. The way ClearML tracks the results is not different though, only the table will look slightly different as there are other types of actions taken when compared to the earlier, simpler example.You can now also see the use of the finish=True keyword, which will fully close the ClearML Task, instead of just resetting the parameters and prompts for a new conversation.from langchain.agents import initialize_agent, load_toolsfrom langchain.agents import AgentType# SCENARIO 2 - Agent with Toolstools = load_tools(["serpapi", "llm-math"], llm=llm, callbacks=callbacks)agent = initialize_agent(    tools,    llm,    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,    callbacks=callbacks,)agent.run("Who is the wife of the person who sang summer of 69?")clearml_callback.flush_tracker(    langchain_asset=agent, name="Agent with Tools", finish=True)API Reference:initialize_agentload_toolsAgentType            > Entering new AgentExecutor chain...    {'action': 'on_chain_start', 'name': 'AgentExecutor', 'step': 1, 'starts': 1, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 0, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'input': 'Who is the wife of the person who sang summer of 69?'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 2, 'starts': 2, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 189, 'token_usage_completion_tokens': 34, 'token_usage_total_tokens': 223, 'model_name': 'text-davinci-003', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 91.61, 'flesch_kincaid_grade': 3.8, 'smog_index': 0.0, 'coleman_liau_index': 3.41, 'automated_readability_index': 3.5, 'dale_chall_readability_score': 6.06, 'difficult_words': 2, 'linsear_write_formula': 5.75, 'gunning_fog': 5.4, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 121.07, 'szigriszt_pazos': 119.5, 'gutierrez_polini': 54.91, 'crawford': 0.9, 'gulpease_index': 72.7, 'osman': 92.16}     I need to find out who sang summer of 69 and then find out who their wife is.    Action: Search    Action Input: "Who sang summer of 69"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who sang summer of 69', 'log': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'step': 4, 'starts': 3, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 1, 'tool_ends': 0, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who sang summer of 69', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 5, 'starts': 4, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 0, 'agent_ends': 0}        Observation: Bryan Adams - Summer Of 69 (Official Music Video).    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams - Summer Of 69 (Official Music Video).', 'step': 6, 'starts': 4, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 7, 'starts': 5, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 242, 'token_usage_completion_tokens': 28, 'token_usage_total_tokens': 270, 'model_name': 'text-davinci-003', 'step': 8, 'starts': 5, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'text': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 94.66, 'flesch_kincaid_grade': 2.7, 'smog_index': 0.0, 'coleman_liau_index': 4.73, 'automated_readability_index': 4.0, 'dale_chall_readability_score': 7.16, 'difficult_words': 2, 'linsear_write_formula': 4.25, 'gunning_fog': 4.2, 'text_standard': '4th and 5th grade', 'fernandez_huerta': 124.13, 'szigriszt_pazos': 119.2, 'gutierrez_polini': 52.26, 'crawford': 0.7, 'gulpease_index': 74.7, 'osman': 84.2}     I need to find out who Bryan Adams is married to.    Action: Search    Action Input: "Who is Bryan Adams married to"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who is Bryan Adams married to', 'log': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'step': 9, 'starts': 6, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 3, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who is Bryan Adams married to', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 10, 'starts': 7, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 1, 'agent_ends': 0}        Observation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...', 'step': 11, 'starts': 7, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 12, 'starts': 8, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought: I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"\nObservation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 314, 'token_usage_completion_tokens': 18, 'token_usage_total_tokens': 332, 'model_name': 'text-davinci-003', 'step': 13, 'starts': 8, 'ends': 5, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'text': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 81.29, 'flesch_kincaid_grade': 3.7, 'smog_index': 0.0, 'coleman_liau_index': 5.75, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 7.37, 'difficult_words': 1, 'linsear_write_formula': 2.5, 'gunning_fog': 2.8, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 115.7, 'szigriszt_pazos': 110.84, 'gutierrez_polini': 49.79, 'crawford': 0.7, 'gulpease_index': 85.4, 'osman': 83.14}     I now know the final answer.    Final Answer: Bryan Adams has never been married.    {'action': 'on_agent_finish', 'output': 'Bryan Adams has never been married.', 'log': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'step': 14, 'starts': 8, 'ends': 6, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}        > Finished chain.    {'action': 'on_chain_end', 'outputs': 'Bryan Adams has never been married.', 'step': 15, 'starts': 8, 'ends': 7, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 1, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}    {'action_records':              action    name  step  starts  ends  errors  text_ctr  \    0      on_llm_start  OpenAI     1       1     0       0         0       1      on_llm_start  OpenAI     1       1     0       0         0       2      on_llm_start  OpenAI     1       1     0       0         0       3      on_llm_start  OpenAI     1       1     0       0         0       4      on_llm_start  OpenAI     1       1     0       0         0       ..              ...     ...   ...     ...   ...     ...       ...       66      on_tool_end     NaN    11       7     4       0         0       67     on_llm_start  OpenAI    12       8     4       0         0       68       on_llm_end     NaN    13       8     5       0         0       69  on_agent_finish     NaN    14       8     6       0         0       70     on_chain_end     NaN    15       8     7       0         0               chain_starts  chain_ends  llm_starts  ...  gulpease_index  osman  input  \    0              0           0           1  ...             NaN    NaN    NaN       1              0           0           1  ...             NaN    NaN    NaN       2              0           0           1  ...             NaN    NaN    NaN       3              0           0           1  ...             NaN    NaN    NaN       4              0           0           1  ...             NaN    NaN    NaN       ..           ...         ...         ...  ...             ...    ...    ...       66             1           0           2  ...             NaN    NaN    NaN       67             1           0           3  ...             NaN    NaN    NaN       68             1           0           3  ...            85.4  83.14    NaN       69             1           0           3  ...             NaN    NaN    NaN       70             1           1           3  ...             NaN    NaN    NaN               tool  tool_input                                                log  \    0    NaN         NaN                                                NaN       1    NaN         NaN                                                NaN       2    NaN         NaN                                                NaN       3    NaN         NaN                                                NaN       4    NaN         NaN                                                NaN       ..   ...         ...                                                ...       66   NaN         NaN                                                NaN       67   NaN         NaN                                                NaN       68   NaN         NaN                                                NaN       69   NaN         NaN   I now know the final answer.\nFinal Answer: B...       70   NaN         NaN                                                NaN               input_str  description                                             output  \    0         NaN          NaN                                                NaN       1         NaN          NaN                                                NaN       2         NaN          NaN                                                NaN       3         NaN          NaN                                                NaN       4         NaN          NaN                                                NaN       ..        ...          ...                                                ...       66        NaN          NaN  Bryan Adams has never married. In the 1990s, h...       67        NaN          NaN                                                NaN       68        NaN          NaN                                                NaN       69        NaN          NaN                Bryan Adams has never been married.       70        NaN          NaN                                                NaN                                           outputs      0                                   NaN      1                                   NaN      2                                   NaN      3                                   NaN      4                                   NaN      ..                                  ...      66                                  NaN      67                                  NaN      68                                  NaN      69                                  NaN      70  Bryan Adams has never been married.          [71 rows x 47 columns], 'session_analysis':    prompt_step                                            prompts    name  \    0            2  Answer the following questions as best you can...  OpenAI       1            7  Answer the following questions as best you can...  OpenAI       2           12  Answer the following questions as best you can...  OpenAI              output_step                                             output  \    0            3   I need to find out who sang summer of 69 and ...       1            8   I need to find out who Bryan Adams is married...       2           13   I now know the final answer.\nFinal Answer: B...              token_usage_total_tokens  token_usage_prompt_tokens  \    0                       223                        189       1                       270                        242       2                       332                        314              token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             34                91.61                   3.8       1                             28                94.66                   2.7       2                             18                81.29                   3.7              ...  difficult_words  linsear_write_formula  gunning_fog  \    0  ...                2                   5.75          5.4       1  ...                2                   4.25          4.2       2  ...                1                   2.50          2.8                  text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0  3rd and 4th grade            121.07           119.50             54.91       1  4th and 5th grade            124.13           119.20             52.26       2  3rd and 4th grade            115.70           110.84             49.79             crawford  gulpease_index  osman      0      0.9            72.7  92.16      1      0.7            74.7  84.20      2      0.7            85.4  83.14          [3 rows x 24 columns]}    Could not update last created model in Task 988bd727b0e94a29a3ac0ee526813545, Task status 'completed' cannot be updatedTips and Next Steps‚ÄãMake sure you always use a unique name argument for the clearml_callback.flush_tracker function. If not, the model parameters used for a run will override the previous run!If you close the ClearML Callback using clearml_callback.flush_tracker(..., finish=True) the Callback cannot be used anymore. Make a new one if you want to keep logging.Check out the rest of the open source ClearML ecosystem, there is a data version manager, a remote execution agent, automated pipelines and much more!PreviousClarifaiNextClickHouseInstallation and SetupGetting API CredentialsCallbacksScenario 1: Just an LLMScenario 2: Creating an agent with toolsTips and Next StepsCommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright ¬© 2023 LangChain, Inc. Skip to main content ü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLK ü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPI LangSmithJS/TS DocsCTRLK  CTRLK CTRLK  CTRLK   IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerActiveloop Deep LakeAI21 LabsAimAINetworkAirbyteAirtableAleph AlphaAlibaba Cloud OpensearchAmazon API GatewayAnalyticDBAnnoyAnyscaleApifyArangoDBArgillaArthurArxivAtlasAwaDBAWS S3 DirectoryAZLyricsAzure Blob StorageAzure Cognitive SearchAzure OpenAIBagelDBBananaBasetenBeamBedrockBiliBiliNIBittensorBlackboardBrave SearchCassandraCerebriumAIChaindeskChromaClarifaiClearMLClickHouseCnosDBCohereCollege ConfidentialCometConfident AIConfluenceC TransformersDashVectorDatabricksDatadog TracingDatadog LogsDataForSEODeepInfraDeepSparseDiffbotDingoDiscordDocArrayDocugamiDuckDBElasticsearchEpsillaEverNoteFacebook ChatFacebook FaissFigmaFireworksFlyteForefrontAIGitGitBookGoldenGoogle BigQueryGoogle Cloud StorageGoogle DriveGoogle SearchGoogle SerperGoogle Vertex AI MatchingEngineGooseAIGPT4AllGraphsignalGrobidGutenbergHacker NewsHazy ResearchHeliconeHologresHugging FaceiFixitIMSDbInfinoJinaKonkoLanceDBLangChain Decorators ‚ú®Llama.cppLog10MarqoMediaWikiDumpMeilisearchMetalMicrosoft OneDriveMicrosoft PowerPointMicrosoft WordMilvusMinimaxMLflow AI GatewayMLflowModalModelScopeModern TreasuryMomentoMongoDB AtlasMotherduckMyScaleNeo4jNLPCloudNotion DBObsidianOpenAIOpenLLMOpenSearchOpenWeatherMapPetalsPostgres EmbeddingPGVectorPineconePipelineAIPortkeyPredibasePrediction GuardPromptLayerPsychicPubMedQdrantRay ServeRebuffRedditRedisReplicateRoamRocksetRunhouseRWKV-4SageMaker EndpointSageMaker TrackingScaNNSearxNG Search APISerpAPIShale ProtocolSingleStoreDBscikit-learnSlackspaCySpreedlyStarRocksStochasticAIStripeSupabase (Postgres)NebulaTairTelegramTencentVectorDBTensorFlow DatasetsTigris2MarkdownTrelloTruLensTwitterTypesenseUnstructuredUSearchVearchVectaraVespaWandB TracingWeights & BiasesWeatherWeaviateWhatsAppWhyLabsWikipediaWolfram AlphaWriterXataXorbits Inference (Xinference)Yeager.aiYouTubeZepZillizIntegrationsGrouped by providerClearMLOn this pageClearMLClearML is a ML/DL development and production suite, it contains 5 main modules:Experiment Manager - Automagical experiment tracking, environments and resultsMLOps - Orchestration, Automation & Pipelines solution for ML/DL jobs (K8s / Cloud / bare-metal)Data-Management - Fully differentiable data management & version control solution on top of object-storage (S3 / GS / Azure / NAS)Model-Serving - cloud-ready Scalable model serving solution! with out-of-the-box Model MonitoringFire Reports - Create and share rich MarkDown documents supporting embeddable online contentIn order to properly keep track of your langchain experiments and their results, you can enable the ClearML integration. We use the ClearML Experiment Manager that neatly tracks and organizes all your experiment runs.Installation and Setup‚Äãpip install clearmlpip install pandaspip install textstatpip install spacypython -m spacy download en_core_web_smGetting API Credentials‚ÄãWe'll be using quite some APIs in this notebook, here is a list and where to get them:ClearML: https://app.clear.ml/settings/workspace-configurationOpenAI: https://platform.openai.com/account/api-keysSerpAPI (google search): https://serpapi.com/dashboardimport osos.environ["CLEARML_API_ACCESS_KEY"] = ""os.environ["CLEARML_API_SECRET_KEY"] = ""os.environ["OPENAI_API_KEY"] = ""os.environ["SERPAPI_API_KEY"] = ""Callbacks‚Äãfrom langchain.callbacks import ClearMLCallbackHandlerAPI Reference:ClearMLCallbackHandlerfrom datetime import datetimefrom langchain.callbacks import StdOutCallbackHandlerfrom langchain.llms import OpenAI# Setup and use the ClearML Callbackclearml_callback = ClearMLCallbackHandler(    task_type="inference",    project_name="langchain_callback_demo",    task_name="llm",    tags=["test"],    # Change the following parameters based on the amount of detail you want tracked    visualize=True,    complexity_metrics=True,    stream_logs=True,)callbacks = [StdOutCallbackHandler(), clearml_callback]# Get the OpenAI model ready to gollm = OpenAI(temperature=0, callbacks=callbacks)API Reference:StdOutCallbackHandlerOpenAI    The clearml callback is currently in beta and is subject to change based on updates to `langchain`. Please report any issues to https://github.com/allegroai/clearml/issues with the tag `langchain`.Scenario 1: Just an LLM‚ÄãFirst, let's just run a single LLM a few times and capture the resulting prompt-answer conversation in ClearML# SCENARIO 1 - LLMllm_result = llm.generate(["Tell me a joke", "Tell me a poem"] * 3)# After every generation run, use flush to make sure all the metrics# prompts and other output are properly saved separatelyclearml_callback.flush_tracker(langchain_asset=llm, name="simple_sequential")    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action_records':           action    name  step  starts  ends  errors  text_ctr  chain_starts  \    0   on_llm_start  OpenAI     1       1     0       0         0             0       1   on_llm_start  OpenAI     1       1     0       0         0             0       2   on_llm_start  OpenAI     1       1     0       0         0             0       3   on_llm_start  OpenAI     1       1     0       0         0             0       4   on_llm_start  OpenAI     1       1     0       0         0             0       5   on_llm_start  OpenAI     1       1     0       0         0             0       6     on_llm_end     NaN     2       1     1       0         0             0       7     on_llm_end     NaN     2       1     1       0         0             0       8     on_llm_end     NaN     2       1     1       0         0             0       9     on_llm_end     NaN     2       1     1       0         0             0       10    on_llm_end     NaN     2       1     1       0         0             0       11    on_llm_end     NaN     2       1     1       0         0             0       12  on_llm_start  OpenAI     3       2     1       0         0             0       13  on_llm_start  OpenAI     3       2     1       0         0             0       14  on_llm_start  OpenAI     3       2     1       0         0             0       15  on_llm_start  OpenAI     3       2     1       0         0             0       16  on_llm_start  OpenAI     3       2     1       0         0             0       17  on_llm_start  OpenAI     3       2     1       0         0             0       18    on_llm_end     NaN     4       2     2       0         0             0       19    on_llm_end     NaN     4       2     2       0         0             0       20    on_llm_end     NaN     4       2     2       0         0             0       21    on_llm_end     NaN     4       2     2       0         0             0       22    on_llm_end     NaN     4       2     2       0         0             0       23    on_llm_end     NaN     4       2     2       0         0             0               chain_ends  llm_starts  ...  difficult_words  linsear_write_formula  \    0            0           1  ...              NaN                    NaN       1            0           1  ...              NaN                    NaN       2            0           1  ...              NaN                    NaN       3            0           1  ...              NaN                    NaN       4            0           1  ...              NaN                    NaN       5            0           1  ...              NaN                    NaN       6            0           1  ...              0.0                    5.5       7            0           1  ...              2.0                    6.5       8            0           1  ...              0.0                    5.5       9            0           1  ...              2.0                    6.5       10           0           1  ...              0.0                    5.5       11           0           1  ...              2.0                    6.5       12           0           2  ...              NaN                    NaN       13           0           2  ...              NaN                    NaN       14           0           2  ...              NaN                    NaN       15           0           2  ...              NaN                    NaN       16           0           2  ...              NaN                    NaN       17           0           2  ...              NaN                    NaN       18           0           2  ...              0.0                    5.5       19           0           2  ...              2.0                    6.5       20           0           2  ...              0.0                    5.5       21           0           2  ...              2.0                    6.5       22           0           2  ...              0.0                    5.5       23           0           2  ...              2.0                    6.5               gunning_fog      text_standard  fernandez_huerta szigriszt_pazos  \    0           NaN                NaN               NaN             NaN       1           NaN                NaN               NaN             NaN       2           NaN                NaN               NaN             NaN       3           NaN                NaN               NaN             NaN       4           NaN                NaN               NaN             NaN       5           NaN                NaN               NaN             NaN       6          5.20  5th and 6th grade            133.58          131.54       7          8.28  6th and 7th grade            115.58          112.37       8          5.20  5th and 6th grade            133.58          131.54       9          8.28  6th and 7th grade            115.58          112.37       10         5.20  5th and 6th grade            133.58          131.54       11         8.28  6th and 7th grade            115.58          112.37       12          NaN                NaN               NaN             NaN       13          NaN                NaN               NaN             NaN       14          NaN                NaN               NaN             NaN       15          NaN                NaN               NaN             NaN       16          NaN                NaN               NaN             NaN       17          NaN                NaN               NaN             NaN       18         5.20  5th and 6th grade            133.58          131.54       19         8.28  6th and 7th grade            115.58          112.37       20         5.20  5th and 6th grade            133.58          131.54       21         8.28  6th and 7th grade            115.58          112.37       22         5.20  5th and 6th grade            133.58          131.54       23         8.28  6th and 7th grade            115.58          112.37               gutierrez_polini  crawford  gulpease_index   osman      0                NaN       NaN             NaN     NaN      1                NaN       NaN             NaN     NaN      2                NaN       NaN             NaN     NaN      3                NaN       NaN             NaN     NaN      4                NaN       NaN             NaN     NaN      5                NaN       NaN             NaN     NaN      6              62.30      -0.2            79.8  116.91      7              54.83       1.4            72.1  100.17      8              62.30      -0.2            79.8  116.91      9              54.83       1.4            72.1  100.17      10             62.30      -0.2            79.8  116.91      11             54.83       1.4            72.1  100.17      12               NaN       NaN             NaN     NaN      13               NaN       NaN             NaN     NaN      14               NaN       NaN             NaN     NaN      15               NaN       NaN             NaN     NaN      16               NaN       NaN             NaN     NaN      17               NaN       NaN             NaN     NaN      18             62.30      -0.2            79.8  116.91      19             54.83       1.4            72.1  100.17      20             62.30      -0.2            79.8  116.91      21             54.83       1.4            72.1  100.17      22             62.30      -0.2            79.8  116.91      23             54.83       1.4            72.1  100.17          [24 rows x 39 columns], 'session_analysis':     prompt_step         prompts    name  output_step  \    0             1  Tell me a joke  OpenAI            2       1             1  Tell me a poem  OpenAI            2       2             1  Tell me a joke  OpenAI            2       3             1  Tell me a poem  OpenAI            2       4             1  Tell me a joke  OpenAI            2       5             1  Tell me a poem  OpenAI            2       6             3  Tell me a joke  OpenAI            4       7             3  Tell me a poem  OpenAI            4       8             3  Tell me a joke  OpenAI            4       9             3  Tell me a poem  OpenAI            4       10            3  Tell me a joke  OpenAI            4       11            3  Tell me a poem  OpenAI            4                                                          output  \    0   \n\nQ: What did the fish say when it hit the w...       1   \n\nRoses are red,\nViolets are blue,\nSugar i...       2   \n\nQ: What did the fish say when it hit the w...       3   \n\nRoses are red,\nViolets are blue,\nSugar i...       4   \n\nQ: What did the fish say when it hit the w...       5   \n\nRoses are red,\nViolets are blue,\nSugar i...       6   \n\nQ: What did the fish say when it hit the w...       7   \n\nRoses are red,\nViolets are blue,\nSugar i...       8   \n\nQ: What did the fish say when it hit the w...       9   \n\nRoses are red,\nViolets are blue,\nSugar i...       10  \n\nQ: What did the fish say when it hit the w...       11  \n\nRoses are red,\nViolets are blue,\nSugar i...               token_usage_total_tokens  token_usage_prompt_tokens  \    0                        162                         24       1                        162                         24       2                        162                         24       3                        162                         24       4                        162                         24       5                        162                         24       6                        162                         24       7                        162                         24       8                        162                         24       9                        162                         24       10                       162                         24       11                       162                         24               token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             138               109.04                   1.3       1                             138                83.66                   4.8       2                             138               109.04                   1.3       3                             138                83.66                   4.8       4                             138               109.04                   1.3       5                             138                83.66                   4.8       6                             138               109.04                   1.3       7                             138                83.66                   4.8       8                             138               109.04                   1.3       9                             138                83.66                   4.8       10                            138               109.04                   1.3       11                            138                83.66                   4.8               ...  difficult_words  linsear_write_formula  gunning_fog  \    0   ...                0                    5.5         5.20       1   ...                2                    6.5         8.28       2   ...                0                    5.5         5.20       3   ...                2                    6.5         8.28       4   ...                0                    5.5         5.20       5   ...                2                    6.5         8.28       6   ...                0                    5.5         5.20       7   ...                2                    6.5         8.28       8   ...                0                    5.5         5.20       9   ...                2                    6.5         8.28       10  ...                0                    5.5         5.20       11  ...                2                    6.5         8.28                   text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0   5th and 6th grade            133.58           131.54             62.30       1   6th and 7th grade            115.58           112.37             54.83       2   5th and 6th grade            133.58           131.54             62.30       3   6th and 7th grade            115.58           112.37             54.83       4   5th and 6th grade            133.58           131.54             62.30       5   6th and 7th grade            115.58           112.37             54.83       6   5th and 6th grade            133.58           131.54             62.30       7   6th and 7th grade            115.58           112.37             54.83       8   5th and 6th grade            133.58           131.54             62.30       9   6th and 7th grade            115.58           112.37             54.83       10  5th and 6th grade            133.58           131.54             62.30       11  6th and 7th grade            115.58           112.37             54.83              crawford  gulpease_index   osman      0      -0.2            79.8  116.91      1       1.4            72.1  100.17      2      -0.2            79.8  116.91      3       1.4            72.1  100.17      4      -0.2            79.8  116.91      5       1.4            72.1  100.17      6      -0.2            79.8  116.91      7       1.4            72.1  100.17      8      -0.2            79.8  116.91      9       1.4            72.1  100.17      10     -0.2            79.8  116.91      11      1.4            72.1  100.17          [12 rows x 24 columns]}    2023-03-29 14:00:25,948 - clearml.Task - INFO - Completed model upload to https://files.clear.ml/langchain_callback_demo/llm.988bd727b0e94a29a3ac0ee526813545/models/simple_sequentialAt this point you can already go to https://app.clear.ml and take a look at the resulting ClearML Task that was created.Among others, you should see that this notebook is saved along with any git information. The model JSON that contains the used parameters is saved as an artifact, there are also console logs and under the plots section, you'll find tables that represent the flow of the chain.Finally, if you enabled visualizations, these are stored as HTML files under debug samples.Scenario 2: Creating an agent with tools‚ÄãTo show a more advanced workflow, let's create an agent with access to tools. The way ClearML tracks the results is not different though, only the table will look slightly different as there are other types of actions taken when compared to the earlier, simpler example.You can now also see the use of the finish=True keyword, which will fully close the ClearML Task, instead of just resetting the parameters and prompts for a new conversation.from langchain.agents import initialize_agent, load_toolsfrom langchain.agents import AgentType# SCENARIO 2 - Agent with Toolstools = load_tools(["serpapi", "llm-math"], llm=llm, callbacks=callbacks)agent = initialize_agent(    tools,    llm,    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,    callbacks=callbacks,)agent.run("Who is the wife of the person who sang summer of 69?")clearml_callback.flush_tracker(    langchain_asset=agent, name="Agent with Tools", finish=True)API Reference:initialize_agentload_toolsAgentType            > Entering new AgentExecutor chain...    {'action': 'on_chain_start', 'name': 'AgentExecutor', 'step': 1, 'starts': 1, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 0, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'input': 'Who is the wife of the person who sang summer of 69?'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 2, 'starts': 2, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 189, 'token_usage_completion_tokens': 34, 'token_usage_total_tokens': 223, 'model_name': 'text-davinci-003', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 91.61, 'flesch_kincaid_grade': 3.8, 'smog_index': 0.0, 'coleman_liau_index': 3.41, 'automated_readability_index': 3.5, 'dale_chall_readability_score': 6.06, 'difficult_words': 2, 'linsear_write_formula': 5.75, 'gunning_fog': 5.4, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 121.07, 'szigriszt_pazos': 119.5, 'gutierrez_polini': 54.91, 'crawford': 0.9, 'gulpease_index': 72.7, 'osman': 92.16}     I need to find out who sang summer of 69 and then find out who their wife is.    Action: Search    Action Input: "Who sang summer of 69"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who sang summer of 69', 'log': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'step': 4, 'starts': 3, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 1, 'tool_ends': 0, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who sang summer of 69', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 5, 'starts': 4, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 0, 'agent_ends': 0}        Observation: Bryan Adams - Summer Of 69 (Official Music Video).    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams - Summer Of 69 (Official Music Video).', 'step': 6, 'starts': 4, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 7, 'starts': 5, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 242, 'token_usage_completion_tokens': 28, 'token_usage_total_tokens': 270, 'model_name': 'text-davinci-003', 'step': 8, 'starts': 5, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'text': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 94.66, 'flesch_kincaid_grade': 2.7, 'smog_index': 0.0, 'coleman_liau_index': 4.73, 'automated_readability_index': 4.0, 'dale_chall_readability_score': 7.16, 'difficult_words': 2, 'linsear_write_formula': 4.25, 'gunning_fog': 4.2, 'text_standard': '4th and 5th grade', 'fernandez_huerta': 124.13, 'szigriszt_pazos': 119.2, 'gutierrez_polini': 52.26, 'crawford': 0.7, 'gulpease_index': 74.7, 'osman': 84.2}     I need to find out who Bryan Adams is married to.    Action: Search    Action Input: "Who is Bryan Adams married to"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who is Bryan Adams married to', 'log': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'step': 9, 'starts': 6, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 3, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who is Bryan Adams married to', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 10, 'starts': 7, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 1, 'agent_ends': 0}        Observation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...', 'step': 11, 'starts': 7, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 12, 'starts': 8, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought: I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"\nObservation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 314, 'token_usage_completion_tokens': 18, 'token_usage_total_tokens': 332, 'model_name': 'text-davinci-003', 'step': 13, 'starts': 8, 'ends': 5, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'text': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 81.29, 'flesch_kincaid_grade': 3.7, 'smog_index': 0.0, 'coleman_liau_index': 5.75, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 7.37, 'difficult_words': 1, 'linsear_write_formula': 2.5, 'gunning_fog': 2.8, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 115.7, 'szigriszt_pazos': 110.84, 'gutierrez_polini': 49.79, 'crawford': 0.7, 'gulpease_index': 85.4, 'osman': 83.14}     I now know the final answer.    Final Answer: Bryan Adams has never been married.    {'action': 'on_agent_finish', 'output': 'Bryan Adams has never been married.', 'log': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'step': 14, 'starts': 8, 'ends': 6, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}        > Finished chain.    {'action': 'on_chain_end', 'outputs': 'Bryan Adams has never been married.', 'step': 15, 'starts': 8, 'ends': 7, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 1, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}    {'action_records':              action    name  step  starts  ends  errors  text_ctr  \    0      on_llm_start  OpenAI     1       1     0       0         0       1      on_llm_start  OpenAI     1       1     0       0         0       2      on_llm_start  OpenAI     1       1     0       0         0       3      on_llm_start  OpenAI     1       1     0       0         0       4      on_llm_start  OpenAI     1       1     0       0         0       ..              ...     ...   ...     ...   ...     ...       ...       66      on_tool_end     NaN    11       7     4       0         0       67     on_llm_start  OpenAI    12       8     4       0         0       68       on_llm_end     NaN    13       8     5       0         0       69  on_agent_finish     NaN    14       8     6       0         0       70     on_chain_end     NaN    15       8     7       0         0               chain_starts  chain_ends  llm_starts  ...  gulpease_index  osman  input  \    0              0           0           1  ...             NaN    NaN    NaN       1              0           0           1  ...             NaN    NaN    NaN       2              0           0           1  ...             NaN    NaN    NaN       3              0           0           1  ...             NaN    NaN    NaN       4              0           0           1  ...             NaN    NaN    NaN       ..           ...         ...         ...  ...             ...    ...    ...       66             1           0           2  ...             NaN    NaN    NaN       67             1           0           3  ...             NaN    NaN    NaN       68             1           0           3  ...            85.4  83.14    NaN       69             1           0           3  ...             NaN    NaN    NaN       70             1           1           3  ...             NaN    NaN    NaN               tool  tool_input                                                log  \    0    NaN         NaN                                                NaN       1    NaN         NaN                                                NaN       2    NaN         NaN                                                NaN       3    NaN         NaN                                                NaN       4    NaN         NaN                                                NaN       ..   ...         ...                                                ...       66   NaN         NaN                                                NaN       67   NaN         NaN                                                NaN       68   NaN         NaN                                                NaN       69   NaN         NaN   I now know the final answer.\nFinal Answer: B...       70   NaN         NaN                                                NaN               input_str  description                                             output  \    0         NaN          NaN                                                NaN       1         NaN          NaN                                                NaN       2         NaN          NaN                                                NaN       3         NaN          NaN                                                NaN       4         NaN          NaN                                                NaN       ..        ...          ...                                                ...       66        NaN          NaN  Bryan Adams has never married. In the 1990s, h...       67        NaN          NaN                                                NaN       68        NaN          NaN                                                NaN       69        NaN          NaN                Bryan Adams has never been married.       70        NaN          NaN                                                NaN                                           outputs      0                                   NaN      1                                   NaN      2                                   NaN      3                                   NaN      4                                   NaN      ..                                  ...      66                                  NaN      67                                  NaN      68                                  NaN      69                                  NaN      70  Bryan Adams has never been married.          [71 rows x 47 columns], 'session_analysis':    prompt_step                                            prompts    name  \    0            2  Answer the following questions as best you can...  OpenAI       1            7  Answer the following questions as best you can...  OpenAI       2           12  Answer the following questions as best you can...  OpenAI              output_step                                             output  \    0            3   I need to find out who sang summer of 69 and ...       1            8   I need to find out who Bryan Adams is married...       2           13   I now know the final answer.\nFinal Answer: B...              token_usage_total_tokens  token_usage_prompt_tokens  \    0                       223                        189       1                       270                        242       2                       332                        314              token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             34                91.61                   3.8       1                             28                94.66                   2.7       2                             18                81.29                   3.7              ...  difficult_words  linsear_write_formula  gunning_fog  \    0  ...                2                   5.75          5.4       1  ...                2                   4.25          4.2       2  ...                1                   2.50          2.8                  text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0  3rd and 4th grade            121.07           119.50             54.91       1  4th and 5th grade            124.13           119.20             52.26       2  3rd and 4th grade            115.70           110.84             49.79             crawford  gulpease_index  osman      0      0.9            72.7  92.16      1      0.7            74.7  84.20      2      0.7            85.4  83.14          [3 rows x 24 columns]}    Could not update last created model in Task 988bd727b0e94a29a3ac0ee526813545, Task status 'completed' cannot be updatedTips and Next Steps‚ÄãMake sure you always use a unique name argument for the clearml_callback.flush_tracker function. If not, the model parameters used for a run will override the previous run!If you close the ClearML Callback using clearml_callback.flush_tracker(..., finish=True) the Callback cannot be used anymore. Make a new one if you want to keep logging.Check out the rest of the open source ClearML ecosystem, there is a data version manager, a remote execution agent, automated pipelines and much more!PreviousClarifaiNextClickHouseInstallation and SetupGetting API CredentialsCallbacksScenario 1: Just an LLMScenario 2: Creating an agent with toolsTips and Next Steps IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerActiveloop Deep LakeAI21 LabsAimAINetworkAirbyteAirtableAleph AlphaAlibaba Cloud OpensearchAmazon API GatewayAnalyticDBAnnoyAnyscaleApifyArangoDBArgillaArthurArxivAtlasAwaDBAWS S3 DirectoryAZLyricsAzure Blob StorageAzure Cognitive SearchAzure OpenAIBagelDBBananaBasetenBeamBedrockBiliBiliNIBittensorBlackboardBrave SearchCassandraCerebriumAIChaindeskChromaClarifaiClearMLClickHouseCnosDBCohereCollege ConfidentialCometConfident AIConfluenceC TransformersDashVectorDatabricksDatadog TracingDatadog LogsDataForSEODeepInfraDeepSparseDiffbotDingoDiscordDocArrayDocugamiDuckDBElasticsearchEpsillaEverNoteFacebook ChatFacebook FaissFigmaFireworksFlyteForefrontAIGitGitBookGoldenGoogle BigQueryGoogle Cloud StorageGoogle DriveGoogle SearchGoogle SerperGoogle Vertex AI MatchingEngineGooseAIGPT4AllGraphsignalGrobidGutenbergHacker NewsHazy ResearchHeliconeHologresHugging FaceiFixitIMSDbInfinoJinaKonkoLanceDBLangChain Decorators ‚ú®Llama.cppLog10MarqoMediaWikiDumpMeilisearchMetalMicrosoft OneDriveMicrosoft PowerPointMicrosoft WordMilvusMinimaxMLflow AI GatewayMLflowModalModelScopeModern TreasuryMomentoMongoDB AtlasMotherduckMyScaleNeo4jNLPCloudNotion DBObsidianOpenAIOpenLLMOpenSearchOpenWeatherMapPetalsPostgres EmbeddingPGVectorPineconePipelineAIPortkeyPredibasePrediction GuardPromptLayerPsychicPubMedQdrantRay ServeRebuffRedditRedisReplicateRoamRocksetRunhouseRWKV-4SageMaker EndpointSageMaker TrackingScaNNSearxNG Search APISerpAPIShale ProtocolSingleStoreDBscikit-learnSlackspaCySpreedlyStarRocksStochasticAIStripeSupabase (Postgres)NebulaTairTelegramTencentVectorDBTensorFlow DatasetsTigris2MarkdownTrelloTruLensTwitterTypesenseUnstructuredUSearchVearchVectaraVespaWandB TracingWeights & BiasesWeatherWeaviateWhatsAppWhyLabsWikipediaWolfram AlphaWriterXataXorbits Inference (Xinference)Yeager.aiYouTubeZepZillizIntegrationsGrouped by providerClearMLOn this pageClearMLClearML is a ML/DL development and production suite, it contains 5 main modules:Experiment Manager - Automagical experiment tracking, environments and resultsMLOps - Orchestration, Automation & Pipelines solution for ML/DL jobs (K8s / Cloud / bare-metal)Data-Management - Fully differentiable data management & version control solution on top of object-storage (S3 / GS / Azure / NAS)Model-Serving - cloud-ready Scalable model serving solution! with out-of-the-box Model MonitoringFire Reports - Create and share rich MarkDown documents supporting embeddable online contentIn order to properly keep track of your langchain experiments and their results, you can enable the ClearML integration. We use the ClearML Experiment Manager that neatly tracks and organizes all your experiment runs.Installation and Setup‚Äãpip install clearmlpip install pandaspip install textstatpip install spacypython -m spacy download en_core_web_smGetting API Credentials‚ÄãWe'll be using quite some APIs in this notebook, here is a list and where to get them:ClearML: https://app.clear.ml/settings/workspace-configurationOpenAI: https://platform.openai.com/account/api-keysSerpAPI (google search): https://serpapi.com/dashboardimport osos.environ["CLEARML_API_ACCESS_KEY"] = ""os.environ["CLEARML_API_SECRET_KEY"] = ""os.environ["OPENAI_API_KEY"] = ""os.environ["SERPAPI_API_KEY"] = ""Callbacks‚Äãfrom langchain.callbacks import ClearMLCallbackHandlerAPI Reference:ClearMLCallbackHandlerfrom datetime import datetimefrom langchain.callbacks import StdOutCallbackHandlerfrom langchain.llms import OpenAI# Setup and use the ClearML Callbackclearml_callback = ClearMLCallbackHandler(    task_type="inference",    project_name="langchain_callback_demo",    task_name="llm",    tags=["test"],    # Change the following parameters based on the amount of detail you want tracked    visualize=True,    complexity_metrics=True,    stream_logs=True,)callbacks = [StdOutCallbackHandler(), clearml_callback]# Get the OpenAI model ready to gollm = OpenAI(temperature=0, callbacks=callbacks)API Reference:StdOutCallbackHandlerOpenAI    The clearml callback is currently in beta and is subject to change based on updates to `langchain`. Please report any issues to https://github.com/allegroai/clearml/issues with the tag `langchain`.Scenario 1: Just an LLM‚ÄãFirst, let's just run a single LLM a few times and capture the resulting prompt-answer conversation in ClearML# SCENARIO 1 - LLMllm_result = llm.generate(["Tell me a joke", "Tell me a poem"] * 3)# After every generation run, use flush to make sure all the metrics# prompts and other output are properly saved separatelyclearml_callback.flush_tracker(langchain_asset=llm, name="simple_sequential")    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action_records':           action    name  step  starts  ends  errors  text_ctr  chain_starts  \    0   on_llm_start  OpenAI     1       1     0       0         0             0       1   on_llm_start  OpenAI     1       1     0       0         0             0       2   on_llm_start  OpenAI     1       1     0       0         0             0       3   on_llm_start  OpenAI     1       1     0       0         0             0       4   on_llm_start  OpenAI     1       1     0       0         0             0       5   on_llm_start  OpenAI     1       1     0       0         0             0       6     on_llm_end     NaN     2       1     1       0         0             0       7     on_llm_end     NaN     2       1     1       0         0             0       8     on_llm_end     NaN     2       1     1       0         0             0       9     on_llm_end     NaN     2       1     1       0         0             0       10    on_llm_end     NaN     2       1     1       0         0             0       11    on_llm_end     NaN     2       1     1       0         0             0       12  on_llm_start  OpenAI     3       2     1       0         0             0       13  on_llm_start  OpenAI     3       2     1       0         0             0       14  on_llm_start  OpenAI     3       2     1       0         0             0       15  on_llm_start  OpenAI     3       2     1       0         0             0       16  on_llm_start  OpenAI     3       2     1       0         0             0       17  on_llm_start  OpenAI     3       2     1       0         0             0       18    on_llm_end     NaN     4       2     2       0         0             0       19    on_llm_end     NaN     4       2     2       0         0             0       20    on_llm_end     NaN     4       2     2       0         0             0       21    on_llm_end     NaN     4       2     2       0         0             0       22    on_llm_end     NaN     4       2     2       0         0             0       23    on_llm_end     NaN     4       2     2       0         0             0               chain_ends  llm_starts  ...  difficult_words  linsear_write_formula  \    0            0           1  ...              NaN                    NaN       1            0           1  ...              NaN                    NaN       2            0           1  ...              NaN                    NaN       3            0           1  ...              NaN                    NaN       4            0           1  ...              NaN                    NaN       5            0           1  ...              NaN                    NaN       6            0           1  ...              0.0                    5.5       7            0           1  ...              2.0                    6.5       8            0           1  ...              0.0                    5.5       9            0           1  ...              2.0                    6.5       10           0           1  ...              0.0                    5.5       11           0           1  ...              2.0                    6.5       12           0           2  ...              NaN                    NaN       13           0           2  ...              NaN                    NaN       14           0           2  ...              NaN                    NaN       15           0           2  ...              NaN                    NaN       16           0           2  ...              NaN                    NaN       17           0           2  ...              NaN                    NaN       18           0           2  ...              0.0                    5.5       19           0           2  ...              2.0                    6.5       20           0           2  ...              0.0                    5.5       21           0           2  ...              2.0                    6.5       22           0           2  ...              0.0                    5.5       23           0           2  ...              2.0                    6.5               gunning_fog      text_standard  fernandez_huerta szigriszt_pazos  \    0           NaN                NaN               NaN             NaN       1           NaN                NaN               NaN             NaN       2           NaN                NaN               NaN             NaN       3           NaN                NaN               NaN             NaN       4           NaN                NaN               NaN             NaN       5           NaN                NaN               NaN             NaN       6          5.20  5th and 6th grade            133.58          131.54       7          8.28  6th and 7th grade            115.58          112.37       8          5.20  5th and 6th grade            133.58          131.54       9          8.28  6th and 7th grade            115.58          112.37       10         5.20  5th and 6th grade            133.58          131.54       11         8.28  6th and 7th grade            115.58          112.37       12          NaN                NaN               NaN             NaN       13          NaN                NaN               NaN             NaN       14          NaN                NaN               NaN             NaN       15          NaN                NaN               NaN             NaN       16          NaN                NaN               NaN             NaN       17          NaN                NaN               NaN             NaN       18         5.20  5th and 6th grade            133.58          131.54       19         8.28  6th and 7th grade            115.58          112.37       20         5.20  5th and 6th grade            133.58          131.54       21         8.28  6th and 7th grade            115.58          112.37       22         5.20  5th and 6th grade            133.58          131.54       23         8.28  6th and 7th grade            115.58          112.37               gutierrez_polini  crawford  gulpease_index   osman      0                NaN       NaN             NaN     NaN      1                NaN       NaN             NaN     NaN      2                NaN       NaN             NaN     NaN      3                NaN       NaN             NaN     NaN      4                NaN       NaN             NaN     NaN      5                NaN       NaN             NaN     NaN      6              62.30      -0.2            79.8  116.91      7              54.83       1.4            72.1  100.17      8              62.30      -0.2            79.8  116.91      9              54.83       1.4            72.1  100.17      10             62.30      -0.2            79.8  116.91      11             54.83       1.4            72.1  100.17      12               NaN       NaN             NaN     NaN      13               NaN       NaN             NaN     NaN      14               NaN       NaN             NaN     NaN      15               NaN       NaN             NaN     NaN      16               NaN       NaN             NaN     NaN      17               NaN       NaN             NaN     NaN      18             62.30      -0.2            79.8  116.91      19             54.83       1.4            72.1  100.17      20             62.30      -0.2            79.8  116.91      21             54.83       1.4            72.1  100.17      22             62.30      -0.2            79.8  116.91      23             54.83       1.4            72.1  100.17          [24 rows x 39 columns], 'session_analysis':     prompt_step         prompts    name  output_step  \    0             1  Tell me a joke  OpenAI            2       1             1  Tell me a poem  OpenAI            2       2             1  Tell me a joke  OpenAI            2       3             1  Tell me a poem  OpenAI            2       4             1  Tell me a joke  OpenAI            2       5             1  Tell me a poem  OpenAI            2       6             3  Tell me a joke  OpenAI            4       7             3  Tell me a poem  OpenAI            4       8             3  Tell me a joke  OpenAI            4       9             3  Tell me a poem  OpenAI            4       10            3  Tell me a joke  OpenAI            4       11            3  Tell me a poem  OpenAI            4                                                          output  \    0   \n\nQ: What did the fish say when it hit the w...       1   \n\nRoses are red,\nViolets are blue,\nSugar i...       2   \n\nQ: What did the fish say when it hit the w...       3   \n\nRoses are red,\nViolets are blue,\nSugar i...       4   \n\nQ: What did the fish say when it hit the w...       5   \n\nRoses are red,\nViolets are blue,\nSugar i...       6   \n\nQ: What did the fish say when it hit the w...       7   \n\nRoses are red,\nViolets are blue,\nSugar i...       8   \n\nQ: What did the fish say when it hit the w...       9   \n\nRoses are red,\nViolets are blue,\nSugar i...       10  \n\nQ: What did the fish say when it hit the w...       11  \n\nRoses are red,\nViolets are blue,\nSugar i...               token_usage_total_tokens  token_usage_prompt_tokens  \    0                        162                         24       1                        162                         24       2                        162                         24       3                        162                         24       4                        162                         24       5                        162                         24       6                        162                         24       7                        162                         24       8                        162                         24       9                        162                         24       10                       162                         24       11                       162                         24               token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             138               109.04                   1.3       1                             138                83.66                   4.8       2                             138               109.04                   1.3       3                             138                83.66                   4.8       4                             138               109.04                   1.3       5                             138                83.66                   4.8       6                             138               109.04                   1.3       7                             138                83.66                   4.8       8                             138               109.04                   1.3       9                             138                83.66                   4.8       10                            138               109.04                   1.3       11                            138                83.66                   4.8               ...  difficult_words  linsear_write_formula  gunning_fog  \    0   ...                0                    5.5         5.20       1   ...                2                    6.5         8.28       2   ...                0                    5.5         5.20       3   ...                2                    6.5         8.28       4   ...                0                    5.5         5.20       5   ...                2                    6.5         8.28       6   ...                0                    5.5         5.20       7   ...                2                    6.5         8.28       8   ...                0                    5.5         5.20       9   ...                2                    6.5         8.28       10  ...                0                    5.5         5.20       11  ...                2                    6.5         8.28                   text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0   5th and 6th grade            133.58           131.54             62.30       1   6th and 7th grade            115.58           112.37             54.83       2   5th and 6th grade            133.58           131.54             62.30       3   6th and 7th grade            115.58           112.37             54.83       4   5th and 6th grade            133.58           131.54             62.30       5   6th and 7th grade            115.58           112.37             54.83       6   5th and 6th grade            133.58           131.54             62.30       7   6th and 7th grade            115.58           112.37             54.83       8   5th and 6th grade            133.58           131.54             62.30       9   6th and 7th grade            115.58           112.37             54.83       10  5th and 6th grade            133.58           131.54             62.30       11  6th and 7th grade            115.58           112.37             54.83              crawford  gulpease_index   osman      0      -0.2            79.8  116.91      1       1.4            72.1  100.17      2      -0.2            79.8  116.91      3       1.4            72.1  100.17      4      -0.2            79.8  116.91      5       1.4            72.1  100.17      6      -0.2            79.8  116.91      7       1.4            72.1  100.17      8      -0.2            79.8  116.91      9       1.4            72.1  100.17      10     -0.2            79.8  116.91      11      1.4            72.1  100.17          [12 rows x 24 columns]}    2023-03-29 14:00:25,948 - clearml.Task - INFO - Completed model upload to https://files.clear.ml/langchain_callback_demo/llm.988bd727b0e94a29a3ac0ee526813545/models/simple_sequentialAt this point you can already go to https://app.clear.ml and take a look at the resulting ClearML Task that was created.Among others, you should see that this notebook is saved along with any git information. The model JSON that contains the used parameters is saved as an artifact, there are also console logs and under the plots section, you'll find tables that represent the flow of the chain.Finally, if you enabled visualizations, these are stored as HTML files under debug samples.Scenario 2: Creating an agent with tools‚ÄãTo show a more advanced workflow, let's create an agent with access to tools. The way ClearML tracks the results is not different though, only the table will look slightly different as there are other types of actions taken when compared to the earlier, simpler example.You can now also see the use of the finish=True keyword, which will fully close the ClearML Task, instead of just resetting the parameters and prompts for a new conversation.from langchain.agents import initialize_agent, load_toolsfrom langchain.agents import AgentType# SCENARIO 2 - Agent with Toolstools = load_tools(["serpapi", "llm-math"], llm=llm, callbacks=callbacks)agent = initialize_agent(    tools,    llm,    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,    callbacks=callbacks,)agent.run("Who is the wife of the person who sang summer of 69?")clearml_callback.flush_tracker(    langchain_asset=agent, name="Agent with Tools", finish=True)API Reference:initialize_agentload_toolsAgentType            > Entering new AgentExecutor chain...    {'action': 'on_chain_start', 'name': 'AgentExecutor', 'step': 1, 'starts': 1, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 0, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'input': 'Who is the wife of the person who sang summer of 69?'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 2, 'starts': 2, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 189, 'token_usage_completion_tokens': 34, 'token_usage_total_tokens': 223, 'model_name': 'text-davinci-003', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 91.61, 'flesch_kincaid_grade': 3.8, 'smog_index': 0.0, 'coleman_liau_index': 3.41, 'automated_readability_index': 3.5, 'dale_chall_readability_score': 6.06, 'difficult_words': 2, 'linsear_write_formula': 5.75, 'gunning_fog': 5.4, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 121.07, 'szigriszt_pazos': 119.5, 'gutierrez_polini': 54.91, 'crawford': 0.9, 'gulpease_index': 72.7, 'osman': 92.16}     I need to find out who sang summer of 69 and then find out who their wife is.    Action: Search    Action Input: "Who sang summer of 69"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who sang summer of 69', 'log': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'step': 4, 'starts': 3, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 1, 'tool_ends': 0, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who sang summer of 69', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 5, 'starts': 4, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 0, 'agent_ends': 0}        Observation: Bryan Adams - Summer Of 69 (Official Music Video).    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams - Summer Of 69 (Official Music Video).', 'step': 6, 'starts': 4, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 7, 'starts': 5, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 242, 'token_usage_completion_tokens': 28, 'token_usage_total_tokens': 270, 'model_name': 'text-davinci-003', 'step': 8, 'starts': 5, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'text': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 94.66, 'flesch_kincaid_grade': 2.7, 'smog_index': 0.0, 'coleman_liau_index': 4.73, 'automated_readability_index': 4.0, 'dale_chall_readability_score': 7.16, 'difficult_words': 2, 'linsear_write_formula': 4.25, 'gunning_fog': 4.2, 'text_standard': '4th and 5th grade', 'fernandez_huerta': 124.13, 'szigriszt_pazos': 119.2, 'gutierrez_polini': 52.26, 'crawford': 0.7, 'gulpease_index': 74.7, 'osman': 84.2}     I need to find out who Bryan Adams is married to.    Action: Search    Action Input: "Who is Bryan Adams married to"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who is Bryan Adams married to', 'log': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'step': 9, 'starts': 6, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 3, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who is Bryan Adams married to', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 10, 'starts': 7, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 1, 'agent_ends': 0}        Observation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...', 'step': 11, 'starts': 7, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 12, 'starts': 8, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought: I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"\nObservation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 314, 'token_usage_completion_tokens': 18, 'token_usage_total_tokens': 332, 'model_name': 'text-davinci-003', 'step': 13, 'starts': 8, 'ends': 5, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'text': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 81.29, 'flesch_kincaid_grade': 3.7, 'smog_index': 0.0, 'coleman_liau_index': 5.75, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 7.37, 'difficult_words': 1, 'linsear_write_formula': 2.5, 'gunning_fog': 2.8, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 115.7, 'szigriszt_pazos': 110.84, 'gutierrez_polini': 49.79, 'crawford': 0.7, 'gulpease_index': 85.4, 'osman': 83.14}     I now know the final answer.    Final Answer: Bryan Adams has never been married.    {'action': 'on_agent_finish', 'output': 'Bryan Adams has never been married.', 'log': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'step': 14, 'starts': 8, 'ends': 6, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}        > Finished chain.    {'action': 'on_chain_end', 'outputs': 'Bryan Adams has never been married.', 'step': 15, 'starts': 8, 'ends': 7, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 1, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}    {'action_records':              action    name  step  starts  ends  errors  text_ctr  \    0      on_llm_start  OpenAI     1       1     0       0         0       1      on_llm_start  OpenAI     1       1     0       0         0       2      on_llm_start  OpenAI     1       1     0       0         0       3      on_llm_start  OpenAI     1       1     0       0         0       4      on_llm_start  OpenAI     1       1     0       0         0       ..              ...     ...   ...     ...   ...     ...       ...       66      on_tool_end     NaN    11       7     4       0         0       67     on_llm_start  OpenAI    12       8     4       0         0       68       on_llm_end     NaN    13       8     5       0         0       69  on_agent_finish     NaN    14       8     6       0         0       70     on_chain_end     NaN    15       8     7       0         0               chain_starts  chain_ends  llm_starts  ...  gulpease_index  osman  input  \    0              0           0           1  ...             NaN    NaN    NaN       1              0           0           1  ...             NaN    NaN    NaN       2              0           0           1  ...             NaN    NaN    NaN       3              0           0           1  ...             NaN    NaN    NaN       4              0           0           1  ...             NaN    NaN    NaN       ..           ...         ...         ...  ...             ...    ...    ...       66             1           0           2  ...             NaN    NaN    NaN       67             1           0           3  ...             NaN    NaN    NaN       68             1           0           3  ...            85.4  83.14    NaN       69             1           0           3  ...             NaN    NaN    NaN       70             1           1           3  ...             NaN    NaN    NaN               tool  tool_input                                                log  \    0    NaN         NaN                                                NaN       1    NaN         NaN                                                NaN       2    NaN         NaN                                                NaN       3    NaN         NaN                                                NaN       4    NaN         NaN                                                NaN       ..   ...         ...                                                ...       66   NaN         NaN                                                NaN       67   NaN         NaN                                                NaN       68   NaN         NaN                                                NaN       69   NaN         NaN   I now know the final answer.\nFinal Answer: B...       70   NaN         NaN                                                NaN               input_str  description                                             output  \    0         NaN          NaN                                                NaN       1         NaN          NaN                                                NaN       2         NaN          NaN                                                NaN       3         NaN          NaN                                                NaN       4         NaN          NaN                                                NaN       ..        ...          ...                                                ...       66        NaN          NaN  Bryan Adams has never married. In the 1990s, h...       67        NaN          NaN                                                NaN       68        NaN          NaN                                                NaN       69        NaN          NaN                Bryan Adams has never been married.       70        NaN          NaN                                                NaN                                           outputs      0                                   NaN      1                                   NaN      2                                   NaN      3                                   NaN      4                                   NaN      ..                                  ...      66                                  NaN      67                                  NaN      68                                  NaN      69                                  NaN      70  Bryan Adams has never been married.          [71 rows x 47 columns], 'session_analysis':    prompt_step                                            prompts    name  \    0            2  Answer the following questions as best you can...  OpenAI       1            7  Answer the following questions as best you can...  OpenAI       2           12  Answer the following questions as best you can...  OpenAI              output_step                                             output  \    0            3   I need to find out who sang summer of 69 and ...       1            8   I need to find out who Bryan Adams is married...       2           13   I now know the final answer.\nFinal Answer: B...              token_usage_total_tokens  token_usage_prompt_tokens  \    0                       223                        189       1                       270                        242       2                       332                        314              token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             34                91.61                   3.8       1                             28                94.66                   2.7       2                             18                81.29                   3.7              ...  difficult_words  linsear_write_formula  gunning_fog  \    0  ...                2                   5.75          5.4       1  ...                2                   4.25          4.2       2  ...                1                   2.50          2.8                  text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0  3rd and 4th grade            121.07           119.50             54.91       1  4th and 5th grade            124.13           119.20             52.26       2  3rd and 4th grade            115.70           110.84             49.79             crawford  gulpease_index  osman      0      0.9            72.7  92.16      1      0.7            74.7  84.20      2      0.7            85.4  83.14          [3 rows x 24 columns]}    Could not update last created model in Task 988bd727b0e94a29a3ac0ee526813545, Task status 'completed' cannot be updatedTips and Next Steps‚ÄãMake sure you always use a unique name argument for the clearml_callback.flush_tracker function. If not, the model parameters used for a run will override the previous run!If you close the ClearML Callback using clearml_callback.flush_tracker(..., finish=True) the Callback cannot be used anymore. Make a new one if you want to keep logging.Check out the rest of the open source ClearML ecosystem, there is a data version manager, a remote execution agent, automated pipelines and much more!PreviousClarifaiNextClickHouseInstallation and SetupGetting API CredentialsCallbacksScenario 1: Just an LLMScenario 2: Creating an agent with toolsTips and Next Steps IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerActiveloop Deep LakeAI21 LabsAimAINetworkAirbyteAirtableAleph AlphaAlibaba Cloud OpensearchAmazon API GatewayAnalyticDBAnnoyAnyscaleApifyArangoDBArgillaArthurArxivAtlasAwaDBAWS S3 DirectoryAZLyricsAzure Blob StorageAzure Cognitive SearchAzure OpenAIBagelDBBananaBasetenBeamBedrockBiliBiliNIBittensorBlackboardBrave SearchCassandraCerebriumAIChaindeskChromaClarifaiClearMLClickHouseCnosDBCohereCollege ConfidentialCometConfident AIConfluenceC TransformersDashVectorDatabricksDatadog TracingDatadog LogsDataForSEODeepInfraDeepSparseDiffbotDingoDiscordDocArrayDocugamiDuckDBElasticsearchEpsillaEverNoteFacebook ChatFacebook FaissFigmaFireworksFlyteForefrontAIGitGitBookGoldenGoogle BigQueryGoogle Cloud StorageGoogle DriveGoogle SearchGoogle SerperGoogle Vertex AI MatchingEngineGooseAIGPT4AllGraphsignalGrobidGutenbergHacker NewsHazy ResearchHeliconeHologresHugging FaceiFixitIMSDbInfinoJinaKonkoLanceDBLangChain Decorators ‚ú®Llama.cppLog10MarqoMediaWikiDumpMeilisearchMetalMicrosoft OneDriveMicrosoft PowerPointMicrosoft WordMilvusMinimaxMLflow AI GatewayMLflowModalModelScopeModern TreasuryMomentoMongoDB AtlasMotherduckMyScaleNeo4jNLPCloudNotion DBObsidianOpenAIOpenLLMOpenSearchOpenWeatherMapPetalsPostgres EmbeddingPGVectorPineconePipelineAIPortkeyPredibasePrediction GuardPromptLayerPsychicPubMedQdrantRay ServeRebuffRedditRedisReplicateRoamRocksetRunhouseRWKV-4SageMaker EndpointSageMaker TrackingScaNNSearxNG Search APISerpAPIShale ProtocolSingleStoreDBscikit-learnSlackspaCySpreedlyStarRocksStochasticAIStripeSupabase (Postgres)NebulaTairTelegramTencentVectorDBTensorFlow DatasetsTigris2MarkdownTrelloTruLensTwitterTypesenseUnstructuredUSearchVearchVectaraVespaWandB TracingWeights & BiasesWeatherWeaviateWhatsAppWhyLabsWikipediaWolfram AlphaWriterXataXorbits Inference (Xinference)Yeager.aiYouTubeZepZilliz IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerActiveloop Deep LakeAI21 LabsAimAINetworkAirbyteAirtableAleph AlphaAlibaba Cloud OpensearchAmazon API GatewayAnalyticDBAnnoyAnyscaleApifyArangoDBArgillaArthurArxivAtlasAwaDBAWS S3 DirectoryAZLyricsAzure Blob StorageAzure Cognitive SearchAzure OpenAIBagelDBBananaBasetenBeamBedrockBiliBiliNIBittensorBlackboardBrave SearchCassandraCerebriumAIChaindeskChromaClarifaiClearMLClickHouseCnosDBCohereCollege ConfidentialCometConfident AIConfluenceC TransformersDashVectorDatabricksDatadog TracingDatadog LogsDataForSEODeepInfraDeepSparseDiffbotDingoDiscordDocArrayDocugamiDuckDBElasticsearchEpsillaEverNoteFacebook ChatFacebook FaissFigmaFireworksFlyteForefrontAIGitGitBookGoldenGoogle BigQueryGoogle Cloud StorageGoogle DriveGoogle SearchGoogle SerperGoogle Vertex AI MatchingEngineGooseAIGPT4AllGraphsignalGrobidGutenbergHacker NewsHazy ResearchHeliconeHologresHugging FaceiFixitIMSDbInfinoJinaKonkoLanceDBLangChain Decorators ‚ú®Llama.cppLog10MarqoMediaWikiDumpMeilisearchMetalMicrosoft OneDriveMicrosoft PowerPointMicrosoft WordMilvusMinimaxMLflow AI GatewayMLflowModalModelScopeModern TreasuryMomentoMongoDB AtlasMotherduckMyScaleNeo4jNLPCloudNotion DBObsidianOpenAIOpenLLMOpenSearchOpenWeatherMapPetalsPostgres EmbeddingPGVectorPineconePipelineAIPortkeyPredibasePrediction GuardPromptLayerPsychicPubMedQdrantRay ServeRebuffRedditRedisReplicateRoamRocksetRunhouseRWKV-4SageMaker EndpointSageMaker TrackingScaNNSearxNG Search APISerpAPIShale ProtocolSingleStoreDBscikit-learnSlackspaCySpreedlyStarRocksStochasticAIStripeSupabase (Postgres)NebulaTairTelegramTencentVectorDBTensorFlow DatasetsTigris2MarkdownTrelloTruLensTwitterTypesenseUnstructuredUSearchVearchVectaraVespaWandB TracingWeights & BiasesWeatherWeaviateWhatsAppWhyLabsWikipediaWolfram AlphaWriterXataXorbits Inference (Xinference)Yeager.aiYouTubeZepZilliz Integrations Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by provider Portkey Vectara IntegrationsGrouped by providerClearMLOn this pageClearMLClearML is a ML/DL development and production suite, it contains 5 main modules:Experiment Manager - Automagical experiment tracking, environments and resultsMLOps - Orchestration, Automation & Pipelines solution for ML/DL jobs (K8s / Cloud / bare-metal)Data-Management - Fully differentiable data management & version control solution on top of object-storage (S3 / GS / Azure / NAS)Model-Serving - cloud-ready Scalable model serving solution! with out-of-the-box Model MonitoringFire Reports - Create and share rich MarkDown documents supporting embeddable online contentIn order to properly keep track of your langchain experiments and their results, you can enable the ClearML integration. We use the ClearML Experiment Manager that neatly tracks and organizes all your experiment runs.Installation and Setup‚Äãpip install clearmlpip install pandaspip install textstatpip install spacypython -m spacy download en_core_web_smGetting API Credentials‚ÄãWe'll be using quite some APIs in this notebook, here is a list and where to get them:ClearML: https://app.clear.ml/settings/workspace-configurationOpenAI: https://platform.openai.com/account/api-keysSerpAPI (google search): https://serpapi.com/dashboardimport osos.environ["CLEARML_API_ACCESS_KEY"] = ""os.environ["CLEARML_API_SECRET_KEY"] = ""os.environ["OPENAI_API_KEY"] = ""os.environ["SERPAPI_API_KEY"] = ""Callbacks‚Äãfrom langchain.callbacks import ClearMLCallbackHandlerAPI Reference:ClearMLCallbackHandlerfrom datetime import datetimefrom langchain.callbacks import StdOutCallbackHandlerfrom langchain.llms import OpenAI# Setup and use the ClearML Callbackclearml_callback = ClearMLCallbackHandler(    task_type="inference",    project_name="langchain_callback_demo",    task_name="llm",    tags=["test"],    # Change the following parameters based on the amount of detail you want tracked    visualize=True,    complexity_metrics=True,    stream_logs=True,)callbacks = [StdOutCallbackHandler(), clearml_callback]# Get the OpenAI model ready to gollm = OpenAI(temperature=0, callbacks=callbacks)API Reference:StdOutCallbackHandlerOpenAI    The clearml callback is currently in beta and is subject to change based on updates to `langchain`. Please report any issues to https://github.com/allegroai/clearml/issues with the tag `langchain`.Scenario 1: Just an LLM‚ÄãFirst, let's just run a single LLM a few times and capture the resulting prompt-answer conversation in ClearML# SCENARIO 1 - LLMllm_result = llm.generate(["Tell me a joke", "Tell me a poem"] * 3)# After every generation run, use flush to make sure all the metrics# prompts and other output are properly saved separatelyclearml_callback.flush_tracker(langchain_asset=llm, name="simple_sequential")    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action_records':           action    name  step  starts  ends  errors  text_ctr  chain_starts  \    0   on_llm_start  OpenAI     1       1     0       0         0             0       1   on_llm_start  OpenAI     1       1     0       0         0             0       2   on_llm_start  OpenAI     1       1     0       0         0             0       3   on_llm_start  OpenAI     1       1     0       0         0             0       4   on_llm_start  OpenAI     1       1     0       0         0             0       5   on_llm_start  OpenAI     1       1     0       0         0             0       6     on_llm_end     NaN     2       1     1       0         0             0       7     on_llm_end     NaN     2       1     1       0         0             0       8     on_llm_end     NaN     2       1     1       0         0             0       9     on_llm_end     NaN     2       1     1       0         0             0       10    on_llm_end     NaN     2       1     1       0         0             0       11    on_llm_end     NaN     2       1     1       0         0             0       12  on_llm_start  OpenAI     3       2     1       0         0             0       13  on_llm_start  OpenAI     3       2     1       0         0             0       14  on_llm_start  OpenAI     3       2     1       0         0             0       15  on_llm_start  OpenAI     3       2     1       0         0             0       16  on_llm_start  OpenAI     3       2     1       0         0             0       17  on_llm_start  OpenAI     3       2     1       0         0             0       18    on_llm_end     NaN     4       2     2       0         0             0       19    on_llm_end     NaN     4       2     2       0         0             0       20    on_llm_end     NaN     4       2     2       0         0             0       21    on_llm_end     NaN     4       2     2       0         0             0       22    on_llm_end     NaN     4       2     2       0         0             0       23    on_llm_end     NaN     4       2     2       0         0             0               chain_ends  llm_starts  ...  difficult_words  linsear_write_formula  \    0            0           1  ...              NaN                    NaN       1            0           1  ...              NaN                    NaN       2            0           1  ...              NaN                    NaN       3            0           1  ...              NaN                    NaN       4            0           1  ...              NaN                    NaN       5            0           1  ...              NaN                    NaN       6            0           1  ...              0.0                    5.5       7            0           1  ...              2.0                    6.5       8            0           1  ...              0.0                    5.5       9            0           1  ...              2.0                    6.5       10           0           1  ...              0.0                    5.5       11           0           1  ...              2.0                    6.5       12           0           2  ...              NaN                    NaN       13           0           2  ...              NaN                    NaN       14           0           2  ...              NaN                    NaN       15           0           2  ...              NaN                    NaN       16           0           2  ...              NaN                    NaN       17           0           2  ...              NaN                    NaN       18           0           2  ...              0.0                    5.5       19           0           2  ...              2.0                    6.5       20           0           2  ...              0.0                    5.5       21           0           2  ...              2.0                    6.5       22           0           2  ...              0.0                    5.5       23           0           2  ...              2.0                    6.5               gunning_fog      text_standard  fernandez_huerta szigriszt_pazos  \    0           NaN                NaN               NaN             NaN       1           NaN                NaN               NaN             NaN       2           NaN                NaN               NaN             NaN       3           NaN                NaN               NaN             NaN       4           NaN                NaN               NaN             NaN       5           NaN                NaN               NaN             NaN       6          5.20  5th and 6th grade            133.58          131.54       7          8.28  6th and 7th grade            115.58          112.37       8          5.20  5th and 6th grade            133.58          131.54       9          8.28  6th and 7th grade            115.58          112.37       10         5.20  5th and 6th grade            133.58          131.54       11         8.28  6th and 7th grade            115.58          112.37       12          NaN                NaN               NaN             NaN       13          NaN                NaN               NaN             NaN       14          NaN                NaN               NaN             NaN       15          NaN                NaN               NaN             NaN       16          NaN                NaN               NaN             NaN       17          NaN                NaN               NaN             NaN       18         5.20  5th and 6th grade            133.58          131.54       19         8.28  6th and 7th grade            115.58          112.37       20         5.20  5th and 6th grade            133.58          131.54       21         8.28  6th and 7th grade            115.58          112.37       22         5.20  5th and 6th grade            133.58          131.54       23         8.28  6th and 7th grade            115.58          112.37               gutierrez_polini  crawford  gulpease_index   osman      0                NaN       NaN             NaN     NaN      1                NaN       NaN             NaN     NaN      2                NaN       NaN             NaN     NaN      3                NaN       NaN             NaN     NaN      4                NaN       NaN             NaN     NaN      5                NaN       NaN             NaN     NaN      6              62.30      -0.2            79.8  116.91      7              54.83       1.4            72.1  100.17      8              62.30      -0.2            79.8  116.91      9              54.83       1.4            72.1  100.17      10             62.30      -0.2            79.8  116.91      11             54.83       1.4            72.1  100.17      12               NaN       NaN             NaN     NaN      13               NaN       NaN             NaN     NaN      14               NaN       NaN             NaN     NaN      15               NaN       NaN             NaN     NaN      16               NaN       NaN             NaN     NaN      17               NaN       NaN             NaN     NaN      18             62.30      -0.2            79.8  116.91      19             54.83       1.4            72.1  100.17      20             62.30      -0.2            79.8  116.91      21             54.83       1.4            72.1  100.17      22             62.30      -0.2            79.8  116.91      23             54.83       1.4            72.1  100.17          [24 rows x 39 columns], 'session_analysis':     prompt_step         prompts    name  output_step  \    0             1  Tell me a joke  OpenAI            2       1             1  Tell me a poem  OpenAI            2       2             1  Tell me a joke  OpenAI            2       3             1  Tell me a poem  OpenAI            2       4             1  Tell me a joke  OpenAI            2       5             1  Tell me a poem  OpenAI            2       6             3  Tell me a joke  OpenAI            4       7             3  Tell me a poem  OpenAI            4       8             3  Tell me a joke  OpenAI            4       9             3  Tell me a poem  OpenAI            4       10            3  Tell me a joke  OpenAI            4       11            3  Tell me a poem  OpenAI            4                                                          output  \    0   \n\nQ: What did the fish say when it hit the w...       1   \n\nRoses are red,\nViolets are blue,\nSugar i...       2   \n\nQ: What did the fish say when it hit the w...       3   \n\nRoses are red,\nViolets are blue,\nSugar i...       4   \n\nQ: What did the fish say when it hit the w...       5   \n\nRoses are red,\nViolets are blue,\nSugar i...       6   \n\nQ: What did the fish say when it hit the w...       7   \n\nRoses are red,\nViolets are blue,\nSugar i...       8   \n\nQ: What did the fish say when it hit the w...       9   \n\nRoses are red,\nViolets are blue,\nSugar i...       10  \n\nQ: What did the fish say when it hit the w...       11  \n\nRoses are red,\nViolets are blue,\nSugar i...               token_usage_total_tokens  token_usage_prompt_tokens  \    0                        162                         24       1                        162                         24       2                        162                         24       3                        162                         24       4                        162                         24       5                        162                         24       6                        162                         24       7                        162                         24       8                        162                         24       9                        162                         24       10                       162                         24       11                       162                         24               token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             138               109.04                   1.3       1                             138                83.66                   4.8       2                             138               109.04                   1.3       3                             138                83.66                   4.8       4                             138               109.04                   1.3       5                             138                83.66                   4.8       6                             138               109.04                   1.3       7                             138                83.66                   4.8       8                             138               109.04                   1.3       9                             138                83.66                   4.8       10                            138               109.04                   1.3       11                            138                83.66                   4.8               ...  difficult_words  linsear_write_formula  gunning_fog  \    0   ...                0                    5.5         5.20       1   ...                2                    6.5         8.28       2   ...                0                    5.5         5.20       3   ...                2                    6.5         8.28       4   ...                0                    5.5         5.20       5   ...                2                    6.5         8.28       6   ...                0                    5.5         5.20       7   ...                2                    6.5         8.28       8   ...                0                    5.5         5.20       9   ...                2                    6.5         8.28       10  ...                0                    5.5         5.20       11  ...                2                    6.5         8.28                   text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0   5th and 6th grade            133.58           131.54             62.30       1   6th and 7th grade            115.58           112.37             54.83       2   5th and 6th grade            133.58           131.54             62.30       3   6th and 7th grade            115.58           112.37             54.83       4   5th and 6th grade            133.58           131.54             62.30       5   6th and 7th grade            115.58           112.37             54.83       6   5th and 6th grade            133.58           131.54             62.30       7   6th and 7th grade            115.58           112.37             54.83       8   5th and 6th grade            133.58           131.54             62.30       9   6th and 7th grade            115.58           112.37             54.83       10  5th and 6th grade            133.58           131.54             62.30       11  6th and 7th grade            115.58           112.37             54.83              crawford  gulpease_index   osman      0      -0.2            79.8  116.91      1       1.4            72.1  100.17      2      -0.2            79.8  116.91      3       1.4            72.1  100.17      4      -0.2            79.8  116.91      5       1.4            72.1  100.17      6      -0.2            79.8  116.91      7       1.4            72.1  100.17      8      -0.2            79.8  116.91      9       1.4            72.1  100.17      10     -0.2            79.8  116.91      11      1.4            72.1  100.17          [12 rows x 24 columns]}    2023-03-29 14:00:25,948 - clearml.Task - INFO - Completed model upload to https://files.clear.ml/langchain_callback_demo/llm.988bd727b0e94a29a3ac0ee526813545/models/simple_sequentialAt this point you can already go to https://app.clear.ml and take a look at the resulting ClearML Task that was created.Among others, you should see that this notebook is saved along with any git information. The model JSON that contains the used parameters is saved as an artifact, there are also console logs and under the plots section, you'll find tables that represent the flow of the chain.Finally, if you enabled visualizations, these are stored as HTML files under debug samples.Scenario 2: Creating an agent with tools‚ÄãTo show a more advanced workflow, let's create an agent with access to tools. The way ClearML tracks the results is not different though, only the table will look slightly different as there are other types of actions taken when compared to the earlier, simpler example.You can now also see the use of the finish=True keyword, which will fully close the ClearML Task, instead of just resetting the parameters and prompts for a new conversation.from langchain.agents import initialize_agent, load_toolsfrom langchain.agents import AgentType# SCENARIO 2 - Agent with Toolstools = load_tools(["serpapi", "llm-math"], llm=llm, callbacks=callbacks)agent = initialize_agent(    tools,    llm,    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,    callbacks=callbacks,)agent.run("Who is the wife of the person who sang summer of 69?")clearml_callback.flush_tracker(    langchain_asset=agent, name="Agent with Tools", finish=True)API Reference:initialize_agentload_toolsAgentType            > Entering new AgentExecutor chain...    {'action': 'on_chain_start', 'name': 'AgentExecutor', 'step': 1, 'starts': 1, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 0, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'input': 'Who is the wife of the person who sang summer of 69?'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 2, 'starts': 2, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 189, 'token_usage_completion_tokens': 34, 'token_usage_total_tokens': 223, 'model_name': 'text-davinci-003', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 91.61, 'flesch_kincaid_grade': 3.8, 'smog_index': 0.0, 'coleman_liau_index': 3.41, 'automated_readability_index': 3.5, 'dale_chall_readability_score': 6.06, 'difficult_words': 2, 'linsear_write_formula': 5.75, 'gunning_fog': 5.4, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 121.07, 'szigriszt_pazos': 119.5, 'gutierrez_polini': 54.91, 'crawford': 0.9, 'gulpease_index': 72.7, 'osman': 92.16}     I need to find out who sang summer of 69 and then find out who their wife is.    Action: Search    Action Input: "Who sang summer of 69"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who sang summer of 69', 'log': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'step': 4, 'starts': 3, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 1, 'tool_ends': 0, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who sang summer of 69', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 5, 'starts': 4, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 0, 'agent_ends': 0}        Observation: Bryan Adams - Summer Of 69 (Official Music Video).    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams - Summer Of 69 (Official Music Video).', 'step': 6, 'starts': 4, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 7, 'starts': 5, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 242, 'token_usage_completion_tokens': 28, 'token_usage_total_tokens': 270, 'model_name': 'text-davinci-003', 'step': 8, 'starts': 5, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'text': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 94.66, 'flesch_kincaid_grade': 2.7, 'smog_index': 0.0, 'coleman_liau_index': 4.73, 'automated_readability_index': 4.0, 'dale_chall_readability_score': 7.16, 'difficult_words': 2, 'linsear_write_formula': 4.25, 'gunning_fog': 4.2, 'text_standard': '4th and 5th grade', 'fernandez_huerta': 124.13, 'szigriszt_pazos': 119.2, 'gutierrez_polini': 52.26, 'crawford': 0.7, 'gulpease_index': 74.7, 'osman': 84.2}     I need to find out who Bryan Adams is married to.    Action: Search    Action Input: "Who is Bryan Adams married to"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who is Bryan Adams married to', 'log': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'step': 9, 'starts': 6, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 3, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who is Bryan Adams married to', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 10, 'starts': 7, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 1, 'agent_ends': 0}        Observation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...', 'step': 11, 'starts': 7, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 12, 'starts': 8, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought: I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"\nObservation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 314, 'token_usage_completion_tokens': 18, 'token_usage_total_tokens': 332, 'model_name': 'text-davinci-003', 'step': 13, 'starts': 8, 'ends': 5, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'text': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 81.29, 'flesch_kincaid_grade': 3.7, 'smog_index': 0.0, 'coleman_liau_index': 5.75, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 7.37, 'difficult_words': 1, 'linsear_write_formula': 2.5, 'gunning_fog': 2.8, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 115.7, 'szigriszt_pazos': 110.84, 'gutierrez_polini': 49.79, 'crawford': 0.7, 'gulpease_index': 85.4, 'osman': 83.14}     I now know the final answer.    Final Answer: Bryan Adams has never been married.    {'action': 'on_agent_finish', 'output': 'Bryan Adams has never been married.', 'log': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'step': 14, 'starts': 8, 'ends': 6, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}        > Finished chain.    {'action': 'on_chain_end', 'outputs': 'Bryan Adams has never been married.', 'step': 15, 'starts': 8, 'ends': 7, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 1, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}    {'action_records':              action    name  step  starts  ends  errors  text_ctr  \    0      on_llm_start  OpenAI     1       1     0       0         0       1      on_llm_start  OpenAI     1       1     0       0         0       2      on_llm_start  OpenAI     1       1     0       0         0       3      on_llm_start  OpenAI     1       1     0       0         0       4      on_llm_start  OpenAI     1       1     0       0         0       ..              ...     ...   ...     ...   ...     ...       ...       66      on_tool_end     NaN    11       7     4       0         0       67     on_llm_start  OpenAI    12       8     4       0         0       68       on_llm_end     NaN    13       8     5       0         0       69  on_agent_finish     NaN    14       8     6       0         0       70     on_chain_end     NaN    15       8     7       0         0               chain_starts  chain_ends  llm_starts  ...  gulpease_index  osman  input  \    0              0           0           1  ...             NaN    NaN    NaN       1              0           0           1  ...             NaN    NaN    NaN       2              0           0           1  ...             NaN    NaN    NaN       3              0           0           1  ...             NaN    NaN    NaN       4              0           0           1  ...             NaN    NaN    NaN       ..           ...         ...         ...  ...             ...    ...    ...       66             1           0           2  ...             NaN    NaN    NaN       67             1           0           3  ...             NaN    NaN    NaN       68             1           0           3  ...            85.4  83.14    NaN       69             1           0           3  ...             NaN    NaN    NaN       70             1           1           3  ...             NaN    NaN    NaN               tool  tool_input                                                log  \    0    NaN         NaN                                                NaN       1    NaN         NaN                                                NaN       2    NaN         NaN                                                NaN       3    NaN         NaN                                                NaN       4    NaN         NaN                                                NaN       ..   ...         ...                                                ...       66   NaN         NaN                                                NaN       67   NaN         NaN                                                NaN       68   NaN         NaN                                                NaN       69   NaN         NaN   I now know the final answer.\nFinal Answer: B...       70   NaN         NaN                                                NaN               input_str  description                                             output  \    0         NaN          NaN                                                NaN       1         NaN          NaN                                                NaN       2         NaN          NaN                                                NaN       3         NaN          NaN                                                NaN       4         NaN          NaN                                                NaN       ..        ...          ...                                                ...       66        NaN          NaN  Bryan Adams has never married. In the 1990s, h...       67        NaN          NaN                                                NaN       68        NaN          NaN                                                NaN       69        NaN          NaN                Bryan Adams has never been married.       70        NaN          NaN                                                NaN                                           outputs      0                                   NaN      1                                   NaN      2                                   NaN      3                                   NaN      4                                   NaN      ..                                  ...      66                                  NaN      67                                  NaN      68                                  NaN      69                                  NaN      70  Bryan Adams has never been married.          [71 rows x 47 columns], 'session_analysis':    prompt_step                                            prompts    name  \    0            2  Answer the following questions as best you can...  OpenAI       1            7  Answer the following questions as best you can...  OpenAI       2           12  Answer the following questions as best you can...  OpenAI              output_step                                             output  \    0            3   I need to find out who sang summer of 69 and ...       1            8   I need to find out who Bryan Adams is married...       2           13   I now know the final answer.\nFinal Answer: B...              token_usage_total_tokens  token_usage_prompt_tokens  \    0                       223                        189       1                       270                        242       2                       332                        314              token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             34                91.61                   3.8       1                             28                94.66                   2.7       2                             18                81.29                   3.7              ...  difficult_words  linsear_write_formula  gunning_fog  \    0  ...                2                   5.75          5.4       1  ...                2                   4.25          4.2       2  ...                1                   2.50          2.8                  text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0  3rd and 4th grade            121.07           119.50             54.91       1  4th and 5th grade            124.13           119.20             52.26       2  3rd and 4th grade            115.70           110.84             49.79             crawford  gulpease_index  osman      0      0.9            72.7  92.16      1      0.7            74.7  84.20      2      0.7            85.4  83.14          [3 rows x 24 columns]}    Could not update last created model in Task 988bd727b0e94a29a3ac0ee526813545, Task status 'completed' cannot be updatedTips and Next Steps‚ÄãMake sure you always use a unique name argument for the clearml_callback.flush_tracker function. If not, the model parameters used for a run will override the previous run!If you close the ClearML Callback using clearml_callback.flush_tracker(..., finish=True) the Callback cannot be used anymore. Make a new one if you want to keep logging.Check out the rest of the open source ClearML ecosystem, there is a data version manager, a remote execution agent, automated pipelines and much more!PreviousClarifaiNextClickHouseInstallation and SetupGetting API CredentialsCallbacksScenario 1: Just an LLMScenario 2: Creating an agent with toolsTips and Next Steps IntegrationsGrouped by providerClearMLOn this pageClearMLClearML is a ML/DL development and production suite, it contains 5 main modules:Experiment Manager - Automagical experiment tracking, environments and resultsMLOps - Orchestration, Automation & Pipelines solution for ML/DL jobs (K8s / Cloud / bare-metal)Data-Management - Fully differentiable data management & version control solution on top of object-storage (S3 / GS / Azure / NAS)Model-Serving - cloud-ready Scalable model serving solution! with out-of-the-box Model MonitoringFire Reports - Create and share rich MarkDown documents supporting embeddable online contentIn order to properly keep track of your langchain experiments and their results, you can enable the ClearML integration. We use the ClearML Experiment Manager that neatly tracks and organizes all your experiment runs.Installation and Setup‚Äãpip install clearmlpip install pandaspip install textstatpip install spacypython -m spacy download en_core_web_smGetting API Credentials‚ÄãWe'll be using quite some APIs in this notebook, here is a list and where to get them:ClearML: https://app.clear.ml/settings/workspace-configurationOpenAI: https://platform.openai.com/account/api-keysSerpAPI (google search): https://serpapi.com/dashboardimport osos.environ["CLEARML_API_ACCESS_KEY"] = ""os.environ["CLEARML_API_SECRET_KEY"] = ""os.environ["OPENAI_API_KEY"] = ""os.environ["SERPAPI_API_KEY"] = ""Callbacks‚Äãfrom langchain.callbacks import ClearMLCallbackHandlerAPI Reference:ClearMLCallbackHandlerfrom datetime import datetimefrom langchain.callbacks import StdOutCallbackHandlerfrom langchain.llms import OpenAI# Setup and use the ClearML Callbackclearml_callback = ClearMLCallbackHandler(    task_type="inference",    project_name="langchain_callback_demo",    task_name="llm",    tags=["test"],    # Change the following parameters based on the amount of detail you want tracked    visualize=True,    complexity_metrics=True,    stream_logs=True,)callbacks = [StdOutCallbackHandler(), clearml_callback]# Get the OpenAI model ready to gollm = OpenAI(temperature=0, callbacks=callbacks)API Reference:StdOutCallbackHandlerOpenAI    The clearml callback is currently in beta and is subject to change based on updates to `langchain`. Please report any issues to https://github.com/allegroai/clearml/issues with the tag `langchain`.Scenario 1: Just an LLM‚ÄãFirst, let's just run a single LLM a few times and capture the resulting prompt-answer conversation in ClearML# SCENARIO 1 - LLMllm_result = llm.generate(["Tell me a joke", "Tell me a poem"] * 3)# After every generation run, use flush to make sure all the metrics# prompts and other output are properly saved separatelyclearml_callback.flush_tracker(langchain_asset=llm, name="simple_sequential")    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action_records':           action    name  step  starts  ends  errors  text_ctr  chain_starts  \    0   on_llm_start  OpenAI     1       1     0       0         0             0       1   on_llm_start  OpenAI     1       1     0       0         0             0       2   on_llm_start  OpenAI     1       1     0       0         0             0       3   on_llm_start  OpenAI     1       1     0       0         0             0       4   on_llm_start  OpenAI     1       1     0       0         0             0       5   on_llm_start  OpenAI     1       1     0       0         0             0       6     on_llm_end     NaN     2       1     1       0         0             0       7     on_llm_end     NaN     2       1     1       0         0             0       8     on_llm_end     NaN     2       1     1       0         0             0       9     on_llm_end     NaN     2       1     1       0         0             0       10    on_llm_end     NaN     2       1     1       0         0             0       11    on_llm_end     NaN     2       1     1       0         0             0       12  on_llm_start  OpenAI     3       2     1       0         0             0       13  on_llm_start  OpenAI     3       2     1       0         0             0       14  on_llm_start  OpenAI     3       2     1       0         0             0       15  on_llm_start  OpenAI     3       2     1       0         0             0       16  on_llm_start  OpenAI     3       2     1       0         0             0       17  on_llm_start  OpenAI     3       2     1       0         0             0       18    on_llm_end     NaN     4       2     2       0         0             0       19    on_llm_end     NaN     4       2     2       0         0             0       20    on_llm_end     NaN     4       2     2       0         0             0       21    on_llm_end     NaN     4       2     2       0         0             0       22    on_llm_end     NaN     4       2     2       0         0             0       23    on_llm_end     NaN     4       2     2       0         0             0               chain_ends  llm_starts  ...  difficult_words  linsear_write_formula  \    0            0           1  ...              NaN                    NaN       1            0           1  ...              NaN                    NaN       2            0           1  ...              NaN                    NaN       3            0           1  ...              NaN                    NaN       4            0           1  ...              NaN                    NaN       5            0           1  ...              NaN                    NaN       6            0           1  ...              0.0                    5.5       7            0           1  ...              2.0                    6.5       8            0           1  ...              0.0                    5.5       9            0           1  ...              2.0                    6.5       10           0           1  ...              0.0                    5.5       11           0           1  ...              2.0                    6.5       12           0           2  ...              NaN                    NaN       13           0           2  ...              NaN                    NaN       14           0           2  ...              NaN                    NaN       15           0           2  ...              NaN                    NaN       16           0           2  ...              NaN                    NaN       17           0           2  ...              NaN                    NaN       18           0           2  ...              0.0                    5.5       19           0           2  ...              2.0                    6.5       20           0           2  ...              0.0                    5.5       21           0           2  ...              2.0                    6.5       22           0           2  ...              0.0                    5.5       23           0           2  ...              2.0                    6.5               gunning_fog      text_standard  fernandez_huerta szigriszt_pazos  \    0           NaN                NaN               NaN             NaN       1           NaN                NaN               NaN             NaN       2           NaN                NaN               NaN             NaN       3           NaN                NaN               NaN             NaN       4           NaN                NaN               NaN             NaN       5           NaN                NaN               NaN             NaN       6          5.20  5th and 6th grade            133.58          131.54       7          8.28  6th and 7th grade            115.58          112.37       8          5.20  5th and 6th grade            133.58          131.54       9          8.28  6th and 7th grade            115.58          112.37       10         5.20  5th and 6th grade            133.58          131.54       11         8.28  6th and 7th grade            115.58          112.37       12          NaN                NaN               NaN             NaN       13          NaN                NaN               NaN             NaN       14          NaN                NaN               NaN             NaN       15          NaN                NaN               NaN             NaN       16          NaN                NaN               NaN             NaN       17          NaN                NaN               NaN             NaN       18         5.20  5th and 6th grade            133.58          131.54       19         8.28  6th and 7th grade            115.58          112.37       20         5.20  5th and 6th grade            133.58          131.54       21         8.28  6th and 7th grade            115.58          112.37       22         5.20  5th and 6th grade            133.58          131.54       23         8.28  6th and 7th grade            115.58          112.37               gutierrez_polini  crawford  gulpease_index   osman      0                NaN       NaN             NaN     NaN      1                NaN       NaN             NaN     NaN      2                NaN       NaN             NaN     NaN      3                NaN       NaN             NaN     NaN      4                NaN       NaN             NaN     NaN      5                NaN       NaN             NaN     NaN      6              62.30      -0.2            79.8  116.91      7              54.83       1.4            72.1  100.17      8              62.30      -0.2            79.8  116.91      9              54.83       1.4            72.1  100.17      10             62.30      -0.2            79.8  116.91      11             54.83       1.4            72.1  100.17      12               NaN       NaN             NaN     NaN      13               NaN       NaN             NaN     NaN      14               NaN       NaN             NaN     NaN      15               NaN       NaN             NaN     NaN      16               NaN       NaN             NaN     NaN      17               NaN       NaN             NaN     NaN      18             62.30      -0.2            79.8  116.91      19             54.83       1.4            72.1  100.17      20             62.30      -0.2            79.8  116.91      21             54.83       1.4            72.1  100.17      22             62.30      -0.2            79.8  116.91      23             54.83       1.4            72.1  100.17          [24 rows x 39 columns], 'session_analysis':     prompt_step         prompts    name  output_step  \    0             1  Tell me a joke  OpenAI            2       1             1  Tell me a poem  OpenAI            2       2             1  Tell me a joke  OpenAI            2       3             1  Tell me a poem  OpenAI            2       4             1  Tell me a joke  OpenAI            2       5             1  Tell me a poem  OpenAI            2       6             3  Tell me a joke  OpenAI            4       7             3  Tell me a poem  OpenAI            4       8             3  Tell me a joke  OpenAI            4       9             3  Tell me a poem  OpenAI            4       10            3  Tell me a joke  OpenAI            4       11            3  Tell me a poem  OpenAI            4                                                          output  \    0   \n\nQ: What did the fish say when it hit the w...       1   \n\nRoses are red,\nViolets are blue,\nSugar i...       2   \n\nQ: What did the fish say when it hit the w...       3   \n\nRoses are red,\nViolets are blue,\nSugar i...       4   \n\nQ: What did the fish say when it hit the w...       5   \n\nRoses are red,\nViolets are blue,\nSugar i...       6   \n\nQ: What did the fish say when it hit the w...       7   \n\nRoses are red,\nViolets are blue,\nSugar i...       8   \n\nQ: What did the fish say when it hit the w...       9   \n\nRoses are red,\nViolets are blue,\nSugar i...       10  \n\nQ: What did the fish say when it hit the w...       11  \n\nRoses are red,\nViolets are blue,\nSugar i...               token_usage_total_tokens  token_usage_prompt_tokens  \    0                        162                         24       1                        162                         24       2                        162                         24       3                        162                         24       4                        162                         24       5                        162                         24       6                        162                         24       7                        162                         24       8                        162                         24       9                        162                         24       10                       162                         24       11                       162                         24               token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             138               109.04                   1.3       1                             138                83.66                   4.8       2                             138               109.04                   1.3       3                             138                83.66                   4.8       4                             138               109.04                   1.3       5                             138                83.66                   4.8       6                             138               109.04                   1.3       7                             138                83.66                   4.8       8                             138               109.04                   1.3       9                             138                83.66                   4.8       10                            138               109.04                   1.3       11                            138                83.66                   4.8               ...  difficult_words  linsear_write_formula  gunning_fog  \    0   ...                0                    5.5         5.20       1   ...                2                    6.5         8.28       2   ...                0                    5.5         5.20       3   ...                2                    6.5         8.28       4   ...                0                    5.5         5.20       5   ...                2                    6.5         8.28       6   ...                0                    5.5         5.20       7   ...                2                    6.5         8.28       8   ...                0                    5.5         5.20       9   ...                2                    6.5         8.28       10  ...                0                    5.5         5.20       11  ...                2                    6.5         8.28                   text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0   5th and 6th grade            133.58           131.54             62.30       1   6th and 7th grade            115.58           112.37             54.83       2   5th and 6th grade            133.58           131.54             62.30       3   6th and 7th grade            115.58           112.37             54.83       4   5th and 6th grade            133.58           131.54             62.30       5   6th and 7th grade            115.58           112.37             54.83       6   5th and 6th grade            133.58           131.54             62.30       7   6th and 7th grade            115.58           112.37             54.83       8   5th and 6th grade            133.58           131.54             62.30       9   6th and 7th grade            115.58           112.37             54.83       10  5th and 6th grade            133.58           131.54             62.30       11  6th and 7th grade            115.58           112.37             54.83              crawford  gulpease_index   osman      0      -0.2            79.8  116.91      1       1.4            72.1  100.17      2      -0.2            79.8  116.91      3       1.4            72.1  100.17      4      -0.2            79.8  116.91      5       1.4            72.1  100.17      6      -0.2            79.8  116.91      7       1.4            72.1  100.17      8      -0.2            79.8  116.91      9       1.4            72.1  100.17      10     -0.2            79.8  116.91      11      1.4            72.1  100.17          [12 rows x 24 columns]}    2023-03-29 14:00:25,948 - clearml.Task - INFO - Completed model upload to https://files.clear.ml/langchain_callback_demo/llm.988bd727b0e94a29a3ac0ee526813545/models/simple_sequentialAt this point you can already go to https://app.clear.ml and take a look at the resulting ClearML Task that was created.Among others, you should see that this notebook is saved along with any git information. The model JSON that contains the used parameters is saved as an artifact, there are also console logs and under the plots section, you'll find tables that represent the flow of the chain.Finally, if you enabled visualizations, these are stored as HTML files under debug samples.Scenario 2: Creating an agent with tools‚ÄãTo show a more advanced workflow, let's create an agent with access to tools. The way ClearML tracks the results is not different though, only the table will look slightly different as there are other types of actions taken when compared to the earlier, simpler example.You can now also see the use of the finish=True keyword, which will fully close the ClearML Task, instead of just resetting the parameters and prompts for a new conversation.from langchain.agents import initialize_agent, load_toolsfrom langchain.agents import AgentType# SCENARIO 2 - Agent with Toolstools = load_tools(["serpapi", "llm-math"], llm=llm, callbacks=callbacks)agent = initialize_agent(    tools,    llm,    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,    callbacks=callbacks,)agent.run("Who is the wife of the person who sang summer of 69?")clearml_callback.flush_tracker(    langchain_asset=agent, name="Agent with Tools", finish=True)API Reference:initialize_agentload_toolsAgentType            > Entering new AgentExecutor chain...    {'action': 'on_chain_start', 'name': 'AgentExecutor', 'step': 1, 'starts': 1, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 0, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'input': 'Who is the wife of the person who sang summer of 69?'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 2, 'starts': 2, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 189, 'token_usage_completion_tokens': 34, 'token_usage_total_tokens': 223, 'model_name': 'text-davinci-003', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 91.61, 'flesch_kincaid_grade': 3.8, 'smog_index': 0.0, 'coleman_liau_index': 3.41, 'automated_readability_index': 3.5, 'dale_chall_readability_score': 6.06, 'difficult_words': 2, 'linsear_write_formula': 5.75, 'gunning_fog': 5.4, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 121.07, 'szigriszt_pazos': 119.5, 'gutierrez_polini': 54.91, 'crawford': 0.9, 'gulpease_index': 72.7, 'osman': 92.16}     I need to find out who sang summer of 69 and then find out who their wife is.    Action: Search    Action Input: "Who sang summer of 69"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who sang summer of 69', 'log': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'step': 4, 'starts': 3, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 1, 'tool_ends': 0, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who sang summer of 69', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 5, 'starts': 4, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 0, 'agent_ends': 0}        Observation: Bryan Adams - Summer Of 69 (Official Music Video).    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams - Summer Of 69 (Official Music Video).', 'step': 6, 'starts': 4, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 7, 'starts': 5, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 242, 'token_usage_completion_tokens': 28, 'token_usage_total_tokens': 270, 'model_name': 'text-davinci-003', 'step': 8, 'starts': 5, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'text': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 94.66, 'flesch_kincaid_grade': 2.7, 'smog_index': 0.0, 'coleman_liau_index': 4.73, 'automated_readability_index': 4.0, 'dale_chall_readability_score': 7.16, 'difficult_words': 2, 'linsear_write_formula': 4.25, 'gunning_fog': 4.2, 'text_standard': '4th and 5th grade', 'fernandez_huerta': 124.13, 'szigriszt_pazos': 119.2, 'gutierrez_polini': 52.26, 'crawford': 0.7, 'gulpease_index': 74.7, 'osman': 84.2}     I need to find out who Bryan Adams is married to.    Action: Search    Action Input: "Who is Bryan Adams married to"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who is Bryan Adams married to', 'log': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'step': 9, 'starts': 6, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 3, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who is Bryan Adams married to', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 10, 'starts': 7, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 1, 'agent_ends': 0}        Observation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...', 'step': 11, 'starts': 7, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 12, 'starts': 8, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought: I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"\nObservation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 314, 'token_usage_completion_tokens': 18, 'token_usage_total_tokens': 332, 'model_name': 'text-davinci-003', 'step': 13, 'starts': 8, 'ends': 5, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'text': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 81.29, 'flesch_kincaid_grade': 3.7, 'smog_index': 0.0, 'coleman_liau_index': 5.75, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 7.37, 'difficult_words': 1, 'linsear_write_formula': 2.5, 'gunning_fog': 2.8, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 115.7, 'szigriszt_pazos': 110.84, 'gutierrez_polini': 49.79, 'crawford': 0.7, 'gulpease_index': 85.4, 'osman': 83.14}     I now know the final answer.    Final Answer: Bryan Adams has never been married.    {'action': 'on_agent_finish', 'output': 'Bryan Adams has never been married.', 'log': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'step': 14, 'starts': 8, 'ends': 6, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}        > Finished chain.    {'action': 'on_chain_end', 'outputs': 'Bryan Adams has never been married.', 'step': 15, 'starts': 8, 'ends': 7, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 1, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}    {'action_records':              action    name  step  starts  ends  errors  text_ctr  \    0      on_llm_start  OpenAI     1       1     0       0         0       1      on_llm_start  OpenAI     1       1     0       0         0       2      on_llm_start  OpenAI     1       1     0       0         0       3      on_llm_start  OpenAI     1       1     0       0         0       4      on_llm_start  OpenAI     1       1     0       0         0       ..              ...     ...   ...     ...   ...     ...       ...       66      on_tool_end     NaN    11       7     4       0         0       67     on_llm_start  OpenAI    12       8     4       0         0       68       on_llm_end     NaN    13       8     5       0         0       69  on_agent_finish     NaN    14       8     6       0         0       70     on_chain_end     NaN    15       8     7       0         0               chain_starts  chain_ends  llm_starts  ...  gulpease_index  osman  input  \    0              0           0           1  ...             NaN    NaN    NaN       1              0           0           1  ...             NaN    NaN    NaN       2              0           0           1  ...             NaN    NaN    NaN       3              0           0           1  ...             NaN    NaN    NaN       4              0           0           1  ...             NaN    NaN    NaN       ..           ...         ...         ...  ...             ...    ...    ...       66             1           0           2  ...             NaN    NaN    NaN       67             1           0           3  ...             NaN    NaN    NaN       68             1           0           3  ...            85.4  83.14    NaN       69             1           0           3  ...             NaN    NaN    NaN       70             1           1           3  ...             NaN    NaN    NaN               tool  tool_input                                                log  \    0    NaN         NaN                                                NaN       1    NaN         NaN                                                NaN       2    NaN         NaN                                                NaN       3    NaN         NaN                                                NaN       4    NaN         NaN                                                NaN       ..   ...         ...                                                ...       66   NaN         NaN                                                NaN       67   NaN         NaN                                                NaN       68   NaN         NaN                                                NaN       69   NaN         NaN   I now know the final answer.\nFinal Answer: B...       70   NaN         NaN                                                NaN               input_str  description                                             output  \    0         NaN          NaN                                                NaN       1         NaN          NaN                                                NaN       2         NaN          NaN                                                NaN       3         NaN          NaN                                                NaN       4         NaN          NaN                                                NaN       ..        ...          ...                                                ...       66        NaN          NaN  Bryan Adams has never married. In the 1990s, h...       67        NaN          NaN                                                NaN       68        NaN          NaN                                                NaN       69        NaN          NaN                Bryan Adams has never been married.       70        NaN          NaN                                                NaN                                           outputs      0                                   NaN      1                                   NaN      2                                   NaN      3                                   NaN      4                                   NaN      ..                                  ...      66                                  NaN      67                                  NaN      68                                  NaN      69                                  NaN      70  Bryan Adams has never been married.          [71 rows x 47 columns], 'session_analysis':    prompt_step                                            prompts    name  \    0            2  Answer the following questions as best you can...  OpenAI       1            7  Answer the following questions as best you can...  OpenAI       2           12  Answer the following questions as best you can...  OpenAI              output_step                                             output  \    0            3   I need to find out who sang summer of 69 and ...       1            8   I need to find out who Bryan Adams is married...       2           13   I now know the final answer.\nFinal Answer: B...              token_usage_total_tokens  token_usage_prompt_tokens  \    0                       223                        189       1                       270                        242       2                       332                        314              token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             34                91.61                   3.8       1                             28                94.66                   2.7       2                             18                81.29                   3.7              ...  difficult_words  linsear_write_formula  gunning_fog  \    0  ...                2                   5.75          5.4       1  ...                2                   4.25          4.2       2  ...                1                   2.50          2.8                  text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0  3rd and 4th grade            121.07           119.50             54.91       1  4th and 5th grade            124.13           119.20             52.26       2  3rd and 4th grade            115.70           110.84             49.79             crawford  gulpease_index  osman      0      0.9            72.7  92.16      1      0.7            74.7  84.20      2      0.7            85.4  83.14          [3 rows x 24 columns]}    Could not update last created model in Task 988bd727b0e94a29a3ac0ee526813545, Task status 'completed' cannot be updatedTips and Next Steps‚ÄãMake sure you always use a unique name argument for the clearml_callback.flush_tracker function. If not, the model parameters used for a run will override the previous run!If you close the ClearML Callback using clearml_callback.flush_tracker(..., finish=True) the Callback cannot be used anymore. Make a new one if you want to keep logging.Check out the rest of the open source ClearML ecosystem, there is a data version manager, a remote execution agent, automated pipelines and much more!PreviousClarifaiNextClickHouse IntegrationsGrouped by providerClearMLOn this pageClearMLClearML is a ML/DL development and production suite, it contains 5 main modules:Experiment Manager - Automagical experiment tracking, environments and resultsMLOps - Orchestration, Automation & Pipelines solution for ML/DL jobs (K8s / Cloud / bare-metal)Data-Management - Fully differentiable data management & version control solution on top of object-storage (S3 / GS / Azure / NAS)Model-Serving - cloud-ready Scalable model serving solution! with out-of-the-box Model MonitoringFire Reports - Create and share rich MarkDown documents supporting embeddable online contentIn order to properly keep track of your langchain experiments and their results, you can enable the ClearML integration. We use the ClearML Experiment Manager that neatly tracks and organizes all your experiment runs.Installation and Setup‚Äãpip install clearmlpip install pandaspip install textstatpip install spacypython -m spacy download en_core_web_smGetting API Credentials‚ÄãWe'll be using quite some APIs in this notebook, here is a list and where to get them:ClearML: https://app.clear.ml/settings/workspace-configurationOpenAI: https://platform.openai.com/account/api-keysSerpAPI (google search): https://serpapi.com/dashboardimport osos.environ["CLEARML_API_ACCESS_KEY"] = ""os.environ["CLEARML_API_SECRET_KEY"] = ""os.environ["OPENAI_API_KEY"] = ""os.environ["SERPAPI_API_KEY"] = ""Callbacks‚Äãfrom langchain.callbacks import ClearMLCallbackHandlerAPI Reference:ClearMLCallbackHandlerfrom datetime import datetimefrom langchain.callbacks import StdOutCallbackHandlerfrom langchain.llms import OpenAI# Setup and use the ClearML Callbackclearml_callback = ClearMLCallbackHandler(    task_type="inference",    project_name="langchain_callback_demo",    task_name="llm",    tags=["test"],    # Change the following parameters based on the amount of detail you want tracked    visualize=True,    complexity_metrics=True,    stream_logs=True,)callbacks = [StdOutCallbackHandler(), clearml_callback]# Get the OpenAI model ready to gollm = OpenAI(temperature=0, callbacks=callbacks)API Reference:StdOutCallbackHandlerOpenAI    The clearml callback is currently in beta and is subject to change based on updates to `langchain`. Please report any issues to https://github.com/allegroai/clearml/issues with the tag `langchain`.Scenario 1: Just an LLM‚ÄãFirst, let's just run a single LLM a few times and capture the resulting prompt-answer conversation in ClearML# SCENARIO 1 - LLMllm_result = llm.generate(["Tell me a joke", "Tell me a poem"] * 3)# After every generation run, use flush to make sure all the metrics# prompts and other output are properly saved separatelyclearml_callback.flush_tracker(langchain_asset=llm, name="simple_sequential")    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action_records':           action    name  step  starts  ends  errors  text_ctr  chain_starts  \    0   on_llm_start  OpenAI     1       1     0       0         0             0       1   on_llm_start  OpenAI     1       1     0       0         0             0       2   on_llm_start  OpenAI     1       1     0       0         0             0       3   on_llm_start  OpenAI     1       1     0       0         0             0       4   on_llm_start  OpenAI     1       1     0       0         0             0       5   on_llm_start  OpenAI     1       1     0       0         0             0       6     on_llm_end     NaN     2       1     1       0         0             0       7     on_llm_end     NaN     2       1     1       0         0             0       8     on_llm_end     NaN     2       1     1       0         0             0       9     on_llm_end     NaN     2       1     1       0         0             0       10    on_llm_end     NaN     2       1     1       0         0             0       11    on_llm_end     NaN     2       1     1       0         0             0       12  on_llm_start  OpenAI     3       2     1       0         0             0       13  on_llm_start  OpenAI     3       2     1       0         0             0       14  on_llm_start  OpenAI     3       2     1       0         0             0       15  on_llm_start  OpenAI     3       2     1       0         0             0       16  on_llm_start  OpenAI     3       2     1       0         0             0       17  on_llm_start  OpenAI     3       2     1       0         0             0       18    on_llm_end     NaN     4       2     2       0         0             0       19    on_llm_end     NaN     4       2     2       0         0             0       20    on_llm_end     NaN     4       2     2       0         0             0       21    on_llm_end     NaN     4       2     2       0         0             0       22    on_llm_end     NaN     4       2     2       0         0             0       23    on_llm_end     NaN     4       2     2       0         0             0               chain_ends  llm_starts  ...  difficult_words  linsear_write_formula  \    0            0           1  ...              NaN                    NaN       1            0           1  ...              NaN                    NaN       2            0           1  ...              NaN                    NaN       3            0           1  ...              NaN                    NaN       4            0           1  ...              NaN                    NaN       5            0           1  ...              NaN                    NaN       6            0           1  ...              0.0                    5.5       7            0           1  ...              2.0                    6.5       8            0           1  ...              0.0                    5.5       9            0           1  ...              2.0                    6.5       10           0           1  ...              0.0                    5.5       11           0           1  ...              2.0                    6.5       12           0           2  ...              NaN                    NaN       13           0           2  ...              NaN                    NaN       14           0           2  ...              NaN                    NaN       15           0           2  ...              NaN                    NaN       16           0           2  ...              NaN                    NaN       17           0           2  ...              NaN                    NaN       18           0           2  ...              0.0                    5.5       19           0           2  ...              2.0                    6.5       20           0           2  ...              0.0                    5.5       21           0           2  ...              2.0                    6.5       22           0           2  ...              0.0                    5.5       23           0           2  ...              2.0                    6.5               gunning_fog      text_standard  fernandez_huerta szigriszt_pazos  \    0           NaN                NaN               NaN             NaN       1           NaN                NaN               NaN             NaN       2           NaN                NaN               NaN             NaN       3           NaN                NaN               NaN             NaN       4           NaN                NaN               NaN             NaN       5           NaN                NaN               NaN             NaN       6          5.20  5th and 6th grade            133.58          131.54       7          8.28  6th and 7th grade            115.58          112.37       8          5.20  5th and 6th grade            133.58          131.54       9          8.28  6th and 7th grade            115.58          112.37       10         5.20  5th and 6th grade            133.58          131.54       11         8.28  6th and 7th grade            115.58          112.37       12          NaN                NaN               NaN             NaN       13          NaN                NaN               NaN             NaN       14          NaN                NaN               NaN             NaN       15          NaN                NaN               NaN             NaN       16          NaN                NaN               NaN             NaN       17          NaN                NaN               NaN             NaN       18         5.20  5th and 6th grade            133.58          131.54       19         8.28  6th and 7th grade            115.58          112.37       20         5.20  5th and 6th grade            133.58          131.54       21         8.28  6th and 7th grade            115.58          112.37       22         5.20  5th and 6th grade            133.58          131.54       23         8.28  6th and 7th grade            115.58          112.37               gutierrez_polini  crawford  gulpease_index   osman      0                NaN       NaN             NaN     NaN      1                NaN       NaN             NaN     NaN      2                NaN       NaN             NaN     NaN      3                NaN       NaN             NaN     NaN      4                NaN       NaN             NaN     NaN      5                NaN       NaN             NaN     NaN      6              62.30      -0.2            79.8  116.91      7              54.83       1.4            72.1  100.17      8              62.30      -0.2            79.8  116.91      9              54.83       1.4            72.1  100.17      10             62.30      -0.2            79.8  116.91      11             54.83       1.4            72.1  100.17      12               NaN       NaN             NaN     NaN      13               NaN       NaN             NaN     NaN      14               NaN       NaN             NaN     NaN      15               NaN       NaN             NaN     NaN      16               NaN       NaN             NaN     NaN      17               NaN       NaN             NaN     NaN      18             62.30      -0.2            79.8  116.91      19             54.83       1.4            72.1  100.17      20             62.30      -0.2            79.8  116.91      21             54.83       1.4            72.1  100.17      22             62.30      -0.2            79.8  116.91      23             54.83       1.4            72.1  100.17          [24 rows x 39 columns], 'session_analysis':     prompt_step         prompts    name  output_step  \    0             1  Tell me a joke  OpenAI            2       1             1  Tell me a poem  OpenAI            2       2             1  Tell me a joke  OpenAI            2       3             1  Tell me a poem  OpenAI            2       4             1  Tell me a joke  OpenAI            2       5             1  Tell me a poem  OpenAI            2       6             3  Tell me a joke  OpenAI            4       7             3  Tell me a poem  OpenAI            4       8             3  Tell me a joke  OpenAI            4       9             3  Tell me a poem  OpenAI            4       10            3  Tell me a joke  OpenAI            4       11            3  Tell me a poem  OpenAI            4                                                          output  \    0   \n\nQ: What did the fish say when it hit the w...       1   \n\nRoses are red,\nViolets are blue,\nSugar i...       2   \n\nQ: What did the fish say when it hit the w...       3   \n\nRoses are red,\nViolets are blue,\nSugar i...       4   \n\nQ: What did the fish say when it hit the w...       5   \n\nRoses are red,\nViolets are blue,\nSugar i...       6   \n\nQ: What did the fish say when it hit the w...       7   \n\nRoses are red,\nViolets are blue,\nSugar i...       8   \n\nQ: What did the fish say when it hit the w...       9   \n\nRoses are red,\nViolets are blue,\nSugar i...       10  \n\nQ: What did the fish say when it hit the w...       11  \n\nRoses are red,\nViolets are blue,\nSugar i...               token_usage_total_tokens  token_usage_prompt_tokens  \    0                        162                         24       1                        162                         24       2                        162                         24       3                        162                         24       4                        162                         24       5                        162                         24       6                        162                         24       7                        162                         24       8                        162                         24       9                        162                         24       10                       162                         24       11                       162                         24               token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             138               109.04                   1.3       1                             138                83.66                   4.8       2                             138               109.04                   1.3       3                             138                83.66                   4.8       4                             138               109.04                   1.3       5                             138                83.66                   4.8       6                             138               109.04                   1.3       7                             138                83.66                   4.8       8                             138               109.04                   1.3       9                             138                83.66                   4.8       10                            138               109.04                   1.3       11                            138                83.66                   4.8               ...  difficult_words  linsear_write_formula  gunning_fog  \    0   ...                0                    5.5         5.20       1   ...                2                    6.5         8.28       2   ...                0                    5.5         5.20       3   ...                2                    6.5         8.28       4   ...                0                    5.5         5.20       5   ...                2                    6.5         8.28       6   ...                0                    5.5         5.20       7   ...                2                    6.5         8.28       8   ...                0                    5.5         5.20       9   ...                2                    6.5         8.28       10  ...                0                    5.5         5.20       11  ...                2                    6.5         8.28                   text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0   5th and 6th grade            133.58           131.54             62.30       1   6th and 7th grade            115.58           112.37             54.83       2   5th and 6th grade            133.58           131.54             62.30       3   6th and 7th grade            115.58           112.37             54.83       4   5th and 6th grade            133.58           131.54             62.30       5   6th and 7th grade            115.58           112.37             54.83       6   5th and 6th grade            133.58           131.54             62.30       7   6th and 7th grade            115.58           112.37             54.83       8   5th and 6th grade            133.58           131.54             62.30       9   6th and 7th grade            115.58           112.37             54.83       10  5th and 6th grade            133.58           131.54             62.30       11  6th and 7th grade            115.58           112.37             54.83              crawford  gulpease_index   osman      0      -0.2            79.8  116.91      1       1.4            72.1  100.17      2      -0.2            79.8  116.91      3       1.4            72.1  100.17      4      -0.2            79.8  116.91      5       1.4            72.1  100.17      6      -0.2            79.8  116.91      7       1.4            72.1  100.17      8      -0.2            79.8  116.91      9       1.4            72.1  100.17      10     -0.2            79.8  116.91      11      1.4            72.1  100.17          [12 rows x 24 columns]}    2023-03-29 14:00:25,948 - clearml.Task - INFO - Completed model upload to https://files.clear.ml/langchain_callback_demo/llm.988bd727b0e94a29a3ac0ee526813545/models/simple_sequentialAt this point you can already go to https://app.clear.ml and take a look at the resulting ClearML Task that was created.Among others, you should see that this notebook is saved along with any git information. The model JSON that contains the used parameters is saved as an artifact, there are also console logs and under the plots section, you'll find tables that represent the flow of the chain.Finally, if you enabled visualizations, these are stored as HTML files under debug samples.Scenario 2: Creating an agent with tools‚ÄãTo show a more advanced workflow, let's create an agent with access to tools. The way ClearML tracks the results is not different though, only the table will look slightly different as there are other types of actions taken when compared to the earlier, simpler example.You can now also see the use of the finish=True keyword, which will fully close the ClearML Task, instead of just resetting the parameters and prompts for a new conversation.from langchain.agents import initialize_agent, load_toolsfrom langchain.agents import AgentType# SCENARIO 2 - Agent with Toolstools = load_tools(["serpapi", "llm-math"], llm=llm, callbacks=callbacks)agent = initialize_agent(    tools,    llm,    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,    callbacks=callbacks,)agent.run("Who is the wife of the person who sang summer of 69?")clearml_callback.flush_tracker(    langchain_asset=agent, name="Agent with Tools", finish=True)API Reference:initialize_agentload_toolsAgentType            > Entering new AgentExecutor chain...    {'action': 'on_chain_start', 'name': 'AgentExecutor', 'step': 1, 'starts': 1, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 0, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'input': 'Who is the wife of the person who sang summer of 69?'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 2, 'starts': 2, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 189, 'token_usage_completion_tokens': 34, 'token_usage_total_tokens': 223, 'model_name': 'text-davinci-003', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 91.61, 'flesch_kincaid_grade': 3.8, 'smog_index': 0.0, 'coleman_liau_index': 3.41, 'automated_readability_index': 3.5, 'dale_chall_readability_score': 6.06, 'difficult_words': 2, 'linsear_write_formula': 5.75, 'gunning_fog': 5.4, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 121.07, 'szigriszt_pazos': 119.5, 'gutierrez_polini': 54.91, 'crawford': 0.9, 'gulpease_index': 72.7, 'osman': 92.16}     I need to find out who sang summer of 69 and then find out who their wife is.    Action: Search    Action Input: "Who sang summer of 69"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who sang summer of 69', 'log': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'step': 4, 'starts': 3, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 1, 'tool_ends': 0, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who sang summer of 69', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 5, 'starts': 4, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 0, 'agent_ends': 0}        Observation: Bryan Adams - Summer Of 69 (Official Music Video).    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams - Summer Of 69 (Official Music Video).', 'step': 6, 'starts': 4, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 7, 'starts': 5, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 242, 'token_usage_completion_tokens': 28, 'token_usage_total_tokens': 270, 'model_name': 'text-davinci-003', 'step': 8, 'starts': 5, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'text': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 94.66, 'flesch_kincaid_grade': 2.7, 'smog_index': 0.0, 'coleman_liau_index': 4.73, 'automated_readability_index': 4.0, 'dale_chall_readability_score': 7.16, 'difficult_words': 2, 'linsear_write_formula': 4.25, 'gunning_fog': 4.2, 'text_standard': '4th and 5th grade', 'fernandez_huerta': 124.13, 'szigriszt_pazos': 119.2, 'gutierrez_polini': 52.26, 'crawford': 0.7, 'gulpease_index': 74.7, 'osman': 84.2}     I need to find out who Bryan Adams is married to.    Action: Search    Action Input: "Who is Bryan Adams married to"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who is Bryan Adams married to', 'log': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'step': 9, 'starts': 6, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 3, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who is Bryan Adams married to', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 10, 'starts': 7, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 1, 'agent_ends': 0}        Observation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...', 'step': 11, 'starts': 7, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 12, 'starts': 8, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought: I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"\nObservation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 314, 'token_usage_completion_tokens': 18, 'token_usage_total_tokens': 332, 'model_name': 'text-davinci-003', 'step': 13, 'starts': 8, 'ends': 5, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'text': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 81.29, 'flesch_kincaid_grade': 3.7, 'smog_index': 0.0, 'coleman_liau_index': 5.75, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 7.37, 'difficult_words': 1, 'linsear_write_formula': 2.5, 'gunning_fog': 2.8, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 115.7, 'szigriszt_pazos': 110.84, 'gutierrez_polini': 49.79, 'crawford': 0.7, 'gulpease_index': 85.4, 'osman': 83.14}     I now know the final answer.    Final Answer: Bryan Adams has never been married.    {'action': 'on_agent_finish', 'output': 'Bryan Adams has never been married.', 'log': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'step': 14, 'starts': 8, 'ends': 6, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}        > Finished chain.    {'action': 'on_chain_end', 'outputs': 'Bryan Adams has never been married.', 'step': 15, 'starts': 8, 'ends': 7, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 1, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}    {'action_records':              action    name  step  starts  ends  errors  text_ctr  \    0      on_llm_start  OpenAI     1       1     0       0         0       1      on_llm_start  OpenAI     1       1     0       0         0       2      on_llm_start  OpenAI     1       1     0       0         0       3      on_llm_start  OpenAI     1       1     0       0         0       4      on_llm_start  OpenAI     1       1     0       0         0       ..              ...     ...   ...     ...   ...     ...       ...       66      on_tool_end     NaN    11       7     4       0         0       67     on_llm_start  OpenAI    12       8     4       0         0       68       on_llm_end     NaN    13       8     5       0         0       69  on_agent_finish     NaN    14       8     6       0         0       70     on_chain_end     NaN    15       8     7       0         0               chain_starts  chain_ends  llm_starts  ...  gulpease_index  osman  input  \    0              0           0           1  ...             NaN    NaN    NaN       1              0           0           1  ...             NaN    NaN    NaN       2              0           0           1  ...             NaN    NaN    NaN       3              0           0           1  ...             NaN    NaN    NaN       4              0           0           1  ...             NaN    NaN    NaN       ..           ...         ...         ...  ...             ...    ...    ...       66             1           0           2  ...             NaN    NaN    NaN       67             1           0           3  ...             NaN    NaN    NaN       68             1           0           3  ...            85.4  83.14    NaN       69             1           0           3  ...             NaN    NaN    NaN       70             1           1           3  ...             NaN    NaN    NaN               tool  tool_input                                                log  \    0    NaN         NaN                                                NaN       1    NaN         NaN                                                NaN       2    NaN         NaN                                                NaN       3    NaN         NaN                                                NaN       4    NaN         NaN                                                NaN       ..   ...         ...                                                ...       66   NaN         NaN                                                NaN       67   NaN         NaN                                                NaN       68   NaN         NaN                                                NaN       69   NaN         NaN   I now know the final answer.\nFinal Answer: B...       70   NaN         NaN                                                NaN               input_str  description                                             output  \    0         NaN          NaN                                                NaN       1         NaN          NaN                                                NaN       2         NaN          NaN                                                NaN       3         NaN          NaN                                                NaN       4         NaN          NaN                                                NaN       ..        ...          ...                                                ...       66        NaN          NaN  Bryan Adams has never married. In the 1990s, h...       67        NaN          NaN                                                NaN       68        NaN          NaN                                                NaN       69        NaN          NaN                Bryan Adams has never been married.       70        NaN          NaN                                                NaN                                           outputs      0                                   NaN      1                                   NaN      2                                   NaN      3                                   NaN      4                                   NaN      ..                                  ...      66                                  NaN      67                                  NaN      68                                  NaN      69                                  NaN      70  Bryan Adams has never been married.          [71 rows x 47 columns], 'session_analysis':    prompt_step                                            prompts    name  \    0            2  Answer the following questions as best you can...  OpenAI       1            7  Answer the following questions as best you can...  OpenAI       2           12  Answer the following questions as best you can...  OpenAI              output_step                                             output  \    0            3   I need to find out who sang summer of 69 and ...       1            8   I need to find out who Bryan Adams is married...       2           13   I now know the final answer.\nFinal Answer: B...              token_usage_total_tokens  token_usage_prompt_tokens  \    0                       223                        189       1                       270                        242       2                       332                        314              token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             34                91.61                   3.8       1                             28                94.66                   2.7       2                             18                81.29                   3.7              ...  difficult_words  linsear_write_formula  gunning_fog  \    0  ...                2                   5.75          5.4       1  ...                2                   4.25          4.2       2  ...                1                   2.50          2.8                  text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0  3rd and 4th grade            121.07           119.50             54.91       1  4th and 5th grade            124.13           119.20             52.26       2  3rd and 4th grade            115.70           110.84             49.79             crawford  gulpease_index  osman      0      0.9            72.7  92.16      1      0.7            74.7  84.20      2      0.7            85.4  83.14          [3 rows x 24 columns]}    Could not update last created model in Task 988bd727b0e94a29a3ac0ee526813545, Task status 'completed' cannot be updatedTips and Next Steps‚ÄãMake sure you always use a unique name argument for the clearml_callback.flush_tracker function. If not, the model parameters used for a run will override the previous run!If you close the ClearML Callback using clearml_callback.flush_tracker(..., finish=True) the Callback cannot be used anymore. Make a new one if you want to keep logging.Check out the rest of the open source ClearML ecosystem, there is a data version manager, a remote execution agent, automated pipelines and much more!PreviousClarifaiNextClickHouse On this page ClearMLClearML is a ML/DL development and production suite, it contains 5 main modules:Experiment Manager - Automagical experiment tracking, environments and resultsMLOps - Orchestration, Automation & Pipelines solution for ML/DL jobs (K8s / Cloud / bare-metal)Data-Management - Fully differentiable data management & version control solution on top of object-storage (S3 / GS / Azure / NAS)Model-Serving - cloud-ready Scalable model serving solution! with out-of-the-box Model MonitoringFire Reports - Create and share rich MarkDown documents supporting embeddable online contentIn order to properly keep track of your langchain experiments and their results, you can enable the ClearML integration. We use the ClearML Experiment Manager that neatly tracks and organizes all your experiment runs.Installation and Setup‚Äãpip install clearmlpip install pandaspip install textstatpip install spacypython -m spacy download en_core_web_smGetting API Credentials‚ÄãWe'll be using quite some APIs in this notebook, here is a list and where to get them:ClearML: https://app.clear.ml/settings/workspace-configurationOpenAI: https://platform.openai.com/account/api-keysSerpAPI (google search): https://serpapi.com/dashboardimport osos.environ["CLEARML_API_ACCESS_KEY"] = ""os.environ["CLEARML_API_SECRET_KEY"] = ""os.environ["OPENAI_API_KEY"] = ""os.environ["SERPAPI_API_KEY"] = ""Callbacks‚Äãfrom langchain.callbacks import ClearMLCallbackHandlerAPI Reference:ClearMLCallbackHandlerfrom datetime import datetimefrom langchain.callbacks import StdOutCallbackHandlerfrom langchain.llms import OpenAI# Setup and use the ClearML Callbackclearml_callback = ClearMLCallbackHandler(    task_type="inference",    project_name="langchain_callback_demo",    task_name="llm",    tags=["test"],    # Change the following parameters based on the amount of detail you want tracked    visualize=True,    complexity_metrics=True,    stream_logs=True,)callbacks = [StdOutCallbackHandler(), clearml_callback]# Get the OpenAI model ready to gollm = OpenAI(temperature=0, callbacks=callbacks)API Reference:StdOutCallbackHandlerOpenAI    The clearml callback is currently in beta and is subject to change based on updates to `langchain`. Please report any issues to https://github.com/allegroai/clearml/issues with the tag `langchain`.Scenario 1: Just an LLM‚ÄãFirst, let's just run a single LLM a few times and capture the resulting prompt-answer conversation in ClearML# SCENARIO 1 - LLMllm_result = llm.generate(["Tell me a joke", "Tell me a poem"] * 3)# After every generation run, use flush to make sure all the metrics# prompts and other output are properly saved separatelyclearml_callback.flush_tracker(langchain_asset=llm, name="simple_sequential")    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action_records':           action    name  step  starts  ends  errors  text_ctr  chain_starts  \    0   on_llm_start  OpenAI     1       1     0       0         0             0       1   on_llm_start  OpenAI     1       1     0       0         0             0       2   on_llm_start  OpenAI     1       1     0       0         0             0       3   on_llm_start  OpenAI     1       1     0       0         0             0       4   on_llm_start  OpenAI     1       1     0       0         0             0       5   on_llm_start  OpenAI     1       1     0       0         0             0       6     on_llm_end     NaN     2       1     1       0         0             0       7     on_llm_end     NaN     2       1     1       0         0             0       8     on_llm_end     NaN     2       1     1       0         0             0       9     on_llm_end     NaN     2       1     1       0         0             0       10    on_llm_end     NaN     2       1     1       0         0             0       11    on_llm_end     NaN     2       1     1       0         0             0       12  on_llm_start  OpenAI     3       2     1       0         0             0       13  on_llm_start  OpenAI     3       2     1       0         0             0       14  on_llm_start  OpenAI     3       2     1       0         0             0       15  on_llm_start  OpenAI     3       2     1       0         0             0       16  on_llm_start  OpenAI     3       2     1       0         0             0       17  on_llm_start  OpenAI     3       2     1       0         0             0       18    on_llm_end     NaN     4       2     2       0         0             0       19    on_llm_end     NaN     4       2     2       0         0             0       20    on_llm_end     NaN     4       2     2       0         0             0       21    on_llm_end     NaN     4       2     2       0         0             0       22    on_llm_end     NaN     4       2     2       0         0             0       23    on_llm_end     NaN     4       2     2       0         0             0               chain_ends  llm_starts  ...  difficult_words  linsear_write_formula  \    0            0           1  ...              NaN                    NaN       1            0           1  ...              NaN                    NaN       2            0           1  ...              NaN                    NaN       3            0           1  ...              NaN                    NaN       4            0           1  ...              NaN                    NaN       5            0           1  ...              NaN                    NaN       6            0           1  ...              0.0                    5.5       7            0           1  ...              2.0                    6.5       8            0           1  ...              0.0                    5.5       9            0           1  ...              2.0                    6.5       10           0           1  ...              0.0                    5.5       11           0           1  ...              2.0                    6.5       12           0           2  ...              NaN                    NaN       13           0           2  ...              NaN                    NaN       14           0           2  ...              NaN                    NaN       15           0           2  ...              NaN                    NaN       16           0           2  ...              NaN                    NaN       17           0           2  ...              NaN                    NaN       18           0           2  ...              0.0                    5.5       19           0           2  ...              2.0                    6.5       20           0           2  ...              0.0                    5.5       21           0           2  ...              2.0                    6.5       22           0           2  ...              0.0                    5.5       23           0           2  ...              2.0                    6.5               gunning_fog      text_standard  fernandez_huerta szigriszt_pazos  \    0           NaN                NaN               NaN             NaN       1           NaN                NaN               NaN             NaN       2           NaN                NaN               NaN             NaN       3           NaN                NaN               NaN             NaN       4           NaN                NaN               NaN             NaN       5           NaN                NaN               NaN             NaN       6          5.20  5th and 6th grade            133.58          131.54       7          8.28  6th and 7th grade            115.58          112.37       8          5.20  5th and 6th grade            133.58          131.54       9          8.28  6th and 7th grade            115.58          112.37       10         5.20  5th and 6th grade            133.58          131.54       11         8.28  6th and 7th grade            115.58          112.37       12          NaN                NaN               NaN             NaN       13          NaN                NaN               NaN             NaN       14          NaN                NaN               NaN             NaN       15          NaN                NaN               NaN             NaN       16          NaN                NaN               NaN             NaN       17          NaN                NaN               NaN             NaN       18         5.20  5th and 6th grade            133.58          131.54       19         8.28  6th and 7th grade            115.58          112.37       20         5.20  5th and 6th grade            133.58          131.54       21         8.28  6th and 7th grade            115.58          112.37       22         5.20  5th and 6th grade            133.58          131.54       23         8.28  6th and 7th grade            115.58          112.37               gutierrez_polini  crawford  gulpease_index   osman      0                NaN       NaN             NaN     NaN      1                NaN       NaN             NaN     NaN      2                NaN       NaN             NaN     NaN      3                NaN       NaN             NaN     NaN      4                NaN       NaN             NaN     NaN      5                NaN       NaN             NaN     NaN      6              62.30      -0.2            79.8  116.91      7              54.83       1.4            72.1  100.17      8              62.30      -0.2            79.8  116.91      9              54.83       1.4            72.1  100.17      10             62.30      -0.2            79.8  116.91      11             54.83       1.4            72.1  100.17      12               NaN       NaN             NaN     NaN      13               NaN       NaN             NaN     NaN      14               NaN       NaN             NaN     NaN      15               NaN       NaN             NaN     NaN      16               NaN       NaN             NaN     NaN      17               NaN       NaN             NaN     NaN      18             62.30      -0.2            79.8  116.91      19             54.83       1.4            72.1  100.17      20             62.30      -0.2            79.8  116.91      21             54.83       1.4            72.1  100.17      22             62.30      -0.2            79.8  116.91      23             54.83       1.4            72.1  100.17          [24 rows x 39 columns], 'session_analysis':     prompt_step         prompts    name  output_step  \    0             1  Tell me a joke  OpenAI            2       1             1  Tell me a poem  OpenAI            2       2             1  Tell me a joke  OpenAI            2       3             1  Tell me a poem  OpenAI            2       4             1  Tell me a joke  OpenAI            2       5             1  Tell me a poem  OpenAI            2       6             3  Tell me a joke  OpenAI            4       7             3  Tell me a poem  OpenAI            4       8             3  Tell me a joke  OpenAI            4       9             3  Tell me a poem  OpenAI            4       10            3  Tell me a joke  OpenAI            4       11            3  Tell me a poem  OpenAI            4                                                          output  \    0   \n\nQ: What did the fish say when it hit the w...       1   \n\nRoses are red,\nViolets are blue,\nSugar i...       2   \n\nQ: What did the fish say when it hit the w...       3   \n\nRoses are red,\nViolets are blue,\nSugar i...       4   \n\nQ: What did the fish say when it hit the w...       5   \n\nRoses are red,\nViolets are blue,\nSugar i...       6   \n\nQ: What did the fish say when it hit the w...       7   \n\nRoses are red,\nViolets are blue,\nSugar i...       8   \n\nQ: What did the fish say when it hit the w...       9   \n\nRoses are red,\nViolets are blue,\nSugar i...       10  \n\nQ: What did the fish say when it hit the w...       11  \n\nRoses are red,\nViolets are blue,\nSugar i...               token_usage_total_tokens  token_usage_prompt_tokens  \    0                        162                         24       1                        162                         24       2                        162                         24       3                        162                         24       4                        162                         24       5                        162                         24       6                        162                         24       7                        162                         24       8                        162                         24       9                        162                         24       10                       162                         24       11                       162                         24               token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             138               109.04                   1.3       1                             138                83.66                   4.8       2                             138               109.04                   1.3       3                             138                83.66                   4.8       4                             138               109.04                   1.3       5                             138                83.66                   4.8       6                             138               109.04                   1.3       7                             138                83.66                   4.8       8                             138               109.04                   1.3       9                             138                83.66                   4.8       10                            138               109.04                   1.3       11                            138                83.66                   4.8               ...  difficult_words  linsear_write_formula  gunning_fog  \    0   ...                0                    5.5         5.20       1   ...                2                    6.5         8.28       2   ...                0                    5.5         5.20       3   ...                2                    6.5         8.28       4   ...                0                    5.5         5.20       5   ...                2                    6.5         8.28       6   ...                0                    5.5         5.20       7   ...                2                    6.5         8.28       8   ...                0                    5.5         5.20       9   ...                2                    6.5         8.28       10  ...                0                    5.5         5.20       11  ...                2                    6.5         8.28                   text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0   5th and 6th grade            133.58           131.54             62.30       1   6th and 7th grade            115.58           112.37             54.83       2   5th and 6th grade            133.58           131.54             62.30       3   6th and 7th grade            115.58           112.37             54.83       4   5th and 6th grade            133.58           131.54             62.30       5   6th and 7th grade            115.58           112.37             54.83       6   5th and 6th grade            133.58           131.54             62.30       7   6th and 7th grade            115.58           112.37             54.83       8   5th and 6th grade            133.58           131.54             62.30       9   6th and 7th grade            115.58           112.37             54.83       10  5th and 6th grade            133.58           131.54             62.30       11  6th and 7th grade            115.58           112.37             54.83              crawford  gulpease_index   osman      0      -0.2            79.8  116.91      1       1.4            72.1  100.17      2      -0.2            79.8  116.91      3       1.4            72.1  100.17      4      -0.2            79.8  116.91      5       1.4            72.1  100.17      6      -0.2            79.8  116.91      7       1.4            72.1  100.17      8      -0.2            79.8  116.91      9       1.4            72.1  100.17      10     -0.2            79.8  116.91      11      1.4            72.1  100.17          [12 rows x 24 columns]}    2023-03-29 14:00:25,948 - clearml.Task - INFO - Completed model upload to https://files.clear.ml/langchain_callback_demo/llm.988bd727b0e94a29a3ac0ee526813545/models/simple_sequentialAt this point you can already go to https://app.clear.ml and take a look at the resulting ClearML Task that was created.Among others, you should see that this notebook is saved along with any git information. The model JSON that contains the used parameters is saved as an artifact, there are also console logs and under the plots section, you'll find tables that represent the flow of the chain.Finally, if you enabled visualizations, these are stored as HTML files under debug samples.Scenario 2: Creating an agent with tools‚ÄãTo show a more advanced workflow, let's create an agent with access to tools. The way ClearML tracks the results is not different though, only the table will look slightly different as there are other types of actions taken when compared to the earlier, simpler example.You can now also see the use of the finish=True keyword, which will fully close the ClearML Task, instead of just resetting the parameters and prompts for a new conversation.from langchain.agents import initialize_agent, load_toolsfrom langchain.agents import AgentType# SCENARIO 2 - Agent with Toolstools = load_tools(["serpapi", "llm-math"], llm=llm, callbacks=callbacks)agent = initialize_agent(    tools,    llm,    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,    callbacks=callbacks,)agent.run("Who is the wife of the person who sang summer of 69?")clearml_callback.flush_tracker(    langchain_asset=agent, name="Agent with Tools", finish=True)API Reference:initialize_agentload_toolsAgentType            > Entering new AgentExecutor chain...    {'action': 'on_chain_start', 'name': 'AgentExecutor', 'step': 1, 'starts': 1, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 0, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'input': 'Who is the wife of the person who sang summer of 69?'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 2, 'starts': 2, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 189, 'token_usage_completion_tokens': 34, 'token_usage_total_tokens': 223, 'model_name': 'text-davinci-003', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 91.61, 'flesch_kincaid_grade': 3.8, 'smog_index': 0.0, 'coleman_liau_index': 3.41, 'automated_readability_index': 3.5, 'dale_chall_readability_score': 6.06, 'difficult_words': 2, 'linsear_write_formula': 5.75, 'gunning_fog': 5.4, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 121.07, 'szigriszt_pazos': 119.5, 'gutierrez_polini': 54.91, 'crawford': 0.9, 'gulpease_index': 72.7, 'osman': 92.16}     I need to find out who sang summer of 69 and then find out who their wife is.    Action: Search    Action Input: "Who sang summer of 69"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who sang summer of 69', 'log': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'step': 4, 'starts': 3, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 1, 'tool_ends': 0, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who sang summer of 69', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 5, 'starts': 4, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 0, 'agent_ends': 0}        Observation: Bryan Adams - Summer Of 69 (Official Music Video).    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams - Summer Of 69 (Official Music Video).', 'step': 6, 'starts': 4, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 7, 'starts': 5, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 242, 'token_usage_completion_tokens': 28, 'token_usage_total_tokens': 270, 'model_name': 'text-davinci-003', 'step': 8, 'starts': 5, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'text': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 94.66, 'flesch_kincaid_grade': 2.7, 'smog_index': 0.0, 'coleman_liau_index': 4.73, 'automated_readability_index': 4.0, 'dale_chall_readability_score': 7.16, 'difficult_words': 2, 'linsear_write_formula': 4.25, 'gunning_fog': 4.2, 'text_standard': '4th and 5th grade', 'fernandez_huerta': 124.13, 'szigriszt_pazos': 119.2, 'gutierrez_polini': 52.26, 'crawford': 0.7, 'gulpease_index': 74.7, 'osman': 84.2}     I need to find out who Bryan Adams is married to.    Action: Search    Action Input: "Who is Bryan Adams married to"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who is Bryan Adams married to', 'log': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'step': 9, 'starts': 6, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 3, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who is Bryan Adams married to', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 10, 'starts': 7, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 1, 'agent_ends': 0}        Observation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...', 'step': 11, 'starts': 7, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 12, 'starts': 8, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought: I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"\nObservation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 314, 'token_usage_completion_tokens': 18, 'token_usage_total_tokens': 332, 'model_name': 'text-davinci-003', 'step': 13, 'starts': 8, 'ends': 5, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'text': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 81.29, 'flesch_kincaid_grade': 3.7, 'smog_index': 0.0, 'coleman_liau_index': 5.75, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 7.37, 'difficult_words': 1, 'linsear_write_formula': 2.5, 'gunning_fog': 2.8, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 115.7, 'szigriszt_pazos': 110.84, 'gutierrez_polini': 49.79, 'crawford': 0.7, 'gulpease_index': 85.4, 'osman': 83.14}     I now know the final answer.    Final Answer: Bryan Adams has never been married.    {'action': 'on_agent_finish', 'output': 'Bryan Adams has never been married.', 'log': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'step': 14, 'starts': 8, 'ends': 6, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}        > Finished chain.    {'action': 'on_chain_end', 'outputs': 'Bryan Adams has never been married.', 'step': 15, 'starts': 8, 'ends': 7, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 1, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}    {'action_records':              action    name  step  starts  ends  errors  text_ctr  \    0      on_llm_start  OpenAI     1       1     0       0         0       1      on_llm_start  OpenAI     1       1     0       0         0       2      on_llm_start  OpenAI     1       1     0       0         0       3      on_llm_start  OpenAI     1       1     0       0         0       4      on_llm_start  OpenAI     1       1     0       0         0       ..              ...     ...   ...     ...   ...     ...       ...       66      on_tool_end     NaN    11       7     4       0         0       67     on_llm_start  OpenAI    12       8     4       0         0       68       on_llm_end     NaN    13       8     5       0         0       69  on_agent_finish     NaN    14       8     6       0         0       70     on_chain_end     NaN    15       8     7       0         0               chain_starts  chain_ends  llm_starts  ...  gulpease_index  osman  input  \    0              0           0           1  ...             NaN    NaN    NaN       1              0           0           1  ...             NaN    NaN    NaN       2              0           0           1  ...             NaN    NaN    NaN       3              0           0           1  ...             NaN    NaN    NaN       4              0           0           1  ...             NaN    NaN    NaN       ..           ...         ...         ...  ...             ...    ...    ...       66             1           0           2  ...             NaN    NaN    NaN       67             1           0           3  ...             NaN    NaN    NaN       68             1           0           3  ...            85.4  83.14    NaN       69             1           0           3  ...             NaN    NaN    NaN       70             1           1           3  ...             NaN    NaN    NaN               tool  tool_input                                                log  \    0    NaN         NaN                                                NaN       1    NaN         NaN                                                NaN       2    NaN         NaN                                                NaN       3    NaN         NaN                                                NaN       4    NaN         NaN                                                NaN       ..   ...         ...                                                ...       66   NaN         NaN                                                NaN       67   NaN         NaN                                                NaN       68   NaN         NaN                                                NaN       69   NaN         NaN   I now know the final answer.\nFinal Answer: B...       70   NaN         NaN                                                NaN               input_str  description                                             output  \    0         NaN          NaN                                                NaN       1         NaN          NaN                                                NaN       2         NaN          NaN                                                NaN       3         NaN          NaN                                                NaN       4         NaN          NaN                                                NaN       ..        ...          ...                                                ...       66        NaN          NaN  Bryan Adams has never married. In the 1990s, h...       67        NaN          NaN                                                NaN       68        NaN          NaN                                                NaN       69        NaN          NaN                Bryan Adams has never been married.       70        NaN          NaN                                                NaN                                           outputs      0                                   NaN      1                                   NaN      2                                   NaN      3                                   NaN      4                                   NaN      ..                                  ...      66                                  NaN      67                                  NaN      68                                  NaN      69                                  NaN      70  Bryan Adams has never been married.          [71 rows x 47 columns], 'session_analysis':    prompt_step                                            prompts    name  \    0            2  Answer the following questions as best you can...  OpenAI       1            7  Answer the following questions as best you can...  OpenAI       2           12  Answer the following questions as best you can...  OpenAI              output_step                                             output  \    0            3   I need to find out who sang summer of 69 and ...       1            8   I need to find out who Bryan Adams is married...       2           13   I now know the final answer.\nFinal Answer: B...              token_usage_total_tokens  token_usage_prompt_tokens  \    0                       223                        189       1                       270                        242       2                       332                        314              token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             34                91.61                   3.8       1                             28                94.66                   2.7       2                             18                81.29                   3.7              ...  difficult_words  linsear_write_formula  gunning_fog  \    0  ...                2                   5.75          5.4       1  ...                2                   4.25          4.2       2  ...                1                   2.50          2.8                  text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0  3rd and 4th grade            121.07           119.50             54.91       1  4th and 5th grade            124.13           119.20             52.26       2  3rd and 4th grade            115.70           110.84             49.79             crawford  gulpease_index  osman      0      0.9            72.7  92.16      1      0.7            74.7  84.20      2      0.7            85.4  83.14          [3 rows x 24 columns]}    Could not update last created model in Task 988bd727b0e94a29a3ac0ee526813545, Task status 'completed' cannot be updatedTips and Next Steps‚ÄãMake sure you always use a unique name argument for the clearml_callback.flush_tracker function. If not, the model parameters used for a run will override the previous run!If you close the ClearML Callback using clearml_callback.flush_tracker(..., finish=True) the Callback cannot be used anymore. Make a new one if you want to keep logging.Check out the rest of the open source ClearML ecosystem, there is a data version manager, a remote execution agent, automated pipelines and much more! pip install clearmlpip install pandaspip install textstatpip install spacypython -m spacy download en_core_web_sm pip install clearmlpip install pandaspip install textstatpip install spacypython -m spacy download en_core_web_sm  import osos.environ["CLEARML_API_ACCESS_KEY"] = ""os.environ["CLEARML_API_SECRET_KEY"] = ""os.environ["OPENAI_API_KEY"] = ""os.environ["SERPAPI_API_KEY"] = "" import osos.environ["CLEARML_API_ACCESS_KEY"] = ""os.environ["CLEARML_API_SECRET_KEY"] = ""os.environ["OPENAI_API_KEY"] = ""os.environ["SERPAPI_API_KEY"] = ""  from langchain.callbacks import ClearMLCallbackHandler from langchain.callbacks import ClearMLCallbackHandler  API Reference:ClearMLCallbackHandler from datetime import datetimefrom langchain.callbacks import StdOutCallbackHandlerfrom langchain.llms import OpenAI# Setup and use the ClearML Callbackclearml_callback = ClearMLCallbackHandler(    task_type="inference",    project_name="langchain_callback_demo",    task_name="llm",    tags=["test"],    # Change the following parameters based on the amount of detail you want tracked    visualize=True,    complexity_metrics=True,    stream_logs=True,)callbacks = [StdOutCallbackHandler(), clearml_callback]# Get the OpenAI model ready to gollm = OpenAI(temperature=0, callbacks=callbacks) from datetime import datetimefrom langchain.callbacks import StdOutCallbackHandlerfrom langchain.llms import OpenAI# Setup and use the ClearML Callbackclearml_callback = ClearMLCallbackHandler(    task_type="inference",    project_name="langchain_callback_demo",    task_name="llm",    tags=["test"],    # Change the following parameters based on the amount of detail you want tracked    visualize=True,    complexity_metrics=True,    stream_logs=True,)callbacks = [StdOutCallbackHandler(), clearml_callback]# Get the OpenAI model ready to gollm = OpenAI(temperature=0, callbacks=callbacks)  API Reference:StdOutCallbackHandlerOpenAI     The clearml callback is currently in beta and is subject to change based on updates to `langchain`. Please report any issues to https://github.com/allegroai/clearml/issues with the tag `langchain`.     The clearml callback is currently in beta and is subject to change based on updates to `langchain`. Please report any issues to https://github.com/allegroai/clearml/issues with the tag `langchain`.     The clearml callback is currently in beta and is subject to change based on updates to `langchain`. Please report any issues to https://github.com/allegroai/clearml/issues with the tag `langchain`.  # SCENARIO 1 - LLMllm_result = llm.generate(["Tell me a joke", "Tell me a poem"] * 3)# After every generation run, use flush to make sure all the metrics# prompts and other output are properly saved separatelyclearml_callback.flush_tracker(langchain_asset=llm, name="simple_sequential") # SCENARIO 1 - LLMllm_result = llm.generate(["Tell me a joke", "Tell me a poem"] * 3)# After every generation run, use flush to make sure all the metrics# prompts and other output are properly saved separatelyclearml_callback.flush_tracker(langchain_asset=llm, name="simple_sequential")      {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action_records':           action    name  step  starts  ends  errors  text_ctr  chain_starts  \    0   on_llm_start  OpenAI     1       1     0       0         0             0       1   on_llm_start  OpenAI     1       1     0       0         0             0       2   on_llm_start  OpenAI     1       1     0       0         0             0       3   on_llm_start  OpenAI     1       1     0       0         0             0       4   on_llm_start  OpenAI     1       1     0       0         0             0       5   on_llm_start  OpenAI     1       1     0       0         0             0       6     on_llm_end     NaN     2       1     1       0         0             0       7     on_llm_end     NaN     2       1     1       0         0             0       8     on_llm_end     NaN     2       1     1       0         0             0       9     on_llm_end     NaN     2       1     1       0         0             0       10    on_llm_end     NaN     2       1     1       0         0             0       11    on_llm_end     NaN     2       1     1       0         0             0       12  on_llm_start  OpenAI     3       2     1       0         0             0       13  on_llm_start  OpenAI     3       2     1       0         0             0       14  on_llm_start  OpenAI     3       2     1       0         0             0       15  on_llm_start  OpenAI     3       2     1       0         0             0       16  on_llm_start  OpenAI     3       2     1       0         0             0       17  on_llm_start  OpenAI     3       2     1       0         0             0       18    on_llm_end     NaN     4       2     2       0         0             0       19    on_llm_end     NaN     4       2     2       0         0             0       20    on_llm_end     NaN     4       2     2       0         0             0       21    on_llm_end     NaN     4       2     2       0         0             0       22    on_llm_end     NaN     4       2     2       0         0             0       23    on_llm_end     NaN     4       2     2       0         0             0               chain_ends  llm_starts  ...  difficult_words  linsear_write_formula  \    0            0           1  ...              NaN                    NaN       1            0           1  ...              NaN                    NaN       2            0           1  ...              NaN                    NaN       3            0           1  ...              NaN                    NaN       4            0           1  ...              NaN                    NaN       5            0           1  ...              NaN                    NaN       6            0           1  ...              0.0                    5.5       7            0           1  ...              2.0                    6.5       8            0           1  ...              0.0                    5.5       9            0           1  ...              2.0                    6.5       10           0           1  ...              0.0                    5.5       11           0           1  ...              2.0                    6.5       12           0           2  ...              NaN                    NaN       13           0           2  ...              NaN                    NaN       14           0           2  ...              NaN                    NaN       15           0           2  ...              NaN                    NaN       16           0           2  ...              NaN                    NaN       17           0           2  ...              NaN                    NaN       18           0           2  ...              0.0                    5.5       19           0           2  ...              2.0                    6.5       20           0           2  ...              0.0                    5.5       21           0           2  ...              2.0                    6.5       22           0           2  ...              0.0                    5.5       23           0           2  ...              2.0                    6.5               gunning_fog      text_standard  fernandez_huerta szigriszt_pazos  \    0           NaN                NaN               NaN             NaN       1           NaN                NaN               NaN             NaN       2           NaN                NaN               NaN             NaN       3           NaN                NaN               NaN             NaN       4           NaN                NaN               NaN             NaN       5           NaN                NaN               NaN             NaN       6          5.20  5th and 6th grade            133.58          131.54       7          8.28  6th and 7th grade            115.58          112.37       8          5.20  5th and 6th grade            133.58          131.54       9          8.28  6th and 7th grade            115.58          112.37       10         5.20  5th and 6th grade            133.58          131.54       11         8.28  6th and 7th grade            115.58          112.37       12          NaN                NaN               NaN             NaN       13          NaN                NaN               NaN             NaN       14          NaN                NaN               NaN             NaN       15          NaN                NaN               NaN             NaN       16          NaN                NaN               NaN             NaN       17          NaN                NaN               NaN             NaN       18         5.20  5th and 6th grade            133.58          131.54       19         8.28  6th and 7th grade            115.58          112.37       20         5.20  5th and 6th grade            133.58          131.54       21         8.28  6th and 7th grade            115.58          112.37       22         5.20  5th and 6th grade            133.58          131.54       23         8.28  6th and 7th grade            115.58          112.37               gutierrez_polini  crawford  gulpease_index   osman      0                NaN       NaN             NaN     NaN      1                NaN       NaN             NaN     NaN      2                NaN       NaN             NaN     NaN      3                NaN       NaN             NaN     NaN      4                NaN       NaN             NaN     NaN      5                NaN       NaN             NaN     NaN      6              62.30      -0.2            79.8  116.91      7              54.83       1.4            72.1  100.17      8              62.30      -0.2            79.8  116.91      9              54.83       1.4            72.1  100.17      10             62.30      -0.2            79.8  116.91      11             54.83       1.4            72.1  100.17      12               NaN       NaN             NaN     NaN      13               NaN       NaN             NaN     NaN      14               NaN       NaN             NaN     NaN      15               NaN       NaN             NaN     NaN      16               NaN       NaN             NaN     NaN      17               NaN       NaN             NaN     NaN      18             62.30      -0.2            79.8  116.91      19             54.83       1.4            72.1  100.17      20             62.30      -0.2            79.8  116.91      21             54.83       1.4            72.1  100.17      22             62.30      -0.2            79.8  116.91      23             54.83       1.4            72.1  100.17          [24 rows x 39 columns], 'session_analysis':     prompt_step         prompts    name  output_step  \    0             1  Tell me a joke  OpenAI            2       1             1  Tell me a poem  OpenAI            2       2             1  Tell me a joke  OpenAI            2       3             1  Tell me a poem  OpenAI            2       4             1  Tell me a joke  OpenAI            2       5             1  Tell me a poem  OpenAI            2       6             3  Tell me a joke  OpenAI            4       7             3  Tell me a poem  OpenAI            4       8             3  Tell me a joke  OpenAI            4       9             3  Tell me a poem  OpenAI            4       10            3  Tell me a joke  OpenAI            4       11            3  Tell me a poem  OpenAI            4                                                          output  \    0   \n\nQ: What did the fish say when it hit the w...       1   \n\nRoses are red,\nViolets are blue,\nSugar i...       2   \n\nQ: What did the fish say when it hit the w...       3   \n\nRoses are red,\nViolets are blue,\nSugar i...       4   \n\nQ: What did the fish say when it hit the w...       5   \n\nRoses are red,\nViolets are blue,\nSugar i...       6   \n\nQ: What did the fish say when it hit the w...       7   \n\nRoses are red,\nViolets are blue,\nSugar i...       8   \n\nQ: What did the fish say when it hit the w...       9   \n\nRoses are red,\nViolets are blue,\nSugar i...       10  \n\nQ: What did the fish say when it hit the w...       11  \n\nRoses are red,\nViolets are blue,\nSugar i...               token_usage_total_tokens  token_usage_prompt_tokens  \    0                        162                         24       1                        162                         24       2                        162                         24       3                        162                         24       4                        162                         24       5                        162                         24       6                        162                         24       7                        162                         24       8                        162                         24       9                        162                         24       10                       162                         24       11                       162                         24               token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             138               109.04                   1.3       1                             138                83.66                   4.8       2                             138               109.04                   1.3       3                             138                83.66                   4.8       4                             138               109.04                   1.3       5                             138                83.66                   4.8       6                             138               109.04                   1.3       7                             138                83.66                   4.8       8                             138               109.04                   1.3       9                             138                83.66                   4.8       10                            138               109.04                   1.3       11                            138                83.66                   4.8               ...  difficult_words  linsear_write_formula  gunning_fog  \    0   ...                0                    5.5         5.20       1   ...                2                    6.5         8.28       2   ...                0                    5.5         5.20       3   ...                2                    6.5         8.28       4   ...                0                    5.5         5.20       5   ...                2                    6.5         8.28       6   ...                0                    5.5         5.20       7   ...                2                    6.5         8.28       8   ...                0                    5.5         5.20       9   ...                2                    6.5         8.28       10  ...                0                    5.5         5.20       11  ...                2                    6.5         8.28                   text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0   5th and 6th grade            133.58           131.54             62.30       1   6th and 7th grade            115.58           112.37             54.83       2   5th and 6th grade            133.58           131.54             62.30       3   6th and 7th grade            115.58           112.37             54.83       4   5th and 6th grade            133.58           131.54             62.30       5   6th and 7th grade            115.58           112.37             54.83       6   5th and 6th grade            133.58           131.54             62.30       7   6th and 7th grade            115.58           112.37             54.83       8   5th and 6th grade            133.58           131.54             62.30       9   6th and 7th grade            115.58           112.37             54.83       10  5th and 6th grade            133.58           131.54             62.30       11  6th and 7th grade            115.58           112.37             54.83              crawford  gulpease_index   osman      0      -0.2            79.8  116.91      1       1.4            72.1  100.17      2      -0.2            79.8  116.91      3       1.4            72.1  100.17      4      -0.2            79.8  116.91      5       1.4            72.1  100.17      6      -0.2            79.8  116.91      7       1.4            72.1  100.17      8      -0.2            79.8  116.91      9       1.4            72.1  100.17      10     -0.2            79.8  116.91      11      1.4            72.1  100.17          [12 rows x 24 columns]}    2023-03-29 14:00:25,948 - clearml.Task - INFO - Completed model upload to https://files.clear.ml/langchain_callback_demo/llm.988bd727b0e94a29a3ac0ee526813545/models/simple_sequential     {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action_records':           action    name  step  starts  ends  errors  text_ctr  chain_starts  \    0   on_llm_start  OpenAI     1       1     0       0         0             0       1   on_llm_start  OpenAI     1       1     0       0         0             0       2   on_llm_start  OpenAI     1       1     0       0         0             0       3   on_llm_start  OpenAI     1       1     0       0         0             0       4   on_llm_start  OpenAI     1       1     0       0         0             0       5   on_llm_start  OpenAI     1       1     0       0         0             0       6     on_llm_end     NaN     2       1     1       0         0             0       7     on_llm_end     NaN     2       1     1       0         0             0       8     on_llm_end     NaN     2       1     1       0         0             0       9     on_llm_end     NaN     2       1     1       0         0             0       10    on_llm_end     NaN     2       1     1       0         0             0       11    on_llm_end     NaN     2       1     1       0         0             0       12  on_llm_start  OpenAI     3       2     1       0         0             0       13  on_llm_start  OpenAI     3       2     1       0         0             0       14  on_llm_start  OpenAI     3       2     1       0         0             0       15  on_llm_start  OpenAI     3       2     1       0         0             0       16  on_llm_start  OpenAI     3       2     1       0         0             0       17  on_llm_start  OpenAI     3       2     1       0         0             0       18    on_llm_end     NaN     4       2     2       0         0             0       19    on_llm_end     NaN     4       2     2       0         0             0       20    on_llm_end     NaN     4       2     2       0         0             0       21    on_llm_end     NaN     4       2     2       0         0             0       22    on_llm_end     NaN     4       2     2       0         0             0       23    on_llm_end     NaN     4       2     2       0         0             0               chain_ends  llm_starts  ...  difficult_words  linsear_write_formula  \    0            0           1  ...              NaN                    NaN       1            0           1  ...              NaN                    NaN       2            0           1  ...              NaN                    NaN       3            0           1  ...              NaN                    NaN       4            0           1  ...              NaN                    NaN       5            0           1  ...              NaN                    NaN       6            0           1  ...              0.0                    5.5       7            0           1  ...              2.0                    6.5       8            0           1  ...              0.0                    5.5       9            0           1  ...              2.0                    6.5       10           0           1  ...              0.0                    5.5       11           0           1  ...              2.0                    6.5       12           0           2  ...              NaN                    NaN       13           0           2  ...              NaN                    NaN       14           0           2  ...              NaN                    NaN       15           0           2  ...              NaN                    NaN       16           0           2  ...              NaN                    NaN       17           0           2  ...              NaN                    NaN       18           0           2  ...              0.0                    5.5       19           0           2  ...              2.0                    6.5       20           0           2  ...              0.0                    5.5       21           0           2  ...              2.0                    6.5       22           0           2  ...              0.0                    5.5       23           0           2  ...              2.0                    6.5               gunning_fog      text_standard  fernandez_huerta szigriszt_pazos  \    0           NaN                NaN               NaN             NaN       1           NaN                NaN               NaN             NaN       2           NaN                NaN               NaN             NaN       3           NaN                NaN               NaN             NaN       4           NaN                NaN               NaN             NaN       5           NaN                NaN               NaN             NaN       6          5.20  5th and 6th grade            133.58          131.54       7          8.28  6th and 7th grade            115.58          112.37       8          5.20  5th and 6th grade            133.58          131.54       9          8.28  6th and 7th grade            115.58          112.37       10         5.20  5th and 6th grade            133.58          131.54       11         8.28  6th and 7th grade            115.58          112.37       12          NaN                NaN               NaN             NaN       13          NaN                NaN               NaN             NaN       14          NaN                NaN               NaN             NaN       15          NaN                NaN               NaN             NaN       16          NaN                NaN               NaN             NaN       17          NaN                NaN               NaN             NaN       18         5.20  5th and 6th grade            133.58          131.54       19         8.28  6th and 7th grade            115.58          112.37       20         5.20  5th and 6th grade            133.58          131.54       21         8.28  6th and 7th grade            115.58          112.37       22         5.20  5th and 6th grade            133.58          131.54       23         8.28  6th and 7th grade            115.58          112.37               gutierrez_polini  crawford  gulpease_index   osman      0                NaN       NaN             NaN     NaN      1                NaN       NaN             NaN     NaN      2                NaN       NaN             NaN     NaN      3                NaN       NaN             NaN     NaN      4                NaN       NaN             NaN     NaN      5                NaN       NaN             NaN     NaN      6              62.30      -0.2            79.8  116.91      7              54.83       1.4            72.1  100.17      8              62.30      -0.2            79.8  116.91      9              54.83       1.4            72.1  100.17      10             62.30      -0.2            79.8  116.91      11             54.83       1.4            72.1  100.17      12               NaN       NaN             NaN     NaN      13               NaN       NaN             NaN     NaN      14               NaN       NaN             NaN     NaN      15               NaN       NaN             NaN     NaN      16               NaN       NaN             NaN     NaN      17               NaN       NaN             NaN     NaN      18             62.30      -0.2            79.8  116.91      19             54.83       1.4            72.1  100.17      20             62.30      -0.2            79.8  116.91      21             54.83       1.4            72.1  100.17      22             62.30      -0.2            79.8  116.91      23             54.83       1.4            72.1  100.17          [24 rows x 39 columns], 'session_analysis':     prompt_step         prompts    name  output_step  \    0             1  Tell me a joke  OpenAI            2       1             1  Tell me a poem  OpenAI            2       2             1  Tell me a joke  OpenAI            2       3             1  Tell me a poem  OpenAI            2       4             1  Tell me a joke  OpenAI            2       5             1  Tell me a poem  OpenAI            2       6             3  Tell me a joke  OpenAI            4       7             3  Tell me a poem  OpenAI            4       8             3  Tell me a joke  OpenAI            4       9             3  Tell me a poem  OpenAI            4       10            3  Tell me a joke  OpenAI            4       11            3  Tell me a poem  OpenAI            4                                                          output  \    0   \n\nQ: What did the fish say when it hit the w...       1   \n\nRoses are red,\nViolets are blue,\nSugar i...       2   \n\nQ: What did the fish say when it hit the w...       3   \n\nRoses are red,\nViolets are blue,\nSugar i...       4   \n\nQ: What did the fish say when it hit the w...       5   \n\nRoses are red,\nViolets are blue,\nSugar i...       6   \n\nQ: What did the fish say when it hit the w...       7   \n\nRoses are red,\nViolets are blue,\nSugar i...       8   \n\nQ: What did the fish say when it hit the w...       9   \n\nRoses are red,\nViolets are blue,\nSugar i...       10  \n\nQ: What did the fish say when it hit the w...       11  \n\nRoses are red,\nViolets are blue,\nSugar i...               token_usage_total_tokens  token_usage_prompt_tokens  \    0                        162                         24       1                        162                         24       2                        162                         24       3                        162                         24       4                        162                         24       5                        162                         24       6                        162                         24       7                        162                         24       8                        162                         24       9                        162                         24       10                       162                         24       11                       162                         24               token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             138               109.04                   1.3       1                             138                83.66                   4.8       2                             138               109.04                   1.3       3                             138                83.66                   4.8       4                             138               109.04                   1.3       5                             138                83.66                   4.8       6                             138               109.04                   1.3       7                             138                83.66                   4.8       8                             138               109.04                   1.3       9                             138                83.66                   4.8       10                            138               109.04                   1.3       11                            138                83.66                   4.8               ...  difficult_words  linsear_write_formula  gunning_fog  \    0   ...                0                    5.5         5.20       1   ...                2                    6.5         8.28       2   ...                0                    5.5         5.20       3   ...                2                    6.5         8.28       4   ...                0                    5.5         5.20       5   ...                2                    6.5         8.28       6   ...                0                    5.5         5.20       7   ...                2                    6.5         8.28       8   ...                0                    5.5         5.20       9   ...                2                    6.5         8.28       10  ...                0                    5.5         5.20       11  ...                2                    6.5         8.28                   text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0   5th and 6th grade            133.58           131.54             62.30       1   6th and 7th grade            115.58           112.37             54.83       2   5th and 6th grade            133.58           131.54             62.30       3   6th and 7th grade            115.58           112.37             54.83       4   5th and 6th grade            133.58           131.54             62.30       5   6th and 7th grade            115.58           112.37             54.83       6   5th and 6th grade            133.58           131.54             62.30       7   6th and 7th grade            115.58           112.37             54.83       8   5th and 6th grade            133.58           131.54             62.30       9   6th and 7th grade            115.58           112.37             54.83       10  5th and 6th grade            133.58           131.54             62.30       11  6th and 7th grade            115.58           112.37             54.83              crawford  gulpease_index   osman      0      -0.2            79.8  116.91      1       1.4            72.1  100.17      2      -0.2            79.8  116.91      3       1.4            72.1  100.17      4      -0.2            79.8  116.91      5       1.4            72.1  100.17      6      -0.2            79.8  116.91      7       1.4            72.1  100.17      8      -0.2            79.8  116.91      9       1.4            72.1  100.17      10     -0.2            79.8  116.91      11      1.4            72.1  100.17          [12 rows x 24 columns]}    2023-03-29 14:00:25,948 - clearml.Task - INFO - Completed model upload to https://files.clear.ml/langchain_callback_demo/llm.988bd727b0e94a29a3ac0ee526813545/models/simple_sequential     {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a joke'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Tell me a poem'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nQ: What did the fish say when it hit the wall?\nA: Dam!', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 109.04, 'flesch_kincaid_grade': 1.3, 'smog_index': 0.0, 'coleman_liau_index': -1.24, 'automated_readability_index': 0.3, 'dale_chall_readability_score': 5.5, 'difficult_words': 0, 'linsear_write_formula': 5.5, 'gunning_fog': 5.2, 'text_standard': '5th and 6th grade', 'fernandez_huerta': 133.58, 'szigriszt_pazos': 131.54, 'gutierrez_polini': 62.3, 'crawford': -0.2, 'gulpease_index': 79.8, 'osman': 116.91}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 24, 'token_usage_completion_tokens': 138, 'token_usage_total_tokens': 162, 'model_name': 'text-davinci-003', 'step': 4, 'starts': 2, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 0, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': '\n\nRoses are red,\nViolets are blue,\nSugar is sweet,\nAnd so are you.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 83.66, 'flesch_kincaid_grade': 4.8, 'smog_index': 0.0, 'coleman_liau_index': 3.23, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 6.71, 'difficult_words': 2, 'linsear_write_formula': 6.5, 'gunning_fog': 8.28, 'text_standard': '6th and 7th grade', 'fernandez_huerta': 115.58, 'szigriszt_pazos': 112.37, 'gutierrez_polini': 54.83, 'crawford': 1.4, 'gulpease_index': 72.1, 'osman': 100.17}    {'action_records':           action    name  step  starts  ends  errors  text_ctr  chain_starts  \    0   on_llm_start  OpenAI     1       1     0       0         0             0       1   on_llm_start  OpenAI     1       1     0       0         0             0       2   on_llm_start  OpenAI     1       1     0       0         0             0       3   on_llm_start  OpenAI     1       1     0       0         0             0       4   on_llm_start  OpenAI     1       1     0       0         0             0       5   on_llm_start  OpenAI     1       1     0       0         0             0       6     on_llm_end     NaN     2       1     1       0         0             0       7     on_llm_end     NaN     2       1     1       0         0             0       8     on_llm_end     NaN     2       1     1       0         0             0       9     on_llm_end     NaN     2       1     1       0         0             0       10    on_llm_end     NaN     2       1     1       0         0             0       11    on_llm_end     NaN     2       1     1       0         0             0       12  on_llm_start  OpenAI     3       2     1       0         0             0       13  on_llm_start  OpenAI     3       2     1       0         0             0       14  on_llm_start  OpenAI     3       2     1       0         0             0       15  on_llm_start  OpenAI     3       2     1       0         0             0       16  on_llm_start  OpenAI     3       2     1       0         0             0       17  on_llm_start  OpenAI     3       2     1       0         0             0       18    on_llm_end     NaN     4       2     2       0         0             0       19    on_llm_end     NaN     4       2     2       0         0             0       20    on_llm_end     NaN     4       2     2       0         0             0       21    on_llm_end     NaN     4       2     2       0         0             0       22    on_llm_end     NaN     4       2     2       0         0             0       23    on_llm_end     NaN     4       2     2       0         0             0               chain_ends  llm_starts  ...  difficult_words  linsear_write_formula  \    0            0           1  ...              NaN                    NaN       1            0           1  ...              NaN                    NaN       2            0           1  ...              NaN                    NaN       3            0           1  ...              NaN                    NaN       4            0           1  ...              NaN                    NaN       5            0           1  ...              NaN                    NaN       6            0           1  ...              0.0                    5.5       7            0           1  ...              2.0                    6.5       8            0           1  ...              0.0                    5.5       9            0           1  ...              2.0                    6.5       10           0           1  ...              0.0                    5.5       11           0           1  ...              2.0                    6.5       12           0           2  ...              NaN                    NaN       13           0           2  ...              NaN                    NaN       14           0           2  ...              NaN                    NaN       15           0           2  ...              NaN                    NaN       16           0           2  ...              NaN                    NaN       17           0           2  ...              NaN                    NaN       18           0           2  ...              0.0                    5.5       19           0           2  ...              2.0                    6.5       20           0           2  ...              0.0                    5.5       21           0           2  ...              2.0                    6.5       22           0           2  ...              0.0                    5.5       23           0           2  ...              2.0                    6.5               gunning_fog      text_standard  fernandez_huerta szigriszt_pazos  \    0           NaN                NaN               NaN             NaN       1           NaN                NaN               NaN             NaN       2           NaN                NaN               NaN             NaN       3           NaN                NaN               NaN             NaN       4           NaN                NaN               NaN             NaN       5           NaN                NaN               NaN             NaN       6          5.20  5th and 6th grade            133.58          131.54       7          8.28  6th and 7th grade            115.58          112.37       8          5.20  5th and 6th grade            133.58          131.54       9          8.28  6th and 7th grade            115.58          112.37       10         5.20  5th and 6th grade            133.58          131.54       11         8.28  6th and 7th grade            115.58          112.37       12          NaN                NaN               NaN             NaN       13          NaN                NaN               NaN             NaN       14          NaN                NaN               NaN             NaN       15          NaN                NaN               NaN             NaN       16          NaN                NaN               NaN             NaN       17          NaN                NaN               NaN             NaN       18         5.20  5th and 6th grade            133.58          131.54       19         8.28  6th and 7th grade            115.58          112.37       20         5.20  5th and 6th grade            133.58          131.54       21         8.28  6th and 7th grade            115.58          112.37       22         5.20  5th and 6th grade            133.58          131.54       23         8.28  6th and 7th grade            115.58          112.37               gutierrez_polini  crawford  gulpease_index   osman      0                NaN       NaN             NaN     NaN      1                NaN       NaN             NaN     NaN      2                NaN       NaN             NaN     NaN      3                NaN       NaN             NaN     NaN      4                NaN       NaN             NaN     NaN      5                NaN       NaN             NaN     NaN      6              62.30      -0.2            79.8  116.91      7              54.83       1.4            72.1  100.17      8              62.30      -0.2            79.8  116.91      9              54.83       1.4            72.1  100.17      10             62.30      -0.2            79.8  116.91      11             54.83       1.4            72.1  100.17      12               NaN       NaN             NaN     NaN      13               NaN       NaN             NaN     NaN      14               NaN       NaN             NaN     NaN      15               NaN       NaN             NaN     NaN      16               NaN       NaN             NaN     NaN      17               NaN       NaN             NaN     NaN      18             62.30      -0.2            79.8  116.91      19             54.83       1.4            72.1  100.17      20             62.30      -0.2            79.8  116.91      21             54.83       1.4            72.1  100.17      22             62.30      -0.2            79.8  116.91      23             54.83       1.4            72.1  100.17          [24 rows x 39 columns], 'session_analysis':     prompt_step         prompts    name  output_step  \    0             1  Tell me a joke  OpenAI            2       1             1  Tell me a poem  OpenAI            2       2             1  Tell me a joke  OpenAI            2       3             1  Tell me a poem  OpenAI            2       4             1  Tell me a joke  OpenAI            2       5             1  Tell me a poem  OpenAI            2       6             3  Tell me a joke  OpenAI            4       7             3  Tell me a poem  OpenAI            4       8             3  Tell me a joke  OpenAI            4       9             3  Tell me a poem  OpenAI            4       10            3  Tell me a joke  OpenAI            4       11            3  Tell me a poem  OpenAI            4                                                          output  \    0   \n\nQ: What did the fish say when it hit the w...       1   \n\nRoses are red,\nViolets are blue,\nSugar i...       2   \n\nQ: What did the fish say when it hit the w...       3   \n\nRoses are red,\nViolets are blue,\nSugar i...       4   \n\nQ: What did the fish say when it hit the w...       5   \n\nRoses are red,\nViolets are blue,\nSugar i...       6   \n\nQ: What did the fish say when it hit the w...       7   \n\nRoses are red,\nViolets are blue,\nSugar i...       8   \n\nQ: What did the fish say when it hit the w...       9   \n\nRoses are red,\nViolets are blue,\nSugar i...       10  \n\nQ: What did the fish say when it hit the w...       11  \n\nRoses are red,\nViolets are blue,\nSugar i...               token_usage_total_tokens  token_usage_prompt_tokens  \    0                        162                         24       1                        162                         24       2                        162                         24       3                        162                         24       4                        162                         24       5                        162                         24       6                        162                         24       7                        162                         24       8                        162                         24       9                        162                         24       10                       162                         24       11                       162                         24               token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             138               109.04                   1.3       1                             138                83.66                   4.8       2                             138               109.04                   1.3       3                             138                83.66                   4.8       4                             138               109.04                   1.3       5                             138                83.66                   4.8       6                             138               109.04                   1.3       7                             138                83.66                   4.8       8                             138               109.04                   1.3       9                             138                83.66                   4.8       10                            138               109.04                   1.3       11                            138                83.66                   4.8               ...  difficult_words  linsear_write_formula  gunning_fog  \    0   ...                0                    5.5         5.20       1   ...                2                    6.5         8.28       2   ...                0                    5.5         5.20       3   ...                2                    6.5         8.28       4   ...                0                    5.5         5.20       5   ...                2                    6.5         8.28       6   ...                0                    5.5         5.20       7   ...                2                    6.5         8.28       8   ...                0                    5.5         5.20       9   ...                2                    6.5         8.28       10  ...                0                    5.5         5.20       11  ...                2                    6.5         8.28                   text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0   5th and 6th grade            133.58           131.54             62.30       1   6th and 7th grade            115.58           112.37             54.83       2   5th and 6th grade            133.58           131.54             62.30       3   6th and 7th grade            115.58           112.37             54.83       4   5th and 6th grade            133.58           131.54             62.30       5   6th and 7th grade            115.58           112.37             54.83       6   5th and 6th grade            133.58           131.54             62.30       7   6th and 7th grade            115.58           112.37             54.83       8   5th and 6th grade            133.58           131.54             62.30       9   6th and 7th grade            115.58           112.37             54.83       10  5th and 6th grade            133.58           131.54             62.30       11  6th and 7th grade            115.58           112.37             54.83              crawford  gulpease_index   osman      0      -0.2            79.8  116.91      1       1.4            72.1  100.17      2      -0.2            79.8  116.91      3       1.4            72.1  100.17      4      -0.2            79.8  116.91      5       1.4            72.1  100.17      6      -0.2            79.8  116.91      7       1.4            72.1  100.17      8      -0.2            79.8  116.91      9       1.4            72.1  100.17      10     -0.2            79.8  116.91      11      1.4            72.1  100.17          [12 rows x 24 columns]}    2023-03-29 14:00:25,948 - clearml.Task - INFO - Completed model upload to https://files.clear.ml/langchain_callback_demo/llm.988bd727b0e94a29a3ac0ee526813545/models/simple_sequential  from langchain.agents import initialize_agent, load_toolsfrom langchain.agents import AgentType# SCENARIO 2 - Agent with Toolstools = load_tools(["serpapi", "llm-math"], llm=llm, callbacks=callbacks)agent = initialize_agent(    tools,    llm,    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,    callbacks=callbacks,)agent.run("Who is the wife of the person who sang summer of 69?")clearml_callback.flush_tracker(    langchain_asset=agent, name="Agent with Tools", finish=True) from langchain.agents import initialize_agent, load_toolsfrom langchain.agents import AgentType# SCENARIO 2 - Agent with Toolstools = load_tools(["serpapi", "llm-math"], llm=llm, callbacks=callbacks)agent = initialize_agent(    tools,    llm,    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,    callbacks=callbacks,)agent.run("Who is the wife of the person who sang summer of 69?")clearml_callback.flush_tracker(    langchain_asset=agent, name="Agent with Tools", finish=True)  API Reference:initialize_agentload_toolsAgentType             > Entering new AgentExecutor chain...    {'action': 'on_chain_start', 'name': 'AgentExecutor', 'step': 1, 'starts': 1, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 0, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'input': 'Who is the wife of the person who sang summer of 69?'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 2, 'starts': 2, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 189, 'token_usage_completion_tokens': 34, 'token_usage_total_tokens': 223, 'model_name': 'text-davinci-003', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 91.61, 'flesch_kincaid_grade': 3.8, 'smog_index': 0.0, 'coleman_liau_index': 3.41, 'automated_readability_index': 3.5, 'dale_chall_readability_score': 6.06, 'difficult_words': 2, 'linsear_write_formula': 5.75, 'gunning_fog': 5.4, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 121.07, 'szigriszt_pazos': 119.5, 'gutierrez_polini': 54.91, 'crawford': 0.9, 'gulpease_index': 72.7, 'osman': 92.16}     I need to find out who sang summer of 69 and then find out who their wife is.    Action: Search    Action Input: "Who sang summer of 69"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who sang summer of 69', 'log': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'step': 4, 'starts': 3, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 1, 'tool_ends': 0, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who sang summer of 69', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 5, 'starts': 4, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 0, 'agent_ends': 0}        Observation: Bryan Adams - Summer Of 69 (Official Music Video).    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams - Summer Of 69 (Official Music Video).', 'step': 6, 'starts': 4, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 7, 'starts': 5, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 242, 'token_usage_completion_tokens': 28, 'token_usage_total_tokens': 270, 'model_name': 'text-davinci-003', 'step': 8, 'starts': 5, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'text': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 94.66, 'flesch_kincaid_grade': 2.7, 'smog_index': 0.0, 'coleman_liau_index': 4.73, 'automated_readability_index': 4.0, 'dale_chall_readability_score': 7.16, 'difficult_words': 2, 'linsear_write_formula': 4.25, 'gunning_fog': 4.2, 'text_standard': '4th and 5th grade', 'fernandez_huerta': 124.13, 'szigriszt_pazos': 119.2, 'gutierrez_polini': 52.26, 'crawford': 0.7, 'gulpease_index': 74.7, 'osman': 84.2}     I need to find out who Bryan Adams is married to.    Action: Search    Action Input: "Who is Bryan Adams married to"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who is Bryan Adams married to', 'log': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'step': 9, 'starts': 6, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 3, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who is Bryan Adams married to', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 10, 'starts': 7, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 1, 'agent_ends': 0}        Observation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...', 'step': 11, 'starts': 7, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 12, 'starts': 8, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought: I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"\nObservation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 314, 'token_usage_completion_tokens': 18, 'token_usage_total_tokens': 332, 'model_name': 'text-davinci-003', 'step': 13, 'starts': 8, 'ends': 5, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'text': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 81.29, 'flesch_kincaid_grade': 3.7, 'smog_index': 0.0, 'coleman_liau_index': 5.75, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 7.37, 'difficult_words': 1, 'linsear_write_formula': 2.5, 'gunning_fog': 2.8, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 115.7, 'szigriszt_pazos': 110.84, 'gutierrez_polini': 49.79, 'crawford': 0.7, 'gulpease_index': 85.4, 'osman': 83.14}     I now know the final answer.    Final Answer: Bryan Adams has never been married.    {'action': 'on_agent_finish', 'output': 'Bryan Adams has never been married.', 'log': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'step': 14, 'starts': 8, 'ends': 6, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}        > Finished chain.    {'action': 'on_chain_end', 'outputs': 'Bryan Adams has never been married.', 'step': 15, 'starts': 8, 'ends': 7, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 1, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}    {'action_records':              action    name  step  starts  ends  errors  text_ctr  \    0      on_llm_start  OpenAI     1       1     0       0         0       1      on_llm_start  OpenAI     1       1     0       0         0       2      on_llm_start  OpenAI     1       1     0       0         0       3      on_llm_start  OpenAI     1       1     0       0         0       4      on_llm_start  OpenAI     1       1     0       0         0       ..              ...     ...   ...     ...   ...     ...       ...       66      on_tool_end     NaN    11       7     4       0         0       67     on_llm_start  OpenAI    12       8     4       0         0       68       on_llm_end     NaN    13       8     5       0         0       69  on_agent_finish     NaN    14       8     6       0         0       70     on_chain_end     NaN    15       8     7       0         0               chain_starts  chain_ends  llm_starts  ...  gulpease_index  osman  input  \    0              0           0           1  ...             NaN    NaN    NaN       1              0           0           1  ...             NaN    NaN    NaN       2              0           0           1  ...             NaN    NaN    NaN       3              0           0           1  ...             NaN    NaN    NaN       4              0           0           1  ...             NaN    NaN    NaN       ..           ...         ...         ...  ...             ...    ...    ...       66             1           0           2  ...             NaN    NaN    NaN       67             1           0           3  ...             NaN    NaN    NaN       68             1           0           3  ...            85.4  83.14    NaN       69             1           0           3  ...             NaN    NaN    NaN       70             1           1           3  ...             NaN    NaN    NaN               tool  tool_input                                                log  \    0    NaN         NaN                                                NaN       1    NaN         NaN                                                NaN       2    NaN         NaN                                                NaN       3    NaN         NaN                                                NaN       4    NaN         NaN                                                NaN       ..   ...         ...                                                ...       66   NaN         NaN                                                NaN       67   NaN         NaN                                                NaN       68   NaN         NaN                                                NaN       69   NaN         NaN   I now know the final answer.\nFinal Answer: B...       70   NaN         NaN                                                NaN               input_str  description                                             output  \    0         NaN          NaN                                                NaN       1         NaN          NaN                                                NaN       2         NaN          NaN                                                NaN       3         NaN          NaN                                                NaN       4         NaN          NaN                                                NaN       ..        ...          ...                                                ...       66        NaN          NaN  Bryan Adams has never married. In the 1990s, h...       67        NaN          NaN                                                NaN       68        NaN          NaN                                                NaN       69        NaN          NaN                Bryan Adams has never been married.       70        NaN          NaN                                                NaN                                           outputs      0                                   NaN      1                                   NaN      2                                   NaN      3                                   NaN      4                                   NaN      ..                                  ...      66                                  NaN      67                                  NaN      68                                  NaN      69                                  NaN      70  Bryan Adams has never been married.          [71 rows x 47 columns], 'session_analysis':    prompt_step                                            prompts    name  \    0            2  Answer the following questions as best you can...  OpenAI       1            7  Answer the following questions as best you can...  OpenAI       2           12  Answer the following questions as best you can...  OpenAI              output_step                                             output  \    0            3   I need to find out who sang summer of 69 and ...       1            8   I need to find out who Bryan Adams is married...       2           13   I now know the final answer.\nFinal Answer: B...              token_usage_total_tokens  token_usage_prompt_tokens  \    0                       223                        189       1                       270                        242       2                       332                        314              token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             34                91.61                   3.8       1                             28                94.66                   2.7       2                             18                81.29                   3.7              ...  difficult_words  linsear_write_formula  gunning_fog  \    0  ...                2                   5.75          5.4       1  ...                2                   4.25          4.2       2  ...                1                   2.50          2.8                  text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0  3rd and 4th grade            121.07           119.50             54.91       1  4th and 5th grade            124.13           119.20             52.26       2  3rd and 4th grade            115.70           110.84             49.79             crawford  gulpease_index  osman      0      0.9            72.7  92.16      1      0.7            74.7  84.20      2      0.7            85.4  83.14          [3 rows x 24 columns]}    Could not update last created model in Task 988bd727b0e94a29a3ac0ee526813545, Task status 'completed' cannot be updated             > Entering new AgentExecutor chain...    {'action': 'on_chain_start', 'name': 'AgentExecutor', 'step': 1, 'starts': 1, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 0, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'input': 'Who is the wife of the person who sang summer of 69?'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 2, 'starts': 2, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 189, 'token_usage_completion_tokens': 34, 'token_usage_total_tokens': 223, 'model_name': 'text-davinci-003', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 91.61, 'flesch_kincaid_grade': 3.8, 'smog_index': 0.0, 'coleman_liau_index': 3.41, 'automated_readability_index': 3.5, 'dale_chall_readability_score': 6.06, 'difficult_words': 2, 'linsear_write_formula': 5.75, 'gunning_fog': 5.4, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 121.07, 'szigriszt_pazos': 119.5, 'gutierrez_polini': 54.91, 'crawford': 0.9, 'gulpease_index': 72.7, 'osman': 92.16}     I need to find out who sang summer of 69 and then find out who their wife is.    Action: Search    Action Input: "Who sang summer of 69"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who sang summer of 69', 'log': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'step': 4, 'starts': 3, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 1, 'tool_ends': 0, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who sang summer of 69', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 5, 'starts': 4, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 0, 'agent_ends': 0}        Observation: Bryan Adams - Summer Of 69 (Official Music Video).    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams - Summer Of 69 (Official Music Video).', 'step': 6, 'starts': 4, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 7, 'starts': 5, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 242, 'token_usage_completion_tokens': 28, 'token_usage_total_tokens': 270, 'model_name': 'text-davinci-003', 'step': 8, 'starts': 5, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'text': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 94.66, 'flesch_kincaid_grade': 2.7, 'smog_index': 0.0, 'coleman_liau_index': 4.73, 'automated_readability_index': 4.0, 'dale_chall_readability_score': 7.16, 'difficult_words': 2, 'linsear_write_formula': 4.25, 'gunning_fog': 4.2, 'text_standard': '4th and 5th grade', 'fernandez_huerta': 124.13, 'szigriszt_pazos': 119.2, 'gutierrez_polini': 52.26, 'crawford': 0.7, 'gulpease_index': 74.7, 'osman': 84.2}     I need to find out who Bryan Adams is married to.    Action: Search    Action Input: "Who is Bryan Adams married to"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who is Bryan Adams married to', 'log': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'step': 9, 'starts': 6, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 3, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who is Bryan Adams married to', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 10, 'starts': 7, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 1, 'agent_ends': 0}        Observation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...', 'step': 11, 'starts': 7, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 12, 'starts': 8, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought: I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"\nObservation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 314, 'token_usage_completion_tokens': 18, 'token_usage_total_tokens': 332, 'model_name': 'text-davinci-003', 'step': 13, 'starts': 8, 'ends': 5, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'text': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 81.29, 'flesch_kincaid_grade': 3.7, 'smog_index': 0.0, 'coleman_liau_index': 5.75, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 7.37, 'difficult_words': 1, 'linsear_write_formula': 2.5, 'gunning_fog': 2.8, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 115.7, 'szigriszt_pazos': 110.84, 'gutierrez_polini': 49.79, 'crawford': 0.7, 'gulpease_index': 85.4, 'osman': 83.14}     I now know the final answer.    Final Answer: Bryan Adams has never been married.    {'action': 'on_agent_finish', 'output': 'Bryan Adams has never been married.', 'log': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'step': 14, 'starts': 8, 'ends': 6, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}        > Finished chain.    {'action': 'on_chain_end', 'outputs': 'Bryan Adams has never been married.', 'step': 15, 'starts': 8, 'ends': 7, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 1, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}    {'action_records':              action    name  step  starts  ends  errors  text_ctr  \    0      on_llm_start  OpenAI     1       1     0       0         0       1      on_llm_start  OpenAI     1       1     0       0         0       2      on_llm_start  OpenAI     1       1     0       0         0       3      on_llm_start  OpenAI     1       1     0       0         0       4      on_llm_start  OpenAI     1       1     0       0         0       ..              ...     ...   ...     ...   ...     ...       ...       66      on_tool_end     NaN    11       7     4       0         0       67     on_llm_start  OpenAI    12       8     4       0         0       68       on_llm_end     NaN    13       8     5       0         0       69  on_agent_finish     NaN    14       8     6       0         0       70     on_chain_end     NaN    15       8     7       0         0               chain_starts  chain_ends  llm_starts  ...  gulpease_index  osman  input  \    0              0           0           1  ...             NaN    NaN    NaN       1              0           0           1  ...             NaN    NaN    NaN       2              0           0           1  ...             NaN    NaN    NaN       3              0           0           1  ...             NaN    NaN    NaN       4              0           0           1  ...             NaN    NaN    NaN       ..           ...         ...         ...  ...             ...    ...    ...       66             1           0           2  ...             NaN    NaN    NaN       67             1           0           3  ...             NaN    NaN    NaN       68             1           0           3  ...            85.4  83.14    NaN       69             1           0           3  ...             NaN    NaN    NaN       70             1           1           3  ...             NaN    NaN    NaN               tool  tool_input                                                log  \    0    NaN         NaN                                                NaN       1    NaN         NaN                                                NaN       2    NaN         NaN                                                NaN       3    NaN         NaN                                                NaN       4    NaN         NaN                                                NaN       ..   ...         ...                                                ...       66   NaN         NaN                                                NaN       67   NaN         NaN                                                NaN       68   NaN         NaN                                                NaN       69   NaN         NaN   I now know the final answer.\nFinal Answer: B...       70   NaN         NaN                                                NaN               input_str  description                                             output  \    0         NaN          NaN                                                NaN       1         NaN          NaN                                                NaN       2         NaN          NaN                                                NaN       3         NaN          NaN                                                NaN       4         NaN          NaN                                                NaN       ..        ...          ...                                                ...       66        NaN          NaN  Bryan Adams has never married. In the 1990s, h...       67        NaN          NaN                                                NaN       68        NaN          NaN                                                NaN       69        NaN          NaN                Bryan Adams has never been married.       70        NaN          NaN                                                NaN                                           outputs      0                                   NaN      1                                   NaN      2                                   NaN      3                                   NaN      4                                   NaN      ..                                  ...      66                                  NaN      67                                  NaN      68                                  NaN      69                                  NaN      70  Bryan Adams has never been married.          [71 rows x 47 columns], 'session_analysis':    prompt_step                                            prompts    name  \    0            2  Answer the following questions as best you can...  OpenAI       1            7  Answer the following questions as best you can...  OpenAI       2           12  Answer the following questions as best you can...  OpenAI              output_step                                             output  \    0            3   I need to find out who sang summer of 69 and ...       1            8   I need to find out who Bryan Adams is married...       2           13   I now know the final answer.\nFinal Answer: B...              token_usage_total_tokens  token_usage_prompt_tokens  \    0                       223                        189       1                       270                        242       2                       332                        314              token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             34                91.61                   3.8       1                             28                94.66                   2.7       2                             18                81.29                   3.7              ...  difficult_words  linsear_write_formula  gunning_fog  \    0  ...                2                   5.75          5.4       1  ...                2                   4.25          4.2       2  ...                1                   2.50          2.8                  text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0  3rd and 4th grade            121.07           119.50             54.91       1  4th and 5th grade            124.13           119.20             52.26       2  3rd and 4th grade            115.70           110.84             49.79             crawford  gulpease_index  osman      0      0.9            72.7  92.16      1      0.7            74.7  84.20      2      0.7            85.4  83.14          [3 rows x 24 columns]}    Could not update last created model in Task 988bd727b0e94a29a3ac0ee526813545, Task status 'completed' cannot be updated             > Entering new AgentExecutor chain...    {'action': 'on_chain_start', 'name': 'AgentExecutor', 'step': 1, 'starts': 1, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 0, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'input': 'Who is the wife of the person who sang summer of 69?'}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 2, 'starts': 2, 'ends': 0, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 0, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 189, 'token_usage_completion_tokens': 34, 'token_usage_total_tokens': 223, 'model_name': 'text-davinci-003', 'step': 3, 'starts': 2, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 0, 'tool_ends': 0, 'agent_ends': 0, 'text': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 91.61, 'flesch_kincaid_grade': 3.8, 'smog_index': 0.0, 'coleman_liau_index': 3.41, 'automated_readability_index': 3.5, 'dale_chall_readability_score': 6.06, 'difficult_words': 2, 'linsear_write_formula': 5.75, 'gunning_fog': 5.4, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 121.07, 'szigriszt_pazos': 119.5, 'gutierrez_polini': 54.91, 'crawford': 0.9, 'gulpease_index': 72.7, 'osman': 92.16}     I need to find out who sang summer of 69 and then find out who their wife is.    Action: Search    Action Input: "Who sang summer of 69"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who sang summer of 69', 'log': ' I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"', 'step': 4, 'starts': 3, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 1, 'tool_ends': 0, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who sang summer of 69', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 5, 'starts': 4, 'ends': 1, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 0, 'agent_ends': 0}        Observation: Bryan Adams - Summer Of 69 (Official Music Video).    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams - Summer Of 69 (Official Music Video).', 'step': 6, 'starts': 4, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 1, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 7, 'starts': 5, 'ends': 2, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 1, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 242, 'token_usage_completion_tokens': 28, 'token_usage_total_tokens': 270, 'model_name': 'text-davinci-003', 'step': 8, 'starts': 5, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 2, 'tool_ends': 1, 'agent_ends': 0, 'text': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 94.66, 'flesch_kincaid_grade': 2.7, 'smog_index': 0.0, 'coleman_liau_index': 4.73, 'automated_readability_index': 4.0, 'dale_chall_readability_score': 7.16, 'difficult_words': 2, 'linsear_write_formula': 4.25, 'gunning_fog': 4.2, 'text_standard': '4th and 5th grade', 'fernandez_huerta': 124.13, 'szigriszt_pazos': 119.2, 'gutierrez_polini': 52.26, 'crawford': 0.7, 'gulpease_index': 74.7, 'osman': 84.2}     I need to find out who Bryan Adams is married to.    Action: Search    Action Input: "Who is Bryan Adams married to"{'action': 'on_agent_action', 'tool': 'Search', 'tool_input': 'Who is Bryan Adams married to', 'log': ' I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"', 'step': 9, 'starts': 6, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 3, 'tool_ends': 1, 'agent_ends': 0}    {'action': 'on_tool_start', 'input_str': 'Who is Bryan Adams married to', 'name': 'Search', 'description': 'A search engine. Useful for when you need to answer questions about current events. Input should be a search query.', 'step': 10, 'starts': 7, 'ends': 3, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 1, 'agent_ends': 0}        Observation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...    Thought:{'action': 'on_tool_end', 'output': 'Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...', 'step': 11, 'starts': 7, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 2, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0}    {'action': 'on_llm_start', 'name': 'OpenAI', 'step': 12, 'starts': 8, 'ends': 4, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 2, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'prompts': 'Answer the following questions as best you can. You have access to the following tools:\n\nSearch: A search engine. Useful for when you need to answer questions about current events. Input should be a search query.\nCalculator: Useful for when you need to answer questions about math.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [Search, Calculator]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: Who is the wife of the person who sang summer of 69?\nThought: I need to find out who sang summer of 69 and then find out who their wife is.\nAction: Search\nAction Input: "Who sang summer of 69"\nObservation: Bryan Adams - Summer Of 69 (Official Music Video).\nThought: I need to find out who Bryan Adams is married to.\nAction: Search\nAction Input: "Who is Bryan Adams married to"\nObservation: Bryan Adams has never married. In the 1990s, he was in a relationship with Danish model Cecilie Thomsen. In 2011, Bryan and Alicia Grimaldi, his ...\nThought:'}    {'action': 'on_llm_end', 'token_usage_prompt_tokens': 314, 'token_usage_completion_tokens': 18, 'token_usage_total_tokens': 332, 'model_name': 'text-davinci-003', 'step': 13, 'starts': 8, 'ends': 5, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 0, 'text': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'generation_info_finish_reason': 'stop', 'generation_info_logprobs': None, 'flesch_reading_ease': 81.29, 'flesch_kincaid_grade': 3.7, 'smog_index': 0.0, 'coleman_liau_index': 5.75, 'automated_readability_index': 3.9, 'dale_chall_readability_score': 7.37, 'difficult_words': 1, 'linsear_write_formula': 2.5, 'gunning_fog': 2.8, 'text_standard': '3rd and 4th grade', 'fernandez_huerta': 115.7, 'szigriszt_pazos': 110.84, 'gutierrez_polini': 49.79, 'crawford': 0.7, 'gulpease_index': 85.4, 'osman': 83.14}     I now know the final answer.    Final Answer: Bryan Adams has never been married.    {'action': 'on_agent_finish', 'output': 'Bryan Adams has never been married.', 'log': ' I now know the final answer.\nFinal Answer: Bryan Adams has never been married.', 'step': 14, 'starts': 8, 'ends': 6, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 0, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}        > Finished chain.    {'action': 'on_chain_end', 'outputs': 'Bryan Adams has never been married.', 'step': 15, 'starts': 8, 'ends': 7, 'errors': 0, 'text_ctr': 0, 'chain_starts': 1, 'chain_ends': 1, 'llm_starts': 3, 'llm_ends': 3, 'llm_streams': 0, 'tool_starts': 4, 'tool_ends': 2, 'agent_ends': 1}    {'action_records':              action    name  step  starts  ends  errors  text_ctr  \    0      on_llm_start  OpenAI     1       1     0       0         0       1      on_llm_start  OpenAI     1       1     0       0         0       2      on_llm_start  OpenAI     1       1     0       0         0       3      on_llm_start  OpenAI     1       1     0       0         0       4      on_llm_start  OpenAI     1       1     0       0         0       ..              ...     ...   ...     ...   ...     ...       ...       66      on_tool_end     NaN    11       7     4       0         0       67     on_llm_start  OpenAI    12       8     4       0         0       68       on_llm_end     NaN    13       8     5       0         0       69  on_agent_finish     NaN    14       8     6       0         0       70     on_chain_end     NaN    15       8     7       0         0               chain_starts  chain_ends  llm_starts  ...  gulpease_index  osman  input  \    0              0           0           1  ...             NaN    NaN    NaN       1              0           0           1  ...             NaN    NaN    NaN       2              0           0           1  ...             NaN    NaN    NaN       3              0           0           1  ...             NaN    NaN    NaN       4              0           0           1  ...             NaN    NaN    NaN       ..           ...         ...         ...  ...             ...    ...    ...       66             1           0           2  ...             NaN    NaN    NaN       67             1           0           3  ...             NaN    NaN    NaN       68             1           0           3  ...            85.4  83.14    NaN       69             1           0           3  ...             NaN    NaN    NaN       70             1           1           3  ...             NaN    NaN    NaN               tool  tool_input                                                log  \    0    NaN         NaN                                                NaN       1    NaN         NaN                                                NaN       2    NaN         NaN                                                NaN       3    NaN         NaN                                                NaN       4    NaN         NaN                                                NaN       ..   ...         ...                                                ...       66   NaN         NaN                                                NaN       67   NaN         NaN                                                NaN       68   NaN         NaN                                                NaN       69   NaN         NaN   I now know the final answer.\nFinal Answer: B...       70   NaN         NaN                                                NaN               input_str  description                                             output  \    0         NaN          NaN                                                NaN       1         NaN          NaN                                                NaN       2         NaN          NaN                                                NaN       3         NaN          NaN                                                NaN       4         NaN          NaN                                                NaN       ..        ...          ...                                                ...       66        NaN          NaN  Bryan Adams has never married. In the 1990s, h...       67        NaN          NaN                                                NaN       68        NaN          NaN                                                NaN       69        NaN          NaN                Bryan Adams has never been married.       70        NaN          NaN                                                NaN                                           outputs      0                                   NaN      1                                   NaN      2                                   NaN      3                                   NaN      4                                   NaN      ..                                  ...      66                                  NaN      67                                  NaN      68                                  NaN      69                                  NaN      70  Bryan Adams has never been married.          [71 rows x 47 columns], 'session_analysis':    prompt_step                                            prompts    name  \    0            2  Answer the following questions as best you can...  OpenAI       1            7  Answer the following questions as best you can...  OpenAI       2           12  Answer the following questions as best you can...  OpenAI              output_step                                             output  \    0            3   I need to find out who sang summer of 69 and ...       1            8   I need to find out who Bryan Adams is married...       2           13   I now know the final answer.\nFinal Answer: B...              token_usage_total_tokens  token_usage_prompt_tokens  \    0                       223                        189       1                       270                        242       2                       332                        314              token_usage_completion_tokens  flesch_reading_ease  flesch_kincaid_grade  \    0                             34                91.61                   3.8       1                             28                94.66                   2.7       2                             18                81.29                   3.7              ...  difficult_words  linsear_write_formula  gunning_fog  \    0  ...                2                   5.75          5.4       1  ...                2                   4.25          4.2       2  ...                1                   2.50          2.8                  text_standard  fernandez_huerta  szigriszt_pazos  gutierrez_polini  \    0  3rd and 4th grade            121.07           119.50             54.91       1  4th and 5th grade            124.13           119.20             52.26       2  3rd and 4th grade            115.70           110.84             49.79             crawford  gulpease_index  osman      0      0.9            72.7  92.16      1      0.7            74.7  84.20      2      0.7            85.4  83.14          [3 rows x 24 columns]}    Could not update last created model in Task 988bd727b0e94a29a3ac0ee526813545, Task status 'completed' cannot be updated  Previous Clarifai Next ClickHouse Installation and SetupGetting API CredentialsCallbacksScenario 1: Just an LLMScenario 2: Creating an agent with toolsTips and Next Steps Installation and SetupGetting API CredentialsCallbacksScenario 1: Just an LLMScenario 2: Creating an agent with toolsTips and Next Steps CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright ¬© 2023 LangChain, Inc. CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlog CommunityDiscordTwitter Community GitHubPythonJS/TS GitHub MoreHomepageBlog More Copyright ¬© 2023 LangChain, Inc. Copyright ¬© 2023 LangChain, Inc. Skip to main content (#docusaurus_skipToContent_fallback) ü¶úÔ∏èüîó LangChain (/) Docs (/docs/get_started/introduction) Use cases (/docs/use_cases) Integrations (/docs/integrations) API (https://api.python.langchain.com) LangSmith (https://smith.langchain.com) JS/TS Docs (https://js.langchain.com/docs)  (https://github.com/hwchase17/langchain) Integrations (/docs/integrations) Callbacks (/docs/integrations/callbacks/) Chat models (/docs/integrations/chat/) Chat loaders (/docs/integrations/chat_loaders/) Document loaders (/docs/integrations/document_loaders/) Document transformers (/docs/integrations/document_transformers/) LLMs (/docs/integrations/llms/) Memory (/docs/integrations/memory/) Retrievers (/docs/integrations/retrievers/) Text embedding models (/docs/integrations/text_embedding/) Agents & Toolkits (/docs/integrations/toolkits/) Tools (/docs/integrations/tools/) Vector stores (/docs/integrations/vectorstores/) Grouped by provider (/docs/integrations/providers/) Activeloop Deep Lake (/docs/integrations/providers/activeloop_deeplake) AI21 Labs (/docs/integrations/providers/ai21) Aim (/docs/integrations/providers/aim_tracking) AINetwork (/docs/integrations/providers/ainetwork) Airbyte (/docs/integrations/providers/airbyte) Airtable (/docs/integrations/providers/airtable) Aleph Alpha (/docs/integrations/providers/aleph_alpha) Alibaba Cloud Opensearch (/docs/integrations/providers/alibabacloud_opensearch) Amazon API Gateway (/docs/integrations/providers/amazon_api_gateway) AnalyticDB (/docs/integrations/providers/analyticdb) Annoy (/docs/integrations/providers/annoy) Anyscale (/docs/integrations/providers/anyscale) Apify (/docs/integrations/providers/apify) ArangoDB (/docs/integrations/providers/arangodb) Argilla (/docs/integrations/providers/argilla) Arthur (/docs/integrations/providers/arthur_tracking) Arxiv (/docs/integrations/providers/arxiv) Atlas (/docs/integrations/providers/atlas) AwaDB (/docs/integrations/providers/awadb) AWS S3 Directory (/docs/integrations/providers/aws_s3) AZLyrics (/docs/integrations/providers/azlyrics) Azure Blob Storage (/docs/integrations/providers/azure_blob_storage) Azure Cognitive Search (/docs/integrations/providers/azure_cognitive_search_) Azure OpenAI (/docs/integrations/providers/azure_openai) BagelDB (/docs/integrations/providers/bageldb) Banana (/docs/integrations/providers/bananadev) Baseten (/docs/integrations/providers/baseten) Beam (/docs/integrations/providers/beam) Bedrock (/docs/integrations/providers/bedrock) BiliBili (/docs/integrations/providers/bilibili) NIBittensor (/docs/integrations/providers/bittensor) Blackboard (/docs/integrations/providers/blackboard) Brave Search (/docs/integrations/providers/brave_search) Cassandra (/docs/integrations/providers/cassandra) CerebriumAI (/docs/integrations/providers/cerebriumai) Chaindesk (/docs/integrations/providers/chaindesk) Chroma (/docs/integrations/providers/chroma) Clarifai (/docs/integrations/providers/clarifai) ClearML (/docs/integrations/providers/clearml_tracking) ClickHouse (/docs/integrations/providers/clickhouse) CnosDB (/docs/integrations/providers/cnosdb) Cohere (/docs/integrations/providers/cohere) College Confidential (/docs/integrations/providers/college_confidential) Comet (/docs/integrations/providers/comet_tracking) Confident AI (/docs/integrations/providers/confident) Confluence (/docs/integrations/providers/confluence) C Transformers (/docs/integrations/providers/ctransformers) DashVector (/docs/integrations/providers/dashvector) Databricks (/docs/integrations/providers/databricks) Datadog Tracing (/docs/integrations/providers/datadog) Datadog Logs (/docs/integrations/providers/datadog_logs) DataForSEO (/docs/integrations/providers/dataforseo) DeepInfra (/docs/integrations/providers/deepinfra) DeepSparse (/docs/integrations/providers/deepsparse) Diffbot (/docs/integrations/providers/diffbot) Dingo (/docs/integrations/providers/dingo) Discord (/docs/integrations/providers/discord) DocArray (/docs/integrations/providers/docarray) Docugami (/docs/integrations/providers/docugami) DuckDB (/docs/integrations/providers/duckdb) Elasticsearch (/docs/integrations/providers/elasticsearch) Epsilla (/docs/integrations/providers/epsilla) EverNote (/docs/integrations/providers/evernote) Facebook Chat (/docs/integrations/providers/facebook_chat) Facebook Faiss (/docs/integrations/providers/facebook_faiss) Figma (/docs/integrations/providers/figma) Fireworks (/docs/integrations/providers/fireworks) Flyte (/docs/integrations/providers/flyte) ForefrontAI (/docs/integrations/providers/forefrontai) Git (/docs/integrations/providers/git) GitBook (/docs/integrations/providers/gitbook) Golden (/docs/integrations/providers/golden) Google BigQuery (/docs/integrations/providers/google_bigquery) Google Cloud Storage (/docs/integrations/providers/google_cloud_storage) Google Drive (/docs/integrations/providers/google_drive) Google Search (/docs/integrations/providers/google_search) Google Serper (/docs/integrations/providers/google_serper) Google Vertex AI MatchingEngine (/docs/integrations/providers/google_vertex_ai_matchingengine) GooseAI (/docs/integrations/providers/gooseai) GPT4All (/docs/integrations/providers/gpt4all) Graphsignal (/docs/integrations/providers/graphsignal) Grobid (/docs/integrations/providers/grobid) Gutenberg (/docs/integrations/providers/gutenberg) Hacker News (/docs/integrations/providers/hacker_news) Hazy Research (/docs/integrations/providers/hazy_research) Helicone (/docs/integrations/providers/helicone) Hologres (/docs/integrations/providers/hologres) Hugging Face (/docs/integrations/providers/huggingface) iFixit (/docs/integrations/providers/ifixit) IMSDb (/docs/integrations/providers/imsdb) Infino (/docs/integrations/providers/infino) Jina (/docs/integrations/providers/jina) Konko (/docs/integrations/providers/konko) LanceDB (/docs/integrations/providers/lancedb) LangChain Decorators ‚ú® (/docs/integrations/providers/langchain_decorators) Llama.cpp (/docs/integrations/providers/llamacpp) Log10 (/docs/integrations/providers/log10) Marqo (/docs/integrations/providers/marqo) MediaWikiDump (/docs/integrations/providers/mediawikidump) Meilisearch (/docs/integrations/providers/meilisearch) Metal (/docs/integrations/providers/metal) Microsoft OneDrive (/docs/integrations/providers/microsoft_onedrive) Microsoft PowerPoint (/docs/integrations/providers/microsoft_powerpoint) Microsoft Word (/docs/integrations/providers/microsoft_word) Milvus (/docs/integrations/providers/milvus) Minimax (/docs/integrations/providers/minimax) MLflow AI Gateway (/docs/integrations/providers/mlflow_ai_gateway) MLflow (/docs/integrations/providers/mlflow_tracking) Modal (/docs/integrations/providers/modal) ModelScope (/docs/integrations/providers/modelscope) Modern Treasury (/docs/integrations/providers/modern_treasury) Momento (/docs/integrations/providers/momento) MongoDB Atlas (/docs/integrations/providers/mongodb_atlas) Motherduck (/docs/integrations/providers/motherduck) MyScale (/docs/integrations/providers/myscale) Neo4j (/docs/integrations/providers/neo4j) NLPCloud (/docs/integrations/providers/nlpcloud) Notion DB (/docs/integrations/providers/notion) Obsidian (/docs/integrations/providers/obsidian) OpenAI (/docs/integrations/providers/openai) OpenLLM (/docs/integrations/providers/openllm) OpenSearch (/docs/integrations/providers/opensearch) OpenWeatherMap (/docs/integrations/providers/openweathermap) Petals (/docs/integrations/providers/petals) Postgres Embedding (/docs/integrations/providers/pg_embedding) PGVector (/docs/integrations/providers/pgvector) Pinecone (/docs/integrations/providers/pinecone) PipelineAI (/docs/integrations/providers/pipelineai) Portkey (/docs/integrations/providers/portkey/) Predibase (/docs/integrations/providers/predibase) Prediction Guard (/docs/integrations/providers/predictionguard) PromptLayer (/docs/integrations/providers/promptlayer) Psychic (/docs/integrations/providers/psychic) PubMed (/docs/integrations/providers/pubmed) Qdrant (/docs/integrations/providers/qdrant) Ray Serve (/docs/integrations/providers/ray_serve) Rebuff (/docs/integrations/providers/rebuff) Reddit (/docs/integrations/providers/reddit) Redis (/docs/integrations/providers/redis) Replicate (/docs/integrations/providers/replicate) Roam (/docs/integrations/providers/roam) Rockset (/docs/integrations/providers/rockset) Runhouse (/docs/integrations/providers/runhouse) RWKV-4 (/docs/integrations/providers/rwkv) SageMaker Endpoint (/docs/integrations/providers/sagemaker_endpoint) SageMaker Tracking (/docs/integrations/providers/sagemaker_tracking) ScaNN (/docs/integrations/providers/scann) SearxNG Search API (/docs/integrations/providers/searx) SerpAPI (/docs/integrations/providers/serpapi) Shale Protocol (/docs/integrations/providers/shaleprotocol) SingleStoreDB (/docs/integrations/providers/singlestoredb) scikit-learn (/docs/integrations/providers/sklearn) Slack (/docs/integrations/providers/slack) spaCy (/docs/integrations/providers/spacy) Spreedly (/docs/integrations/providers/spreedly) StarRocks (/docs/integrations/providers/starrocks) StochasticAI (/docs/integrations/providers/stochasticai) Stripe (/docs/integrations/providers/stripe) Supabase (Postgres) (/docs/integrations/providers/supabase) Nebula (/docs/integrations/providers/symblai_nebula) Tair (/docs/integrations/providers/tair) Telegram (/docs/integrations/providers/telegram) TencentVectorDB (/docs/integrations/providers/tencentvectordb) TensorFlow Datasets (/docs/integrations/providers/tensorflow_datasets) Tigris (/docs/integrations/providers/tigris) 2Markdown (/docs/integrations/providers/tomarkdown) Trello (/docs/integrations/providers/trello) TruLens (/docs/integrations/providers/trulens) Twitter (/docs/integrations/providers/twitter) Typesense (/docs/integrations/providers/typesense) Unstructured (/docs/integrations/providers/unstructured) USearch (/docs/integrations/providers/usearch) Vearch (/docs/integrations/providers/vearch) Vectara (/docs/integrations/providers/vectara/) Vespa (/docs/integrations/providers/vespa) WandB Tracing (/docs/integrations/providers/wandb_tracing) Weights & Biases (/docs/integrations/providers/wandb_tracking) Weather (/docs/integrations/providers/weather) Weaviate (/docs/integrations/providers/weaviate) WhatsApp (/docs/integrations/providers/whatsapp) WhyLabs (/docs/integrations/providers/whylabs_profiling) Wikipedia (/docs/integrations/providers/wikipedia) Wolfram Alpha (/docs/integrations/providers/wolfram_alpha) Writer (/docs/integrations/providers/writer) Xata (/docs/integrations/providers/xata) Xorbits Inference (Xinference) (/docs/integrations/providers/xinference) Yeager.ai (/docs/integrations/providers/yeagerai) YouTube (/docs/integrations/providers/youtube) Zep (/docs/integrations/providers/zep) Zilliz (/docs/integrations/providers/zilliz)  (/) Integrations (/docs/integrations) Grouped by provider (/docs/integrations/providers/) ClearML (https://github.com/allegroai/clearml)  (https://colab.research.google.com/github/hwchase17/langchain/blob/master/docs/ecosystem/clearml_tracking.html) ‚Äã (#installation-and-setup) ‚Äã (#getting-api-credentials) https://app.clear.ml/settings/workspace-configuration (https://app.clear.ml/settings/workspace-configuration) https://platform.openai.com/account/api-keys (https://platform.openai.com/account/api-keys) https://serpapi.com/dashboard (https://serpapi.com/dashboard) ‚Äã (#callbacks) ClearMLCallbackHandler (https://api.python.langchain.com/en/latest/callbacks/langchain.callbacks.clearml_callback.ClearMLCallbackHandler.html) StdOutCallbackHandler (https://api.python.langchain.com/en/latest/callbacks/langchain.callbacks.stdout.StdOutCallbackHandler.html) OpenAI (https://api.python.langchain.com/en/latest/llms/langchain.llms.openai.OpenAI.html) ‚Äã (#scenario-1-just-an-llm) https://app.clear.ml (https://app.clear.ml) ‚Äã (#scenario-2-creating-an-agent-with-tools) initialize_agent (https://api.python.langchain.com/en/latest/agents/langchain.agents.initialize.initialize_agent.html) load_tools (https://api.python.langchain.com/en/latest/agents/langchain.agents.load_tools.load_tools.html) AgentType (https://api.python.langchain.com/en/latest/agents/langchain.agents.agent_types.AgentType.html) ‚Äã (#tips-and-next-steps) PreviousClarifai (/docs/integrations/providers/clarifai) NextClickHouse (/docs/integrations/providers/clickhouse) Installation and Setup (#installation-and-setup) Getting API Credentials (#getting-api-credentials) Callbacks (#callbacks) Scenario 1: Just an LLM (#scenario-1-just-an-llm) Scenario 2: Creating an agent with tools (#scenario-2-creating-an-agent-with-tools) Tips and Next Steps (#tips-and-next-steps) Discord (https://discord.gg/cU2adEyC7w) Twitter (https://twitter.com/LangChainAI) Python (https://github.com/hwchase17/langchain) JS/TS (https://github.com/hwchase17/langchainjs) Homepage (https://langchain.com) Blog (https://blog.langchain.dev)