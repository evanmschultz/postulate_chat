This notebook shows how to use LangChain with LlamaAPI - a hosted version of Llama2 that adds in support for function calling. !pip install -U llamaapi IntegrationsCallbacksChat modelsAnthropicAnthropic FunctionsAnyscaleAzureAzureML Chat Online EndpointBedrock ChatERNIE-Bot ChatGoogle Cloud Platform Vertex AI PaLMJinaChatKonkoüöÖ LiteLLMLlama APIOllamaOpenAIPromptLayer ChatOpenAIChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by provider Callbacks Chat modelsAnthropicAnthropic FunctionsAnyscaleAzureAzureML Chat Online EndpointBedrock ChatERNIE-Bot ChatGoogle Cloud Platform Vertex AI PaLMJinaChatKonkoüöÖ LiteLLMLlama APIOllamaOpenAIPromptLayer ChatOpenAI Anthropic Anthropic Functions Anyscale Azure AzureML Chat Online Endpoint Bedrock Chat ERNIE-Bot Chat Google Cloud Platform Vertex AI PaLM JinaChat Konko üöÖ LiteLLM Llama API Ollama OpenAI PromptLayer ChatOpenAI Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by provider  Integrations Chat models Llama API create_tagging_chain Discord Twitter Python JS/TS Homepage Blog Skip to main contentü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLKIntegrationsCallbacksChat modelsAnthropicAnthropic FunctionsAnyscaleAzureAzureML Chat Online EndpointBedrock ChatERNIE-Bot ChatGoogle Cloud Platform Vertex AI PaLMJinaChatKonkoüöÖ LiteLLMLlama APIOllamaOpenAIPromptLayer ChatOpenAIChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerIntegrationsChat modelsLlama APILlama APIThis notebook shows how to use LangChain with LlamaAPI - a hosted version of Llama2 that adds in support for function calling.!pip install -U llamaapifrom llamaapi import LlamaAPI# Replace 'Your_API_Token' with your actual API tokenllama = LlamaAPI('Your_API_Token')from langchain_experimental.llms import ChatLlamaAPI    /Users/harrisonchase/.pyenv/versions/3.9.1/envs/langchain/lib/python3.9/site-packages/deeplake/util/check_latest_version.py:32: UserWarning: A newer version of deeplake (3.6.12) is available. It's recommended that you update to the latest version using `pip install -U deeplake`.      warnings.warn(model = ChatLlamaAPI(client=llama)from langchain.chains import create_tagging_chainschema = {    "properties": {        "sentiment": {"type": "string", 'description': 'the sentiment encountered in the passage'},        "aggressiveness": {"type": "integer", 'description': 'a 0-10 score of how aggressive the passage is'},        "language": {"type": "string", 'description': 'the language of the passage'},    }}chain = create_tagging_chain(schema, model)API Reference:create_tagging_chainchain.run("give me your money")    {'sentiment': 'aggressive', 'aggressiveness': 8}PreviousüöÖ LiteLLMNextOllamaCommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright ¬© 2023 LangChain, Inc. Skip to main content ü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLK ü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPI LangSmithJS/TS DocsCTRLK  CTRLK CTRLK  CTRLK   IntegrationsCallbacksChat modelsAnthropicAnthropic FunctionsAnyscaleAzureAzureML Chat Online EndpointBedrock ChatERNIE-Bot ChatGoogle Cloud Platform Vertex AI PaLMJinaChatKonkoüöÖ LiteLLMLlama APIOllamaOpenAIPromptLayer ChatOpenAIChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerIntegrationsChat modelsLlama APILlama APIThis notebook shows how to use LangChain with LlamaAPI - a hosted version of Llama2 that adds in support for function calling.!pip install -U llamaapifrom llamaapi import LlamaAPI# Replace 'Your_API_Token' with your actual API tokenllama = LlamaAPI('Your_API_Token')from langchain_experimental.llms import ChatLlamaAPI    /Users/harrisonchase/.pyenv/versions/3.9.1/envs/langchain/lib/python3.9/site-packages/deeplake/util/check_latest_version.py:32: UserWarning: A newer version of deeplake (3.6.12) is available. It's recommended that you update to the latest version using `pip install -U deeplake`.      warnings.warn(model = ChatLlamaAPI(client=llama)from langchain.chains import create_tagging_chainschema = {    "properties": {        "sentiment": {"type": "string", 'description': 'the sentiment encountered in the passage'},        "aggressiveness": {"type": "integer", 'description': 'a 0-10 score of how aggressive the passage is'},        "language": {"type": "string", 'description': 'the language of the passage'},    }}chain = create_tagging_chain(schema, model)API Reference:create_tagging_chainchain.run("give me your money")    {'sentiment': 'aggressive', 'aggressiveness': 8}PreviousüöÖ LiteLLMNextOllama IntegrationsCallbacksChat modelsAnthropicAnthropic FunctionsAnyscaleAzureAzureML Chat Online EndpointBedrock ChatERNIE-Bot ChatGoogle Cloud Platform Vertex AI PaLMJinaChatKonkoüöÖ LiteLLMLlama APIOllamaOpenAIPromptLayer ChatOpenAIChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerIntegrationsChat modelsLlama APILlama APIThis notebook shows how to use LangChain with LlamaAPI - a hosted version of Llama2 that adds in support for function calling.!pip install -U llamaapifrom llamaapi import LlamaAPI# Replace 'Your_API_Token' with your actual API tokenllama = LlamaAPI('Your_API_Token')from langchain_experimental.llms import ChatLlamaAPI    /Users/harrisonchase/.pyenv/versions/3.9.1/envs/langchain/lib/python3.9/site-packages/deeplake/util/check_latest_version.py:32: UserWarning: A newer version of deeplake (3.6.12) is available. It's recommended that you update to the latest version using `pip install -U deeplake`.      warnings.warn(model = ChatLlamaAPI(client=llama)from langchain.chains import create_tagging_chainschema = {    "properties": {        "sentiment": {"type": "string", 'description': 'the sentiment encountered in the passage'},        "aggressiveness": {"type": "integer", 'description': 'a 0-10 score of how aggressive the passage is'},        "language": {"type": "string", 'description': 'the language of the passage'},    }}chain = create_tagging_chain(schema, model)API Reference:create_tagging_chainchain.run("give me your money")    {'sentiment': 'aggressive', 'aggressiveness': 8}PreviousüöÖ LiteLLMNextOllama IntegrationsCallbacksChat modelsAnthropicAnthropic FunctionsAnyscaleAzureAzureML Chat Online EndpointBedrock ChatERNIE-Bot ChatGoogle Cloud Platform Vertex AI PaLMJinaChatKonkoüöÖ LiteLLMLlama APIOllamaOpenAIPromptLayer ChatOpenAIChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by provider IntegrationsCallbacksChat modelsAnthropicAnthropic FunctionsAnyscaleAzureAzureML Chat Online EndpointBedrock ChatERNIE-Bot ChatGoogle Cloud Platform Vertex AI PaLMJinaChatKonkoüöÖ LiteLLMLlama APIOllamaOpenAIPromptLayer ChatOpenAIChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by provider Integrations Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by provider IntegrationsChat modelsLlama APILlama APIThis notebook shows how to use LangChain with LlamaAPI - a hosted version of Llama2 that adds in support for function calling.!pip install -U llamaapifrom llamaapi import LlamaAPI# Replace 'Your_API_Token' with your actual API tokenllama = LlamaAPI('Your_API_Token')from langchain_experimental.llms import ChatLlamaAPI    /Users/harrisonchase/.pyenv/versions/3.9.1/envs/langchain/lib/python3.9/site-packages/deeplake/util/check_latest_version.py:32: UserWarning: A newer version of deeplake (3.6.12) is available. It's recommended that you update to the latest version using `pip install -U deeplake`.      warnings.warn(model = ChatLlamaAPI(client=llama)from langchain.chains import create_tagging_chainschema = {    "properties": {        "sentiment": {"type": "string", 'description': 'the sentiment encountered in the passage'},        "aggressiveness": {"type": "integer", 'description': 'a 0-10 score of how aggressive the passage is'},        "language": {"type": "string", 'description': 'the language of the passage'},    }}chain = create_tagging_chain(schema, model)API Reference:create_tagging_chainchain.run("give me your money")    {'sentiment': 'aggressive', 'aggressiveness': 8}PreviousüöÖ LiteLLMNextOllama IntegrationsChat modelsLlama APILlama APIThis notebook shows how to use LangChain with LlamaAPI - a hosted version of Llama2 that adds in support for function calling.!pip install -U llamaapifrom llamaapi import LlamaAPI# Replace 'Your_API_Token' with your actual API tokenllama = LlamaAPI('Your_API_Token')from langchain_experimental.llms import ChatLlamaAPI    /Users/harrisonchase/.pyenv/versions/3.9.1/envs/langchain/lib/python3.9/site-packages/deeplake/util/check_latest_version.py:32: UserWarning: A newer version of deeplake (3.6.12) is available. It's recommended that you update to the latest version using `pip install -U deeplake`.      warnings.warn(model = ChatLlamaAPI(client=llama)from langchain.chains import create_tagging_chainschema = {    "properties": {        "sentiment": {"type": "string", 'description': 'the sentiment encountered in the passage'},        "aggressiveness": {"type": "integer", 'description': 'a 0-10 score of how aggressive the passage is'},        "language": {"type": "string", 'description': 'the language of the passage'},    }}chain = create_tagging_chain(schema, model)API Reference:create_tagging_chainchain.run("give me your money")    {'sentiment': 'aggressive', 'aggressiveness': 8}PreviousüöÖ LiteLLMNextOllama IntegrationsChat modelsLlama APILlama APIThis notebook shows how to use LangChain with LlamaAPI - a hosted version of Llama2 that adds in support for function calling.!pip install -U llamaapifrom llamaapi import LlamaAPI# Replace 'Your_API_Token' with your actual API tokenllama = LlamaAPI('Your_API_Token')from langchain_experimental.llms import ChatLlamaAPI    /Users/harrisonchase/.pyenv/versions/3.9.1/envs/langchain/lib/python3.9/site-packages/deeplake/util/check_latest_version.py:32: UserWarning: A newer version of deeplake (3.6.12) is available. It's recommended that you update to the latest version using `pip install -U deeplake`.      warnings.warn(model = ChatLlamaAPI(client=llama)from langchain.chains import create_tagging_chainschema = {    "properties": {        "sentiment": {"type": "string", 'description': 'the sentiment encountered in the passage'},        "aggressiveness": {"type": "integer", 'description': 'a 0-10 score of how aggressive the passage is'},        "language": {"type": "string", 'description': 'the language of the passage'},    }}chain = create_tagging_chain(schema, model)API Reference:create_tagging_chainchain.run("give me your money")    {'sentiment': 'aggressive', 'aggressiveness': 8}PreviousüöÖ LiteLLMNextOllama IntegrationsChat modelsLlama APILlama APIThis notebook shows how to use LangChain with LlamaAPI - a hosted version of Llama2 that adds in support for function calling.!pip install -U llamaapifrom llamaapi import LlamaAPI# Replace 'Your_API_Token' with your actual API tokenllama = LlamaAPI('Your_API_Token')from langchain_experimental.llms import ChatLlamaAPI    /Users/harrisonchase/.pyenv/versions/3.9.1/envs/langchain/lib/python3.9/site-packages/deeplake/util/check_latest_version.py:32: UserWarning: A newer version of deeplake (3.6.12) is available. It's recommended that you update to the latest version using `pip install -U deeplake`.      warnings.warn(model = ChatLlamaAPI(client=llama)from langchain.chains import create_tagging_chainschema = {    "properties": {        "sentiment": {"type": "string", 'description': 'the sentiment encountered in the passage'},        "aggressiveness": {"type": "integer", 'description': 'a 0-10 score of how aggressive the passage is'},        "language": {"type": "string", 'description': 'the language of the passage'},    }}chain = create_tagging_chain(schema, model)API Reference:create_tagging_chainchain.run("give me your money")    {'sentiment': 'aggressive', 'aggressiveness': 8}PreviousüöÖ LiteLLMNextOllama Llama APIThis notebook shows how to use LangChain with LlamaAPI - a hosted version of Llama2 that adds in support for function calling.!pip install -U llamaapifrom llamaapi import LlamaAPI# Replace 'Your_API_Token' with your actual API tokenllama = LlamaAPI('Your_API_Token')from langchain_experimental.llms import ChatLlamaAPI    /Users/harrisonchase/.pyenv/versions/3.9.1/envs/langchain/lib/python3.9/site-packages/deeplake/util/check_latest_version.py:32: UserWarning: A newer version of deeplake (3.6.12) is available. It's recommended that you update to the latest version using `pip install -U deeplake`.      warnings.warn(model = ChatLlamaAPI(client=llama)from langchain.chains import create_tagging_chainschema = {    "properties": {        "sentiment": {"type": "string", 'description': 'the sentiment encountered in the passage'},        "aggressiveness": {"type": "integer", 'description': 'a 0-10 score of how aggressive the passage is'},        "language": {"type": "string", 'description': 'the language of the passage'},    }}chain = create_tagging_chain(schema, model)API Reference:create_tagging_chainchain.run("give me your money")    {'sentiment': 'aggressive', 'aggressiveness': 8} from llamaapi import LlamaAPI# Replace 'Your_API_Token' with your actual API tokenllama = LlamaAPI('Your_API_Token') from llamaapi import LlamaAPI# Replace 'Your_API_Token' with your actual API tokenllama = LlamaAPI('Your_API_Token')  from langchain_experimental.llms import ChatLlamaAPI from langchain_experimental.llms import ChatLlamaAPI      /Users/harrisonchase/.pyenv/versions/3.9.1/envs/langchain/lib/python3.9/site-packages/deeplake/util/check_latest_version.py:32: UserWarning: A newer version of deeplake (3.6.12) is available. It's recommended that you update to the latest version using `pip install -U deeplake`.      warnings.warn(     /Users/harrisonchase/.pyenv/versions/3.9.1/envs/langchain/lib/python3.9/site-packages/deeplake/util/check_latest_version.py:32: UserWarning: A newer version of deeplake (3.6.12) is available. It's recommended that you update to the latest version using `pip install -U deeplake`.      warnings.warn(     /Users/harrisonchase/.pyenv/versions/3.9.1/envs/langchain/lib/python3.9/site-packages/deeplake/util/check_latest_version.py:32: UserWarning: A newer version of deeplake (3.6.12) is available. It's recommended that you update to the latest version using `pip install -U deeplake`.      warnings.warn(  model = ChatLlamaAPI(client=llama) model = ChatLlamaAPI(client=llama)  from langchain.chains import create_tagging_chainschema = {    "properties": {        "sentiment": {"type": "string", 'description': 'the sentiment encountered in the passage'},        "aggressiveness": {"type": "integer", 'description': 'a 0-10 score of how aggressive the passage is'},        "language": {"type": "string", 'description': 'the language of the passage'},    }}chain = create_tagging_chain(schema, model) from langchain.chains import create_tagging_chainschema = {    "properties": {        "sentiment": {"type": "string", 'description': 'the sentiment encountered in the passage'},        "aggressiveness": {"type": "integer", 'description': 'a 0-10 score of how aggressive the passage is'},        "language": {"type": "string", 'description': 'the language of the passage'},    }}chain = create_tagging_chain(schema, model)  API Reference:create_tagging_chain chain.run("give me your money") chain.run("give me your money")      {'sentiment': 'aggressive', 'aggressiveness': 8}     {'sentiment': 'aggressive', 'aggressiveness': 8}     {'sentiment': 'aggressive', 'aggressiveness': 8}  Previous üöÖ LiteLLM Next Ollama CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright ¬© 2023 LangChain, Inc. CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlog CommunityDiscordTwitter Community GitHubPythonJS/TS GitHub MoreHomepageBlog More Copyright ¬© 2023 LangChain, Inc. Copyright ¬© 2023 LangChain, Inc. Skip to main content (#docusaurus_skipToContent_fallback) ü¶úÔ∏èüîó LangChain (/) Docs (/docs/get_started/introduction) Use cases (/docs/use_cases) Integrations (/docs/integrations) API (https://api.python.langchain.com) LangSmith (https://smith.langchain.com) JS/TS Docs (https://js.langchain.com/docs)  (https://github.com/hwchase17/langchain) Integrations (/docs/integrations) Callbacks (/docs/integrations/callbacks/) Chat models (/docs/integrations/chat/) Anthropic (/docs/integrations/chat/anthropic) Anthropic Functions (/docs/integrations/chat/anthropic_functions) Anyscale (/docs/integrations/chat/anyscale) Azure (/docs/integrations/chat/azure_chat_openai) AzureML Chat Online Endpoint (/docs/integrations/chat/azureml_chat_endpoint) Bedrock Chat (/docs/integrations/chat/bedrock) ERNIE-Bot Chat (/docs/integrations/chat/ernie) Google Cloud Platform Vertex AI PaLM (/docs/integrations/chat/google_vertex_ai_palm) JinaChat (/docs/integrations/chat/jinachat) Konko (/docs/integrations/chat/konko) üöÖ LiteLLM (/docs/integrations/chat/litellm) Llama API (/docs/integrations/chat/llama_api) Ollama (/docs/integrations/chat/ollama) OpenAI (/docs/integrations/chat/openai) PromptLayer ChatOpenAI (/docs/integrations/chat/promptlayer_chatopenai) Chat loaders (/docs/integrations/chat_loaders/) Document loaders (/docs/integrations/document_loaders/) Document transformers (/docs/integrations/document_transformers/) LLMs (/docs/integrations/llms/) Memory (/docs/integrations/memory/) Retrievers (/docs/integrations/retrievers/) Text embedding models (/docs/integrations/text_embedding/) Agents & Toolkits (/docs/integrations/toolkits/) Tools (/docs/integrations/tools/) Vector stores (/docs/integrations/vectorstores/) Grouped by provider (/docs/integrations/providers/)  (/) Integrations (/docs/integrations) Chat models (/docs/integrations/chat/) LlamaAPI (https://llama-api.com/) create_tagging_chain (https://api.python.langchain.com/en/latest/chains/langchain.chains.openai_functions.tagging.create_tagging_chain.html) PreviousüöÖ LiteLLM (/docs/integrations/chat/litellm) NextOllama (/docs/integrations/chat/ollama) Discord (https://discord.gg/cU2adEyC7w) Twitter (https://twitter.com/LangChainAI) Python (https://github.com/hwchase17/langchain) JS/TS (https://github.com/hwchase17/langchainjs) Homepage (https://langchain.com) Blog (https://blog.langchain.dev)