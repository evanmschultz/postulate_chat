This notebook shows how to use IFTTT Webhooks. From https://github.com/SidU/teams-langchain-js/wiki/Connecting-IFTTT-Services. IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by provider Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & Toolkits ToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language Actions Alpha Vantage Apify ArXiv AWS Lambda Shell (bash) Bing Search Brave Search ChatGPT Plugins Dall-E Image Generator DataForSeo DuckDuckGo Search Eden AI File System Golden Query Google Drive Google Places Google Search Google Serper Gradio GraphQL HuggingFace Hub Tools Human as a tool IFTTT WebHooks Lemon Agent Metaphor Search Nuclia Understanding OpenWeatherMap PubMed Requests SceneXplain Search Tools SearxNG Search SerpAPI Twilio Wikipedia Wolfram Alpha Yahoo Finance News YouTube Zapier Natural Language Actions Vector stores Grouped by provider  Integrations Tools IFTTT WebHooks Go to https://ifttt.com/create Click on the "If This" button in the IFTTT interface. Search for "Webhooks" in the search bar. Choose the first option for "Receive a web request with a JSON payload." Choose an Event Name that is specific to the service you plan to connect to. This will make it easier for you to manage the webhook URL. For example, if you're connecting to Spotify, you could use "Spotify" as your Event Name. Click the "Create Trigger" button to save your settings and create your webhook. Tap on the "Then That" button in the IFTTT interface. Search for the service you want to connect, such as Spotify. Choose an action from the service, such as "Add track to a playlist". Configure the action by specifying the necessary details, such as the playlist name, e.g., "Songs from AI". Reference the JSON Payload received by the Webhook in your action. For the Spotify scenario, choose "{{JsonPayload}}" as your search query. Tap the "Create Action" button to save your action settings. Once you have finished configuring your action, click the "Finish" button to complete the setup. Congratulations! You have successfully connected the Webhook to the desired service, and you're ready to start receiving data and triggering actions üéâ To get your webhook URL go to https://ifttt.com/maker_webhooks/settings Copy the IFTTT key value from there. The URL is of the form https://maker.ifttt.com/use/YOUR_IFTTT_KEY. Grab the YOUR_IFTTT_KEY value. IFTTTWebhook Creating a webhook Configuring the "If This" Configuring the "Then That" Finishing up Discord Twitter Python JS/TS Homepage Blog Skip to main contentü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLKIntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by providerIntegrationsToolsIFTTT WebHooksOn this pageIFTTT WebHooksThis notebook shows how to use IFTTT Webhooks.From https://github.com/SidU/teams-langchain-js/wiki/Connecting-IFTTT-Services.Creating a webhook‚ÄãGo to https://ifttt.com/createConfiguring the "If This"‚ÄãClick on the "If This" button in the IFTTT interface.Search for "Webhooks" in the search bar.Choose the first option for "Receive a web request with a JSON payload."Choose an Event Name that is specific to the service you plan to connect to. Event Name.Click the "Create Trigger" button to save your settings and create your webhook.Configuring the "Then That"‚ÄãTap on the "Then That" button in the IFTTT interface.Search for the service you want to connect, such as Spotify.Choose an action from the service, such as "Add track to a playlist".Configure the action by specifying the necessary details, such as the playlist name, e.g., "Songs from AI".Reference the JSON Payload received by the Webhook in your action. For the Spotify scenario, choose "{{JsonPayload}}" as your search query.Tap the "Create Action" button to save your action settings.Once you have finished configuring your action, click the "Finish" button to complete the setup.Congratulations! You have successfully connected the Webhook to the desired service, and you're ready to start receiving data and triggering actions üéâFinishing up‚ÄãTo get your webhook URL go to https://ifttt.com/maker_webhooks/settingsCopy the IFTTT key value from there. The URL is of the form https://maker.ifttt.com/use/YOUR_IFTTT_KEY. Grab the YOUR_IFTTT_KEY value.from langchain.tools.ifttt import IFTTTWebhookAPI Reference:IFTTTWebhookimport oskey = os.environ["IFTTTKey"]url = f"https://maker.ifttt.com/trigger/spotify/json/with/key/{key}"tool = IFTTTWebhook(    name="Spotify", description="Add a song to spotify playlist", url=url)tool.run("taylor swift")    "Congratulations! You've fired the spotify JSON event"PreviousHuman as a toolNextLemon AgentCreating a webhookConfiguring the "If This"Configuring the "Then That"Finishing upCommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright ¬© 2023 LangChain, Inc. Skip to main content ü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLK ü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPI LangSmithJS/TS DocsCTRLK  CTRLK CTRLK  CTRLK   IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by providerIntegrationsToolsIFTTT WebHooksOn this pageIFTTT WebHooksThis notebook shows how to use IFTTT Webhooks.From https://github.com/SidU/teams-langchain-js/wiki/Connecting-IFTTT-Services.Creating a webhook‚ÄãGo to https://ifttt.com/createConfiguring the "If This"‚ÄãClick on the "If This" button in the IFTTT interface.Search for "Webhooks" in the search bar.Choose the first option for "Receive a web request with a JSON payload."Choose an Event Name that is specific to the service you plan to connect to. https://maker.ifttt.com/use/YOUR_IFTTT_KEY. Grab the YOUR_IFTTT_KEY value.from langchain.tools.ifttt import IFTTTWebhookAPI Reference:IFTTTWebhookimport oskey = os.environ["IFTTTKey"]url = f"https://maker.ifttt.com/trigger/spotify/json/with/key/{key}"tool = IFTTTWebhook(    name="Spotify", description="Add a song to spotify playlist", url=url)tool.run("taylor swift")    "Congratulations! You've fired the spotify JSON event"PreviousHuman as a toolNextLemon AgentCreating a webhookConfiguring the "If This"Configuring the "Then That"Finishing up IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by providerIntegrationsToolsIFTTT WebHooksOn this pageIFTTT WebHooksThis notebook shows how to use IFTTT Webhooks.From https://github.com/SidU/teams-langchain-js/wiki/Connecting-IFTTT-Services.Creating a webhook‚ÄãGo to https://ifttt.com/createConfiguring the "If This"‚ÄãClick on the "If This" button in the IFTTT interface.Search for "Webhooks" in the search bar.Choose the first option for "Receive a web request with a JSON payload."Choose an Event Name that is specific to the service you plan to connect to. https://maker.ifttt.com/use/YOUR_IFTTT_KEY. Grab the YOUR_IFTTT_KEY value.from langchain.tools.ifttt import IFTTTWebhookAPI Reference:IFTTTWebhookimport oskey = os.environ["IFTTTKey"]url = f"https://maker.ifttt.com/trigger/spotify/json/with/key/{key}"tool = IFTTTWebhook(    name="Spotify", description="Add a song to spotify playlist", url=url)tool.run("taylor swift")    "Congratulations! You've fired the spotify JSON event"PreviousHuman as a toolNextLemon AgentCreating a webhookConfiguring the "If This"Configuring the "Then That"Finishing up IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by provider IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by provider Integrations Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by provider IntegrationsToolsIFTTT WebHooksOn this pageIFTTT WebHooksThis notebook shows how to use IFTTT Webhooks.From https://github.com/SidU/teams-langchain-js/wiki/Connecting-IFTTT-Services.Creating a webhook‚ÄãGo to https://ifttt.com/createConfiguring the "If This"‚ÄãClick on the "If This" button in the IFTTT interface.Search for "Webhooks" in the search bar.Choose the first option for "Receive a web request with a JSON payload."Choose an Event Name that is specific to the service you plan to connect to. https://maker.ifttt.com/use/YOUR_IFTTT_KEY. Grab the YOUR_IFTTT_KEY value.from langchain.tools.ifttt import IFTTTWebhookAPI Reference:IFTTTWebhookimport oskey = os.environ["IFTTTKey"]url = f"https://maker.ifttt.com/trigger/spotify/json/with/key/{key}"tool = IFTTTWebhook(    name="Spotify", description="Add a song to spotify playlist", url=url)tool.run("taylor swift")    "Congratulations! You've fired the spotify JSON event"PreviousHuman as a toolNextLemon AgentCreating a webhookConfiguring the "If This"Configuring the "Then That"Finishing up IntegrationsToolsIFTTT WebHooksOn this pageIFTTT WebHooksThis notebook shows how to use IFTTT Webhooks.From https://github.com/SidU/teams-langchain-js/wiki/Connecting-IFTTT-Services.Creating a webhook‚ÄãGo to https://ifttt.com/createConfiguring the "If This"‚ÄãClick on the "If This" button in the IFTTT interface.Search for "Webhooks" in the search bar.Choose the first option for "Receive a web request with a JSON payload."Choose an Event Name that is specific to the service you plan to connect to. https://maker.ifttt.com/use/YOUR_IFTTT_KEY. Grab the YOUR_IFTTT_KEY value.from langchain.tools.ifttt import IFTTTWebhookAPI Reference:IFTTTWebhookimport oskey = os.environ["IFTTTKey"]url = f"https://maker.ifttt.com/trigger/spotify/json/with/key/{key}"tool = IFTTTWebhook(    name="Spotify", description="Add a song to spotify playlist", url=url)tool.run("taylor swift")    "Congratulations! You've fired the spotify JSON event"PreviousHuman as a toolNextLemon Agent IntegrationsToolsIFTTT WebHooksOn this pageIFTTT WebHooksThis notebook shows how to use IFTTT Webhooks.From https://github.com/SidU/teams-langchain-js/wiki/Connecting-IFTTT-Services.Creating a webhook‚ÄãGo to https://ifttt.com/createConfiguring the "If This"‚ÄãClick on the "If This" button in the IFTTT interface.Search for "Webhooks" in the search bar.Choose the first option for "Receive a web request with a JSON payload."Choose an Event Name that is specific to the service you plan to connect to. https://maker.ifttt.com/use/YOUR_IFTTT_KEY. Grab the YOUR_IFTTT_KEY value.from langchain.tools.ifttt import IFTTTWebhookAPI Reference:IFTTTWebhookimport oskey = os.environ["IFTTTKey"]url = f"https://maker.ifttt.com/trigger/spotify/json/with/key/{key}"tool = IFTTTWebhook(    name="Spotify", description="Add a song to spotify playlist", url=url)tool.run("taylor swift")    "Congratulations! You've fired the spotify JSON event"PreviousHuman as a toolNextLemon Agent On this page IFTTT WebHooksThis notebook shows how to use IFTTT Webhooks.From https://github.com/SidU/teams-langchain-js/wiki/Connecting-IFTTT-Services.Creating a webhook‚ÄãGo to https://ifttt.com/createConfiguring the "If This"‚ÄãClick on the "If This" button in the IFTTT interface.Search for "Webhooks" in the search bar.Choose the first option for "Receive a web request with a JSON payload."Choose an Event Name that is specific to the service you plan to connect to. https://maker.ifttt.com/use/YOUR_IFTTT_KEY. Grab the YOUR_IFTTT_KEY value.from langchain.tools.ifttt import IFTTTWebhookAPI Reference:IFTTTWebhookimport oskey = os.environ["IFTTTKey"]url = f"https://maker.ifttt.com/trigger/spotify/json/with/key/{key}"tool = IFTTTWebhook(    name="Spotify", description="Add a song to spotify playlist", url=url)tool.run("taylor swift")    "Congratulations! You've fired the spotify JSON event" from langchain.tools.ifttt import IFTTTWebhook from langchain.tools.ifttt import IFTTTWebhook  API Reference:IFTTTWebhook import oskey = os.environ["IFTTTKey"]url = f"https://maker.ifttt.com/trigger/spotify/json/with/key/{key}"tool = IFTTTWebhook(    name="Spotify", description="Add a song to spotify playlist", url=url) import oskey = os.environ["IFTTTKey"]url = f"https://maker.ifttt.com/trigger/spotify/json/with/key/{key}"tool = IFTTTWebhook(    name="Spotify", description="Add a song to spotify playlist", url=url)  tool.run("taylor swift") tool.run("taylor swift")      "Congratulations! You've fired the spotify JSON event"     "Congratulations! You've fired the spotify JSON event"     "Congratulations! You've fired the spotify JSON event"  Previous Human as a tool Next Lemon Agent Creating a webhookConfiguring the "If This"Configuring the "Then That"Finishing up Creating a webhookConfiguring the "If This"Configuring the "Then That"Finishing up CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright ¬© 2023 LangChain, Inc. CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlog CommunityDiscordTwitter Community GitHubPythonJS/TS GitHub MoreHomepageBlog More Copyright ¬© 2023 LangChain, Inc. Copyright ¬© 2023 LangChain, Inc. Skip to main content (#docusaurus_skipToContent_fallback) ü¶úÔ∏èüîó LangChain (/) Docs (/docs/get_started/introduction) Use cases (/docs/use_cases) Integrations (/docs/integrations) API (https://api.python.langchain.com) LangSmith (https://smith.langchain.com) JS/TS Docs (https://js.langchain.com/docs)  (https://github.com/hwchase17/langchain) Integrations (/docs/integrations) Callbacks (/docs/integrations/callbacks/) Chat models (/docs/integrations/chat/) Chat loaders (/docs/integrations/chat_loaders/) Document loaders (/docs/integrations/document_loaders/) Document transformers (/docs/integrations/document_transformers/) LLMs (/docs/integrations/llms/) Memory (/docs/integrations/memory/) Retrievers (/docs/integrations/retrievers/) Text embedding models (/docs/integrations/text_embedding/) Agents & Toolkits (/docs/integrations/toolkits/) Tools (/docs/integrations/tools/) Alpha Vantage (/docs/integrations/tools/alpha_vantage) Apify (/docs/integrations/tools/apify) ArXiv (/docs/integrations/tools/arxiv) AWS Lambda (/docs/integrations/tools/awslambda) Shell (bash) (/docs/integrations/tools/bash) Bing Search (/docs/integrations/tools/bing_search) Brave Search (/docs/integrations/tools/brave_search) ChatGPT Plugins (/docs/integrations/tools/chatgpt_plugins) Dall-E Image Generator (/docs/integrations/tools/dalle_image_generator) DataForSeo (/docs/integrations/tools/dataforseo) DuckDuckGo Search (/docs/integrations/tools/ddg) Eden AI (/docs/integrations/tools/edenai_tools) File System (/docs/integrations/tools/filesystem) Golden Query (/docs/integrations/tools/golden_query) Google Drive (/docs/integrations/tools/google_drive) Google Places (/docs/integrations/tools/google_places) Google Search (/docs/integrations/tools/google_search) Google Serper (/docs/integrations/tools/google_serper) Gradio (/docs/integrations/tools/gradio_tools) GraphQL (/docs/integrations/tools/graphql) HuggingFace Hub Tools (/docs/integrations/tools/huggingface_tools) Human as a tool (/docs/integrations/tools/human_tools) IFTTT WebHooks (/docs/integrations/tools/ifttt) Lemon Agent (/docs/integrations/tools/lemonai) Metaphor Search (/docs/integrations/tools/metaphor_search) Nuclia Understanding (/docs/integrations/tools/nuclia) OpenWeatherMap (/docs/integrations/tools/openweathermap) PubMed (/docs/integrations/tools/pubmed) Requests (/docs/integrations/tools/requests) SceneXplain (/docs/integrations/tools/sceneXplain) Search Tools (/docs/integrations/tools/search_tools) SearxNG Search (/docs/integrations/tools/searx_search) SerpAPI (/docs/integrations/tools/serpapi) Twilio (/docs/integrations/tools/twilio) Wikipedia (/docs/integrations/tools/wikipedia) Wolfram Alpha (/docs/integrations/tools/wolfram_alpha) Yahoo Finance News (/docs/integrations/tools/yahoo_finance_news) YouTube (/docs/integrations/tools/youtube) Zapier Natural Language Actions (/docs/integrations/tools/zapier) Vector stores (/docs/integrations/vectorstores/) Grouped by provider (/docs/integrations/providers/)  (/) Integrations (/docs/integrations) Tools (/docs/integrations/tools/) https://github.com/SidU/teams-langchain-js/wiki/Connecting-IFTTT-Services (https://github.com/SidU/teams-langchain-js/wiki/Connecting-IFTTT-Services) ‚Äã (#creating-a-webhook) https://ifttt.com/create (https://ifttt.com/create) ‚Äã (#configuring-the-if-this) ‚Äã (#configuring-the-then-that) ‚Äã (#finishing-up) https://ifttt.com/maker_webhooks/settings (https://ifttt.com/maker_webhooks/settings) https://maker.ifttt.com/use/YOUR_IFTTT_KEY (https://maker.ifttt.com/use/YOUR_IFTTT_KEY) IFTTTWebhook (https://api.python.langchain.com/en/latest/tools/langchain.tools.ifttt.IFTTTWebhook.html) PreviousHuman as a tool (/docs/integrations/tools/human_tools) NextLemon Agent (/docs/integrations/tools/lemonai) Creating a webhook (#creating-a-webhook) Configuring the "If This" (#configuring-the-if-this) Configuring the "Then That" (#configuring-the-then-that) Finishing up (#finishing-up) Discord (https://discord.gg/cU2adEyC7w) Twitter (https://twitter.com/LangChainAI) Python (https://github.com/hwchase17/langchain) JS/TS (https://github.com/hwchase17/langchainjs) Homepage (https://langchain.com) Blog (https://blog.langchain.dev)