This notebook shows how you can generate images from a prompt synthesized using an OpenAI LLM. The images are generated using Dall-E, which uses the same OpenAI API key as the LLM. IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by provider Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & Toolkits ToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language Actions Alpha Vantage Apify ArXiv AWS Lambda Shell (bash) Bing Search Brave Search ChatGPT Plugins Dall-E Image Generator DataForSeo DuckDuckGo Search Eden AI File System Golden Query Google Drive Google Places Google Search Google Serper Gradio GraphQL HuggingFace Hub Tools Human as a tool IFTTT WebHooks Lemon Agent Metaphor Search Nuclia Understanding OpenWeatherMap PubMed Requests SceneXplain Search Tools SearxNG Search SerpAPI Twilio Wikipedia Wolfram Alpha Yahoo Finance News YouTube Zapier Natural Language Actions Vector stores Grouped by provider  Integrations Tools Dall-E Image Generator OpenAI DallEAPIWrapper PromptTemplate LLMChain OpenAI load_tools initialize_agent Run as a chain Run as a tool with an agent Discord Twitter Python JS/TS Homepage Blog Skip to main contentü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLKIntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by providerIntegrationsToolsDall-E Image GeneratorOn this pageDall-E Image GeneratorThis notebook shows how you can generate images from a prompt synthesized using an OpenAI LLM. The images are generated using Dall-E, which uses the same OpenAI API key as the LLM.# Needed if you would like to display images in the notebookpip install opencv-python scikit-imagefrom langchain.llms import OpenAIimport osos.environ["OPENAI_API_KEY"] = "<your-key-here>"API Reference:OpenAIRun as a chain‚Äãfrom langchain.utilities.dalle_image_generator import DallEAPIWrapperfrom langchain.prompts import PromptTemplatefrom langchain.chains import LLMChainfrom langchain.llms import OpenAIllm = OpenAI(temperature=0.9)prompt = PromptTemplate(    input_variables=["image_desc"],    template="Generate a detailed prompt to generate an image based on the following description: {image_desc}",)chain = LLMChain(llm=llm, prompt=prompt)API Reference:DallEAPIWrapperPromptTemplateLLMChainOpenAIimage_url = DallEAPIWrapper().run(chain.run("halloween night at a haunted museum"))image_url    'https://oaidalleapiprodscus.blob.core.windows.net/private/org-i0zjYONU3PemzJ222esBaAzZ/user-f6uEIOFxoiUZivy567cDSWni/img-i7Z2ZxvJ4IbbdAiO6OXJgS3v.png?st=2023-08-11T14%3A03%3A14Z&se=2023-08-11T16%3A03%3A14Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-08-10T20%3A58%3A32Z&ske=2023-08-11T20%3A58%3A32Z&sks=b&skv=2021-08-06&sig=/sECe7C0EAq37ssgBm7g7JkVIM/Q1W3xOstd0Go6slA%3D'# You can click on the link above to display the image # Or you can try the options below to display the image inline in this notebooktry:    import google.colab    IN_COLAB = Trueexcept:    IN_COLAB = Falseif IN_COLAB:    from google.colab.patches import cv2_imshow # for image display    from skimage import io    image = io.imread(image_url)     cv2_imshow(image)else:    import cv2    from skimage import io    image = io.imread(image_url)     cv2.imshow('image', image)    cv2.waitKey(0)   #wait for a keyboard input    cv2.destroyAllWindows()Run as a tool with an agent‚Äãfrom langchain.agents import load_toolsfrom langchain.agents import initialize_agenttools = load_tools(['dalle-image-generator'])agent = initialize_agent(tools, llm, agent="zero-shot-react-description", verbose=True)output = agent.run("Create an image of a halloween night at a haunted museum")API Reference:load_toolsinitialize_agent            > Entering new AgentExecutor chain...     What is the best way to turn this description into an image?    Action: Dall-E Image Generator    Action Input: A spooky Halloween night at a haunted museumhttps://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D        Observation: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D    Thought: With the image generated, I can now make my final answer.    Final Answer: An image of a Halloween night at a haunted museum can be seen here: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22        > Finished chain.PreviousChatGPT PluginsNextDataForSeoRun as a chainRun as a tool with an agentCommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright ¬© 2023 LangChain, Inc. Skip to main content ü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLK ü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPI LangSmithJS/TS DocsCTRLK  CTRLK CTRLK  CTRLK   IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by providerIntegrationsToolsDall-E Image GeneratorOn this pageDall-E Image GeneratorThis notebook shows how you can generate images from a prompt synthesized using an OpenAI LLM. The images are generated using Dall-E, which uses the same OpenAI API key as the LLM.# Needed if you would like to display images in the notebookpip install opencv-python scikit-imagefrom langchain.llms import OpenAIimport osos.environ["OPENAI_API_KEY"] = "<your-key-here>"API Reference:OpenAIRun as a chain‚Äãfrom langchain.utilities.dalle_image_generator import DallEAPIWrapperfrom langchain.prompts import PromptTemplatefrom langchain.chains import LLMChainfrom langchain.llms import OpenAIllm = OpenAI(temperature=0.9)prompt = PromptTemplate(    input_variables=["image_desc"],    template="Generate a detailed prompt to generate an image based on the following description: {image_desc}",)chain = LLMChain(llm=llm, prompt=prompt)API Reference:DallEAPIWrapperPromptTemplateLLMChainOpenAIimage_url = DallEAPIWrapper().run(chain.run("halloween night at a haunted museum"))image_url    'https://oaidalleapiprodscus.blob.core.windows.net/private/org-i0zjYONU3PemzJ222esBaAzZ/user-f6uEIOFxoiUZivy567cDSWni/img-i7Z2ZxvJ4IbbdAiO6OXJgS3v.png?st=2023-08-11T14%3A03%3A14Z&se=2023-08-11T16%3A03%3A14Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-08-10T20%3A58%3A32Z&ske=2023-08-11T20%3A58%3A32Z&sks=b&skv=2021-08-06&sig=/sECe7C0EAq37ssgBm7g7JkVIM/Q1W3xOstd0Go6slA%3D'# You can click on the link above to display the image # Or you can try the options below to display the image inline in this notebooktry:    import google.colab    IN_COLAB = Trueexcept:    IN_COLAB = Falseif IN_COLAB:    from google.colab.patches import cv2_imshow # for image display    from skimage import io    image = io.imread(image_url)     cv2_imshow(image)else:    import cv2    from skimage import io    image = io.imread(image_url)     cv2.imshow('image', image)    cv2.waitKey(0)   #wait for a keyboard input    cv2.destroyAllWindows()Run as a tool with an agent‚Äãfrom langchain.agents import load_toolsfrom langchain.agents import initialize_agenttools = load_tools(['dalle-image-generator'])agent = initialize_agent(tools, llm, agent="zero-shot-react-description", verbose=True)output = agent.run("Create an image of a halloween night at a haunted museum")API Reference:load_toolsinitialize_agent            > Entering new AgentExecutor chain...     What is the best way to turn this description into an image?    Action: Dall-E Image Generator    Action Input: A spooky Halloween night at a haunted museumhttps://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D        Observation: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D    Thought: With the image generated, I can now make my final answer.    Final Answer: An image of a Halloween night at a haunted museum can be seen here: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22        > Finished chain.PreviousChatGPT PluginsNextDataForSeoRun as a chainRun as a tool with an agent IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by providerIntegrationsToolsDall-E Image GeneratorOn this pageDall-E Image GeneratorThis notebook shows how you can generate images from a prompt synthesized using an OpenAI LLM. The images are generated using Dall-E, which uses the same OpenAI API key as the LLM.# Needed if you would like to display images in the notebookpip install opencv-python scikit-imagefrom langchain.llms import OpenAIimport osos.environ["OPENAI_API_KEY"] = "<your-key-here>"API Reference:OpenAIRun as a chain‚Äãfrom langchain.utilities.dalle_image_generator import DallEAPIWrapperfrom langchain.prompts import PromptTemplatefrom langchain.chains import LLMChainfrom langchain.llms import OpenAIllm = OpenAI(temperature=0.9)prompt = PromptTemplate(    input_variables=["image_desc"],    template="Generate a detailed prompt to generate an image based on the following description: {image_desc}",)chain = LLMChain(llm=llm, prompt=prompt)API Reference:DallEAPIWrapperPromptTemplateLLMChainOpenAIimage_url = DallEAPIWrapper().run(chain.run("halloween night at a haunted museum"))image_url    'https://oaidalleapiprodscus.blob.core.windows.net/private/org-i0zjYONU3PemzJ222esBaAzZ/user-f6uEIOFxoiUZivy567cDSWni/img-i7Z2ZxvJ4IbbdAiO6OXJgS3v.png?st=2023-08-11T14%3A03%3A14Z&se=2023-08-11T16%3A03%3A14Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-08-10T20%3A58%3A32Z&ske=2023-08-11T20%3A58%3A32Z&sks=b&skv=2021-08-06&sig=/sECe7C0EAq37ssgBm7g7JkVIM/Q1W3xOstd0Go6slA%3D'# You can click on the link above to display the image # Or you can try the options below to display the image inline in this notebooktry:    import google.colab    IN_COLAB = Trueexcept:    IN_COLAB = Falseif IN_COLAB:    from google.colab.patches import cv2_imshow # for image display    from skimage import io    image = io.imread(image_url)     cv2_imshow(image)else:    import cv2    from skimage import io    image = io.imread(image_url)     cv2.imshow('image', image)    cv2.waitKey(0)   #wait for a keyboard input    cv2.destroyAllWindows()Run as a tool with an agent‚Äãfrom langchain.agents import load_toolsfrom langchain.agents import initialize_agenttools = load_tools(['dalle-image-generator'])agent = initialize_agent(tools, llm, agent="zero-shot-react-description", verbose=True)output = agent.run("Create an image of a halloween night at a haunted museum")API Reference:load_toolsinitialize_agent            > Entering new AgentExecutor chain...     What is the best way to turn this description into an image?    Action: Dall-E Image Generator    Action Input: A spooky Halloween night at a haunted museumhttps://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D        Observation: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D    Thought: With the image generated, I can now make my final answer.    Final Answer: An image of a Halloween night at a haunted museum can be seen here: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22        > Finished chain.PreviousChatGPT PluginsNextDataForSeoRun as a chainRun as a tool with an agent IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by provider IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by provider Integrations Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by provider IntegrationsToolsDall-E Image GeneratorOn this pageDall-E Image GeneratorThis notebook shows how you can generate images from a prompt synthesized using an OpenAI LLM. The images are generated using Dall-E, which uses the same OpenAI API key as the LLM.# Needed if you would like to display images in the notebookpip install opencv-python scikit-imagefrom langchain.llms import OpenAIimport osos.environ["OPENAI_API_KEY"] = "<your-key-here>"API Reference:OpenAIRun as a chain‚Äãfrom langchain.utilities.dalle_image_generator import DallEAPIWrapperfrom langchain.prompts import PromptTemplatefrom langchain.chains import LLMChainfrom langchain.llms import OpenAIllm = OpenAI(temperature=0.9)prompt = PromptTemplate(    input_variables=["image_desc"],    template="Generate a detailed prompt to generate an image based on the following description: {image_desc}",)chain = LLMChain(llm=llm, prompt=prompt)API Reference:DallEAPIWrapperPromptTemplateLLMChainOpenAIimage_url = DallEAPIWrapper().run(chain.run("halloween night at a haunted museum"))image_url    'https://oaidalleapiprodscus.blob.core.windows.net/private/org-i0zjYONU3PemzJ222esBaAzZ/user-f6uEIOFxoiUZivy567cDSWni/img-i7Z2ZxvJ4IbbdAiO6OXJgS3v.png?st=2023-08-11T14%3A03%3A14Z&se=2023-08-11T16%3A03%3A14Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-08-10T20%3A58%3A32Z&ske=2023-08-11T20%3A58%3A32Z&sks=b&skv=2021-08-06&sig=/sECe7C0EAq37ssgBm7g7JkVIM/Q1W3xOstd0Go6slA%3D'# You can click on the link above to display the image # Or you can try the options below to display the image inline in this notebooktry:    import google.colab    IN_COLAB = Trueexcept:    IN_COLAB = Falseif IN_COLAB:    from google.colab.patches import cv2_imshow # for image display    from skimage import io    image = io.imread(image_url)     cv2_imshow(image)else:    import cv2    from skimage import io    image = io.imread(image_url)     cv2.imshow('image', image)    cv2.waitKey(0)   #wait for a keyboard input    cv2.destroyAllWindows()Run as a tool with an agent‚Äãfrom langchain.agents import load_toolsfrom langchain.agents import initialize_agenttools = load_tools(['dalle-image-generator'])agent = initialize_agent(tools, llm, agent="zero-shot-react-description", verbose=True)output = agent.run("Create an image of a halloween night at a haunted museum")API Reference:load_toolsinitialize_agent            > Entering new AgentExecutor chain...     What is the best way to turn this description into an image?    Action: Dall-E Image Generator    Action Input: A spooky Halloween night at a haunted museumhttps://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D        Observation: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D    Thought: With the image generated, I can now make my final answer.    Final Answer: An image of a Halloween night at a haunted museum can be seen here: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22        > Finished chain.PreviousChatGPT PluginsNextDataForSeoRun as a chainRun as a tool with an agent IntegrationsToolsDall-E Image GeneratorOn this pageDall-E Image GeneratorThis notebook shows how you can generate images from a prompt synthesized using an OpenAI LLM. The images are generated using Dall-E, which uses the same OpenAI API key as the LLM.# Needed if you would like to display images in the notebookpip install opencv-python scikit-imagefrom langchain.llms import OpenAIimport osos.environ["OPENAI_API_KEY"] = "<your-key-here>"API Reference:OpenAIRun as a chain‚Äãfrom langchain.utilities.dalle_image_generator import DallEAPIWrapperfrom langchain.prompts import PromptTemplatefrom langchain.chains import LLMChainfrom langchain.llms import OpenAIllm = OpenAI(temperature=0.9)prompt = PromptTemplate(    input_variables=["image_desc"],    template="Generate a detailed prompt to generate an image based on the following description: {image_desc}",)chain = LLMChain(llm=llm, prompt=prompt)API Reference:DallEAPIWrapperPromptTemplateLLMChainOpenAIimage_url = DallEAPIWrapper().run(chain.run("halloween night at a haunted museum"))image_url    'https://oaidalleapiprodscus.blob.core.windows.net/private/org-i0zjYONU3PemzJ222esBaAzZ/user-f6uEIOFxoiUZivy567cDSWni/img-i7Z2ZxvJ4IbbdAiO6OXJgS3v.png?st=2023-08-11T14%3A03%3A14Z&se=2023-08-11T16%3A03%3A14Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-08-10T20%3A58%3A32Z&ske=2023-08-11T20%3A58%3A32Z&sks=b&skv=2021-08-06&sig=/sECe7C0EAq37ssgBm7g7JkVIM/Q1W3xOstd0Go6slA%3D'# You can click on the link above to display the image # Or you can try the options below to display the image inline in this notebooktry:    import google.colab    IN_COLAB = Trueexcept:    IN_COLAB = Falseif IN_COLAB:    from google.colab.patches import cv2_imshow # for image display    from skimage import io    image = io.imread(image_url)     cv2_imshow(image)else:    import cv2    from skimage import io    image = io.imread(image_url)     cv2.imshow('image', image)    cv2.waitKey(0)   #wait for a keyboard input    cv2.destroyAllWindows()Run as a tool with an agent‚Äãfrom langchain.agents import load_toolsfrom langchain.agents import initialize_agenttools = load_tools(['dalle-image-generator'])agent = initialize_agent(tools, llm, agent="zero-shot-react-description", verbose=True)output = agent.run("Create an image of a halloween night at a haunted museum")API Reference:load_toolsinitialize_agent            > Entering new AgentExecutor chain...     What is the best way to turn this description into an image?    Action: Dall-E Image Generator    Action Input: A spooky Halloween night at a haunted museumhttps://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D        Observation: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D    Thought: With the image generated, I can now make my final answer.    Final Answer: An image of a Halloween night at a haunted museum can be seen here: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22        > Finished chain.PreviousChatGPT PluginsNextDataForSeoRun as a chainRun as a tool with an agent IntegrationsToolsDall-E Image GeneratorOn this pageDall-E Image GeneratorThis notebook shows how you can generate images from a prompt synthesized using an OpenAI LLM. The images are generated using Dall-E, which uses the same OpenAI API key as the LLM.# Needed if you would like to display images in the notebookpip install opencv-python scikit-imagefrom langchain.llms import OpenAIimport osos.environ["OPENAI_API_KEY"] = "<your-key-here>"API Reference:OpenAIRun as a chain‚Äãfrom langchain.utilities.dalle_image_generator import DallEAPIWrapperfrom langchain.prompts import PromptTemplatefrom langchain.chains import LLMChainfrom langchain.llms import OpenAIllm = OpenAI(temperature=0.9)prompt = PromptTemplate(    input_variables=["image_desc"],    template="Generate a detailed prompt to generate an image based on the following description: {image_desc}",)chain = LLMChain(llm=llm, prompt=prompt)API Reference:DallEAPIWrapperPromptTemplateLLMChainOpenAIimage_url = DallEAPIWrapper().run(chain.run("halloween night at a haunted museum"))image_url    'https://oaidalleapiprodscus.blob.core.windows.net/private/org-i0zjYONU3PemzJ222esBaAzZ/user-f6uEIOFxoiUZivy567cDSWni/img-i7Z2ZxvJ4IbbdAiO6OXJgS3v.png?st=2023-08-11T14%3A03%3A14Z&se=2023-08-11T16%3A03%3A14Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-08-10T20%3A58%3A32Z&ske=2023-08-11T20%3A58%3A32Z&sks=b&skv=2021-08-06&sig=/sECe7C0EAq37ssgBm7g7JkVIM/Q1W3xOstd0Go6slA%3D'# You can click on the link above to display the image # Or you can try the options below to display the image inline in this notebooktry:    import google.colab    IN_COLAB = Trueexcept:    IN_COLAB = Falseif IN_COLAB:    from google.colab.patches import cv2_imshow # for image display    from skimage import io    image = io.imread(image_url)     cv2_imshow(image)else:    import cv2    from skimage import io    image = io.imread(image_url)     cv2.imshow('image', image)    cv2.waitKey(0)   #wait for a keyboard input    cv2.destroyAllWindows()Run as a tool with an agent‚Äãfrom langchain.agents import load_toolsfrom langchain.agents import initialize_agenttools = load_tools(['dalle-image-generator'])agent = initialize_agent(tools, llm, agent="zero-shot-react-description", verbose=True)output = agent.run("Create an image of a halloween night at a haunted museum")API Reference:load_toolsinitialize_agent            > Entering new AgentExecutor chain...     What is the best way to turn this description into an image?    Action: Dall-E Image Generator    Action Input: A spooky Halloween night at a haunted museumhttps://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D        Observation: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D    Thought: With the image generated, I can now make my final answer.    Final Answer: An image of a Halloween night at a haunted museum can be seen here: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22        > Finished chain.PreviousChatGPT PluginsNextDataForSeo IntegrationsToolsDall-E Image GeneratorOn this pageDall-E Image GeneratorThis notebook shows how you can generate images from a prompt synthesized using an OpenAI LLM. The images are generated using Dall-E, which uses the same OpenAI API key as the LLM.# Needed if you would like to display images in the notebookpip install opencv-python scikit-imagefrom langchain.llms import OpenAIimport osos.environ["OPENAI_API_KEY"] = "<your-key-here>"API Reference:OpenAIRun as a chain‚Äãfrom langchain.utilities.dalle_image_generator import DallEAPIWrapperfrom langchain.prompts import PromptTemplatefrom langchain.chains import LLMChainfrom langchain.llms import OpenAIllm = OpenAI(temperature=0.9)prompt = PromptTemplate(    input_variables=["image_desc"],    template="Generate a detailed prompt to generate an image based on the following description: {image_desc}",)chain = LLMChain(llm=llm, prompt=prompt)API Reference:DallEAPIWrapperPromptTemplateLLMChainOpenAIimage_url = DallEAPIWrapper().run(chain.run("halloween night at a haunted museum"))image_url    'https://oaidalleapiprodscus.blob.core.windows.net/private/org-i0zjYONU3PemzJ222esBaAzZ/user-f6uEIOFxoiUZivy567cDSWni/img-i7Z2ZxvJ4IbbdAiO6OXJgS3v.png?st=2023-08-11T14%3A03%3A14Z&se=2023-08-11T16%3A03%3A14Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-08-10T20%3A58%3A32Z&ske=2023-08-11T20%3A58%3A32Z&sks=b&skv=2021-08-06&sig=/sECe7C0EAq37ssgBm7g7JkVIM/Q1W3xOstd0Go6slA%3D'# You can click on the link above to display the image # Or you can try the options below to display the image inline in this notebooktry:    import google.colab    IN_COLAB = Trueexcept:    IN_COLAB = Falseif IN_COLAB:    from google.colab.patches import cv2_imshow # for image display    from skimage import io    image = io.imread(image_url)     cv2_imshow(image)else:    import cv2    from skimage import io    image = io.imread(image_url)     cv2.imshow('image', image)    cv2.waitKey(0)   #wait for a keyboard input    cv2.destroyAllWindows()Run as a tool with an agent‚Äãfrom langchain.agents import load_toolsfrom langchain.agents import initialize_agenttools = load_tools(['dalle-image-generator'])agent = initialize_agent(tools, llm, agent="zero-shot-react-description", verbose=True)output = agent.run("Create an image of a halloween night at a haunted museum")API Reference:load_toolsinitialize_agent            > Entering new AgentExecutor chain...     What is the best way to turn this description into an image?    Action: Dall-E Image Generator    Action Input: A spooky Halloween night at a haunted museumhttps://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D        Observation: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D    Thought: With the image generated, I can now make my final answer.    Final Answer: An image of a Halloween night at a haunted museum can be seen here: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22        > Finished chain.PreviousChatGPT PluginsNextDataForSeo On this page Dall-E Image GeneratorThis notebook shows how you can generate images from a prompt synthesized using an OpenAI LLM. The images are generated using Dall-E, which uses the same OpenAI API key as the LLM.# Needed if you would like to display images in the notebookpip install opencv-python scikit-imagefrom langchain.llms import OpenAIimport osos.environ["OPENAI_API_KEY"] = "<your-key-here>"API Reference:OpenAIRun as a chain‚Äãfrom langchain.utilities.dalle_image_generator import DallEAPIWrapperfrom langchain.prompts import PromptTemplatefrom langchain.chains import LLMChainfrom langchain.llms import OpenAIllm = OpenAI(temperature=0.9)prompt = PromptTemplate(    input_variables=["image_desc"],    template="Generate a detailed prompt to generate an image based on the following description: {image_desc}",)chain = LLMChain(llm=llm, prompt=prompt)API Reference:DallEAPIWrapperPromptTemplateLLMChainOpenAIimage_url = DallEAPIWrapper().run(chain.run("halloween night at a haunted museum"))image_url    'https://oaidalleapiprodscus.blob.core.windows.net/private/org-i0zjYONU3PemzJ222esBaAzZ/user-f6uEIOFxoiUZivy567cDSWni/img-i7Z2ZxvJ4IbbdAiO6OXJgS3v.png?st=2023-08-11T14%3A03%3A14Z&se=2023-08-11T16%3A03%3A14Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-08-10T20%3A58%3A32Z&ske=2023-08-11T20%3A58%3A32Z&sks=b&skv=2021-08-06&sig=/sECe7C0EAq37ssgBm7g7JkVIM/Q1W3xOstd0Go6slA%3D'# You can click on the link above to display the image # Or you can try the options below to display the image inline in this notebooktry:    import google.colab    IN_COLAB = Trueexcept:    IN_COLAB = Falseif IN_COLAB:    from google.colab.patches import cv2_imshow # for image display    from skimage import io    image = io.imread(image_url)     cv2_imshow(image)else:    import cv2    from skimage import io    image = io.imread(image_url)     cv2.imshow('image', image)    cv2.waitKey(0)   #wait for a keyboard input    cv2.destroyAllWindows()Run as a tool with an agent‚Äãfrom langchain.agents import load_toolsfrom langchain.agents import initialize_agenttools = load_tools(['dalle-image-generator'])agent = initialize_agent(tools, llm, agent="zero-shot-react-description", verbose=True)output = agent.run("Create an image of a halloween night at a haunted museum")API Reference:load_toolsinitialize_agent            > Entering new AgentExecutor chain...     What is the best way to turn this description into an image?    Action: Dall-E Image Generator    Action Input: A spooky Halloween night at a haunted museumhttps://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D        Observation: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D    Thought: With the image generated, I can now make my final answer.    Final Answer: An image of a Halloween night at a haunted museum can be seen here: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22        > Finished chain. # Needed if you would like to display images in the notebookpip install opencv-python scikit-image # Needed if you would like to display images in the notebookpip install opencv-python scikit-image  from langchain.llms import OpenAIimport osos.environ["OPENAI_API_KEY"] = "<your-key-here>" from langchain.llms import OpenAIimport osos.environ["OPENAI_API_KEY"] = "<your-key-here>"  API Reference:OpenAI from langchain.utilities.dalle_image_generator import DallEAPIWrapperfrom langchain.prompts import PromptTemplatefrom langchain.chains import LLMChainfrom langchain.llms import OpenAIllm = OpenAI(temperature=0.9)prompt = PromptTemplate(    input_variables=["image_desc"],    template="Generate a detailed prompt to generate an image based on the following description: {image_desc}",)chain = LLMChain(llm=llm, prompt=prompt) from langchain.utilities.dalle_image_generator import DallEAPIWrapperfrom langchain.prompts import PromptTemplatefrom langchain.chains import LLMChainfrom langchain.llms import OpenAIllm = OpenAI(temperature=0.9)prompt = PromptTemplate(    input_variables=["image_desc"],    template="Generate a detailed prompt to generate an image based on the following description: {image_desc}",)chain = LLMChain(llm=llm, prompt=prompt)  API Reference:DallEAPIWrapperPromptTemplateLLMChainOpenAI image_url = DallEAPIWrapper().run(chain.run("halloween night at a haunted museum")) image_url = DallEAPIWrapper().run(chain.run("halloween night at a haunted museum"))  image_url image_url      'https://oaidalleapiprodscus.blob.core.windows.net/private/org-i0zjYONU3PemzJ222esBaAzZ/user-f6uEIOFxoiUZivy567cDSWni/img-i7Z2ZxvJ4IbbdAiO6OXJgS3v.png?st=2023-08-11T14%3A03%3A14Z&se=2023-08-11T16%3A03%3A14Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-08-10T20%3A58%3A32Z&ske=2023-08-11T20%3A58%3A32Z&sks=b&skv=2021-08-06&sig=/sECe7C0EAq37ssgBm7g7JkVIM/Q1W3xOstd0Go6slA%3D'     'https://oaidalleapiprodscus.blob.core.windows.net/private/org-i0zjYONU3PemzJ222esBaAzZ/user-f6uEIOFxoiUZivy567cDSWni/img-i7Z2ZxvJ4IbbdAiO6OXJgS3v.png?st=2023-08-11T14%3A03%3A14Z&se=2023-08-11T16%3A03%3A14Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-08-10T20%3A58%3A32Z&ske=2023-08-11T20%3A58%3A32Z&sks=b&skv=2021-08-06&sig=/sECe7C0EAq37ssgBm7g7JkVIM/Q1W3xOstd0Go6slA%3D'     'https://oaidalleapiprodscus.blob.core.windows.net/private/org-i0zjYONU3PemzJ222esBaAzZ/user-f6uEIOFxoiUZivy567cDSWni/img-i7Z2ZxvJ4IbbdAiO6OXJgS3v.png?st=2023-08-11T14%3A03%3A14Z&se=2023-08-11T16%3A03%3A14Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-08-10T20%3A58%3A32Z&ske=2023-08-11T20%3A58%3A32Z&sks=b&skv=2021-08-06&sig=/sECe7C0EAq37ssgBm7g7JkVIM/Q1W3xOstd0Go6slA%3D'  # You can click on the link above to display the image # Or you can try the options below to display the image inline in this notebooktry:    import google.colab    IN_COLAB = Trueexcept:    IN_COLAB = Falseif IN_COLAB:    from google.colab.patches import cv2_imshow # for image display    from skimage import io    image = io.imread(image_url)     cv2_imshow(image)else:    import cv2    from skimage import io    image = io.imread(image_url)     cv2.imshow('image', image)    cv2.waitKey(0)   #wait for a keyboard input    cv2.destroyAllWindows() # You can click on the link above to display the image # Or you can try the options below to display the image inline in this notebooktry:    import google.colab    IN_COLAB = Trueexcept:    IN_COLAB = Falseif IN_COLAB:    from google.colab.patches import cv2_imshow # for image display    from skimage import io    image = io.imread(image_url)     cv2_imshow(image)else:    import cv2    from skimage import io    image = io.imread(image_url)     cv2.imshow('image', image)    cv2.waitKey(0)   #wait for a keyboard input    cv2.destroyAllWindows()  from langchain.agents import load_toolsfrom langchain.agents import initialize_agenttools = load_tools(['dalle-image-generator'])agent = initialize_agent(tools, llm, agent="zero-shot-react-description", verbose=True)output = agent.run("Create an image of a halloween night at a haunted museum") from langchain.agents import load_toolsfrom langchain.agents import initialize_agenttools = load_tools(['dalle-image-generator'])agent = initialize_agent(tools, llm, agent="zero-shot-react-description", verbose=True)output = agent.run("Create an image of a halloween night at a haunted museum")  API Reference:load_toolsinitialize_agent             > Entering new AgentExecutor chain...     What is the best way to turn this description into an image?    Action: Dall-E Image Generator    Action Input: A spooky Halloween night at a haunted museumhttps://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D        Observation: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D    Thought: With the image generated, I can now make my final answer.    Final Answer: An image of a Halloween night at a haunted museum can be seen here: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22        > Finished chain.             > Entering new AgentExecutor chain...     What is the best way to turn this description into an image?    Action: Dall-E Image Generator    Action Input: A spooky Halloween night at a haunted museumhttps://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D        Observation: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D    Thought: With the image generated, I can now make my final answer.    Final Answer: An image of a Halloween night at a haunted museum can be seen here: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22        > Finished chain.             > Entering new AgentExecutor chain...     What is the best way to turn this description into an image?    Action: Dall-E Image Generator    Action Input: A spooky Halloween night at a haunted museumhttps://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D        Observation: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22%3A19%3A36Z&ske=2023-01-31T22%3A19%3A36Z&sks=b&skv=2021-08-06&sig=XsomxxBfu2CP78SzR9lrWUlbask4wBNnaMsHamy4VvU%3D    Thought: With the image generated, I can now make my final answer.    Final Answer: An image of a Halloween night at a haunted museum can be seen here: https://oaidalleapiprodscus.blob.core.windows.net/private/org-rocrupyvzgcl4yf25rqq6d1v/user-WsxrbKyP2c8rfhCKWDyMfe8N/img-ogKfqxxOS5KWVSj4gYySR6FY.png?st=2023-01-31T07%3A38%3A25Z&se=2023-01-31T09%3A38%3A25Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-01-30T22        > Finished chain.  Previous ChatGPT Plugins Next DataForSeo Run as a chainRun as a tool with an agent Run as a chainRun as a tool with an agent CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright ¬© 2023 LangChain, Inc. CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlog CommunityDiscordTwitter Community GitHubPythonJS/TS GitHub MoreHomepageBlog More Copyright ¬© 2023 LangChain, Inc. Copyright ¬© 2023 LangChain, Inc. Skip to main content (#docusaurus_skipToContent_fallback) ü¶úÔ∏èüîó LangChain (/) Docs (/docs/get_started/introduction) Use cases (/docs/use_cases) Integrations (/docs/integrations) API (https://api.python.langchain.com) LangSmith (https://smith.langchain.com) JS/TS Docs (https://js.langchain.com/docs)  (https://github.com/hwchase17/langchain) Integrations (/docs/integrations) Callbacks (/docs/integrations/callbacks/) Chat models (/docs/integrations/chat/) Chat loaders (/docs/integrations/chat_loaders/) Document loaders (/docs/integrations/document_loaders/) Document transformers (/docs/integrations/document_transformers/) LLMs (/docs/integrations/llms/) Memory (/docs/integrations/memory/) Retrievers (/docs/integrations/retrievers/) Text embedding models (/docs/integrations/text_embedding/) Agents & Toolkits (/docs/integrations/toolkits/) Tools (/docs/integrations/tools/) Alpha Vantage (/docs/integrations/tools/alpha_vantage) Apify (/docs/integrations/tools/apify) ArXiv (/docs/integrations/tools/arxiv) AWS Lambda (/docs/integrations/tools/awslambda) Shell (bash) (/docs/integrations/tools/bash) Bing Search (/docs/integrations/tools/bing_search) Brave Search (/docs/integrations/tools/brave_search) ChatGPT Plugins (/docs/integrations/tools/chatgpt_plugins) Dall-E Image Generator (/docs/integrations/tools/dalle_image_generator) DataForSeo (/docs/integrations/tools/dataforseo) DuckDuckGo Search (/docs/integrations/tools/ddg) Eden AI (/docs/integrations/tools/edenai_tools) File System (/docs/integrations/tools/filesystem) Golden Query (/docs/integrations/tools/golden_query) Google Drive (/docs/integrations/tools/google_drive) Google Places (/docs/integrations/tools/google_places) Google Search (/docs/integrations/tools/google_search) Google Serper (/docs/integrations/tools/google_serper) Gradio (/docs/integrations/tools/gradio_tools) GraphQL (/docs/integrations/tools/graphql) HuggingFace Hub Tools (/docs/integrations/tools/huggingface_tools) Human as a tool (/docs/integrations/tools/human_tools) IFTTT WebHooks (/docs/integrations/tools/ifttt) Lemon Agent (/docs/integrations/tools/lemonai) Metaphor Search (/docs/integrations/tools/metaphor_search) Nuclia Understanding (/docs/integrations/tools/nuclia) OpenWeatherMap (/docs/integrations/tools/openweathermap) PubMed (/docs/integrations/tools/pubmed) Requests (/docs/integrations/tools/requests) SceneXplain (/docs/integrations/tools/sceneXplain) Search Tools (/docs/integrations/tools/search_tools) SearxNG Search (/docs/integrations/tools/searx_search) SerpAPI (/docs/integrations/tools/serpapi) Twilio (/docs/integrations/tools/twilio) Wikipedia (/docs/integrations/tools/wikipedia) Wolfram Alpha (/docs/integrations/tools/wolfram_alpha) Yahoo Finance News (/docs/integrations/tools/yahoo_finance_news) YouTube (/docs/integrations/tools/youtube) Zapier Natural Language Actions (/docs/integrations/tools/zapier) Vector stores (/docs/integrations/vectorstores/) Grouped by provider (/docs/integrations/providers/)  (/) Integrations (/docs/integrations) Tools (/docs/integrations/tools/) OpenAI (https://api.python.langchain.com/en/latest/llms/langchain.llms.openai.OpenAI.html) ‚Äã (#run-as-a-chain) DallEAPIWrapper (https://api.python.langchain.com/en/latest/utilities/langchain.utilities.dalle_image_generator.DallEAPIWrapper.html) PromptTemplate (https://api.python.langchain.com/en/latest/prompts/langchain.prompts.prompt.PromptTemplate.html) LLMChain (https://api.python.langchain.com/en/latest/chains/langchain.chains.llm.LLMChain.html) OpenAI (https://api.python.langchain.com/en/latest/llms/langchain.llms.openai.OpenAI.html) ‚Äã (#run-as-a-tool-with-an-agent) load_tools (https://api.python.langchain.com/en/latest/agents/langchain.agents.load_tools.load_tools.html) initialize_agent (https://api.python.langchain.com/en/latest/agents/langchain.agents.initialize.initialize_agent.html) PreviousChatGPT Plugins (/docs/integrations/tools/chatgpt_plugins) NextDataForSeo (/docs/integrations/tools/dataforseo) Run as a chain (#run-as-a-chain) Run as a tool with an agent (#run-as-a-tool-with-an-agent) Discord (https://discord.gg/cU2adEyC7w) Twitter (https://twitter.com/LangChainAI) Python (https://github.com/hwchase17/langchain) JS/TS (https://github.com/hwchase17/langchainjs) Homepage (https://langchain.com) Blog (https://blog.langchain.dev)