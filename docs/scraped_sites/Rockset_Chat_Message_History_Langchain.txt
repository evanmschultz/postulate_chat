This notebook goes over how to use Rockset to store chat message history.  To begin, with get your API key from the Rockset console. Find your API region for the Rockset API reference. The output should be something like: IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryCassandra Chat Message HistoryDynamodb Chat Message HistoryEntity Memory with SQLite storageMomento Chat Message HistoryMongodb Chat Message HistoryMot√∂rhead MemoryMot√∂rhead Memory (Managed)Postgres Chat Message HistoryRedis Chat Message HistoryRockset Chat Message HistorySQL Chat Message HistoryStreamlit Chat Message HistoryXata chat memoryZep MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by provider Callbacks Chat models Chat loaders Document loaders Document transformers LLMs MemoryCassandra Chat Message HistoryDynamodb Chat Message HistoryEntity Memory with SQLite storageMomento Chat Message HistoryMongodb Chat Message HistoryMot√∂rhead MemoryMot√∂rhead Memory (Managed)Postgres Chat Message HistoryRedis Chat Message HistoryRockset Chat Message HistorySQL Chat Message HistoryStreamlit Chat Message HistoryXata chat memoryZep Memory Cassandra Chat Message History Dynamodb Chat Message History Entity Memory with SQLite storage Momento Chat Message History Mongodb Chat Message History Mot√∂rhead Memory Mot√∂rhead Memory (Managed) Postgres Chat Message History Redis Chat Message History Rockset Chat Message History SQL Chat Message History Streamlit Chat Message History Xata chat memory Zep Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by provider  Integrations Memory Rockset Chat Message History RocksetChatMessageHistory Discord Twitter Python JS/TS Homepage Blog Skip to main contentü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLKIntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryCassandra Chat Message HistoryDynamodb Chat Message HistoryEntity Memory with SQLite storageMomento Chat Message HistoryMongodb Chat Message HistoryMot√∂rhead MemoryMot√∂rhead Memory (Managed)Postgres Chat Message HistoryRedis Chat Message HistoryRockset Chat Message HistorySQL Chat Message HistoryStreamlit Chat Message HistoryXata chat memoryZep MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerIntegrationsMemoryRockset Chat Message HistoryRockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history. To begin, with get your API key from the Rockset console. Find your API region for the Rockset API reference.from langchain.memory.chat_message_histories import RocksetChatMessageHistoryfrom rockset import RocksetClient, Regionshistory = RocksetChatMessageHistory(    session_id="MySession",    client=RocksetClient(        api_key="YOUR API KEY",         host=Regions.usw2a1 # us-west-2 Oregon    ),    collection="langchain_demo",    sync=True)history.add_user_message("hi!")history.add_ai_message("whats up?")print(history.messages)API Reference:RocksetChatMessageHistoryThe output should be something like:[    HumanMessage(content='hi!', additional_kwargs={'id': '2e62f1c2-e9f7-465e-b551-49bae07fe9f0'}, example=False),     AIMessage(content='whats up?', additional_kwargs={'id': 'b9be8eda-4c18-4cf8-81c3-e91e876927d0'}, example=False)]PreviousRedis Chat Message HistoryNextSQL Chat Message HistoryCommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright ¬© 2023 LangChain, Inc. Skip to main content ü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLK ü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPI LangSmithJS/TS DocsCTRLK  CTRLK CTRLK  CTRLK   IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryCassandra Chat Message HistoryDynamodb Chat Message HistoryEntity Memory with SQLite storageMomento Chat Message HistoryMongodb Chat Message HistoryMot√∂rhead MemoryMot√∂rhead Memory (Managed)Postgres Chat Message HistoryRedis Chat Message HistoryRockset Chat Message HistorySQL Chat Message HistoryStreamlit Chat Message HistoryXata chat memoryZep MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerIntegrationsMemoryRockset Chat Message HistoryRockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history. To begin, with get your API key from the Rockset console. Find your API region for the Rockset API reference.from langchain.memory.chat_message_histories import RocksetChatMessageHistoryfrom rockset import RocksetClient, Regionshistory = RocksetChatMessageHistory(    session_id="MySession",    client=RocksetClient(        api_key="YOUR API KEY",         host=Regions.usw2a1 # us-west-2 Oregon    ),    collection="langchain_demo",    sync=True)history.add_user_message("hi!")history.add_ai_message("whats up?")print(history.messages)API Reference:RocksetChatMessageHistoryThe output should be something like:[    HumanMessage(content='hi!', additional_kwargs={'id': '2e62f1c2-e9f7-465e-b551-49bae07fe9f0'}, example=False),     AIMessage(content='whats up?', additional_kwargs={'id': 'b9be8eda-4c18-4cf8-81c3-e91e876927d0'}, example=False)]PreviousRedis Chat Message HistoryNextSQL Chat Message History IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryCassandra Chat Message HistoryDynamodb Chat Message HistoryEntity Memory with SQLite storageMomento Chat Message HistoryMongodb Chat Message HistoryMot√∂rhead MemoryMot√∂rhead Memory (Managed)Postgres Chat Message HistoryRedis Chat Message HistoryRockset Chat Message HistorySQL Chat Message HistoryStreamlit Chat Message HistoryXata chat memoryZep MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerIntegrationsMemoryRockset Chat Message HistoryRockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history. To begin, with get your API key from the Rockset console. Find your API region for the Rockset API reference.from langchain.memory.chat_message_histories import RocksetChatMessageHistoryfrom rockset import RocksetClient, Regionshistory = RocksetChatMessageHistory(    session_id="MySession",    client=RocksetClient(        api_key="YOUR API KEY",         host=Regions.usw2a1 # us-west-2 Oregon    ),    collection="langchain_demo",    sync=True)history.add_user_message("hi!")history.add_ai_message("whats up?")print(history.messages)API Reference:RocksetChatMessageHistoryThe output should be something like:[    HumanMessage(content='hi!', additional_kwargs={'id': '2e62f1c2-e9f7-465e-b551-49bae07fe9f0'}, example=False),     AIMessage(content='whats up?', additional_kwargs={'id': 'b9be8eda-4c18-4cf8-81c3-e91e876927d0'}, example=False)]PreviousRedis Chat Message HistoryNextSQL Chat Message History IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryCassandra Chat Message HistoryDynamodb Chat Message HistoryEntity Memory with SQLite storageMomento Chat Message HistoryMongodb Chat Message HistoryMot√∂rhead MemoryMot√∂rhead Memory (Managed)Postgres Chat Message HistoryRedis Chat Message HistoryRockset Chat Message HistorySQL Chat Message HistoryStreamlit Chat Message HistoryXata chat memoryZep MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by provider IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryCassandra Chat Message HistoryDynamodb Chat Message HistoryEntity Memory with SQLite storageMomento Chat Message HistoryMongodb Chat Message HistoryMot√∂rhead MemoryMot√∂rhead Memory (Managed)Postgres Chat Message HistoryRedis Chat Message HistoryRockset Chat Message HistorySQL Chat Message HistoryStreamlit Chat Message HistoryXata chat memoryZep MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by provider Integrations Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by provider IntegrationsMemoryRockset Chat Message HistoryRockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history. To begin, with get your API key from the Rockset console. Find your API region for the Rockset API reference.from langchain.memory.chat_message_histories import RocksetChatMessageHistoryfrom rockset import RocksetClient, Regionshistory = RocksetChatMessageHistory(    session_id="MySession",    client=RocksetClient(        api_key="YOUR API KEY",         host=Regions.usw2a1 # us-west-2 Oregon    ),    collection="langchain_demo",    sync=True)history.add_user_message("hi!")history.add_ai_message("whats up?")print(history.messages)API Reference:RocksetChatMessageHistoryThe output should be something like:[    HumanMessage(content='hi!', additional_kwargs={'id': '2e62f1c2-e9f7-465e-b551-49bae07fe9f0'}, example=False),     AIMessage(content='whats up?', additional_kwargs={'id': 'b9be8eda-4c18-4cf8-81c3-e91e876927d0'}, example=False)]PreviousRedis Chat Message HistoryNextSQL Chat Message History IntegrationsMemoryRockset Chat Message HistoryRockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history. To begin, with get your API key from the Rockset console. Find your API region for the Rockset API reference.from langchain.memory.chat_message_histories import RocksetChatMessageHistoryfrom rockset import RocksetClient, Regionshistory = RocksetChatMessageHistory(    session_id="MySession",    client=RocksetClient(        api_key="YOUR API KEY",         host=Regions.usw2a1 # us-west-2 Oregon    ),    collection="langchain_demo",    sync=True)history.add_user_message("hi!")history.add_ai_message("whats up?")print(history.messages)API Reference:RocksetChatMessageHistoryThe output should be something like:[    HumanMessage(content='hi!', additional_kwargs={'id': '2e62f1c2-e9f7-465e-b551-49bae07fe9f0'}, example=False),     AIMessage(content='whats up?', additional_kwargs={'id': 'b9be8eda-4c18-4cf8-81c3-e91e876927d0'}, example=False)]PreviousRedis Chat Message HistoryNextSQL Chat Message History IntegrationsMemoryRockset Chat Message HistoryRockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history. To begin, with get your API key from the Rockset console. Find your API region for the Rockset API reference.from langchain.memory.chat_message_histories import RocksetChatMessageHistoryfrom rockset import RocksetClient, Regionshistory = RocksetChatMessageHistory(    session_id="MySession",    client=RocksetClient(        api_key="YOUR API KEY",         host=Regions.usw2a1 # us-west-2 Oregon    ),    collection="langchain_demo",    sync=True)history.add_user_message("hi!")history.add_ai_message("whats up?")print(history.messages)API Reference:RocksetChatMessageHistoryThe output should be something like:[    HumanMessage(content='hi!', additional_kwargs={'id': '2e62f1c2-e9f7-465e-b551-49bae07fe9f0'}, example=False),     AIMessage(content='whats up?', additional_kwargs={'id': 'b9be8eda-4c18-4cf8-81c3-e91e876927d0'}, example=False)]PreviousRedis Chat Message HistoryNextSQL Chat Message History IntegrationsMemoryRockset Chat Message HistoryRockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history. To begin, with get your API key from the Rockset console. Find your API region for the Rockset API reference.from langchain.memory.chat_message_histories import RocksetChatMessageHistoryfrom rockset import RocksetClient, Regionshistory = RocksetChatMessageHistory(    session_id="MySession",    client=RocksetClient(        api_key="YOUR API KEY",         host=Regions.usw2a1 # us-west-2 Oregon    ),    collection="langchain_demo",    sync=True)history.add_user_message("hi!")history.add_ai_message("whats up?")print(history.messages)API Reference:RocksetChatMessageHistoryThe output should be something like:[    HumanMessage(content='hi!', additional_kwargs={'id': '2e62f1c2-e9f7-465e-b551-49bae07fe9f0'}, example=False),     AIMessage(content='whats up?', additional_kwargs={'id': 'b9be8eda-4c18-4cf8-81c3-e91e876927d0'}, example=False)]PreviousRedis Chat Message HistoryNextSQL Chat Message History Rockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history. To begin, with get your API key from the Rockset console. Find your API region for the Rockset API reference.from langchain.memory.chat_message_histories import RocksetChatMessageHistoryfrom rockset import RocksetClient, Regionshistory = RocksetChatMessageHistory(    session_id="MySession",    client=RocksetClient(        api_key="YOUR API KEY",         host=Regions.usw2a1 # us-west-2 Oregon    ),    collection="langchain_demo",    sync=True)history.add_user_message("hi!")history.add_ai_message("whats up?")print(history.messages)API Reference:RocksetChatMessageHistoryThe output should be something like:[    HumanMessage(content='hi!', additional_kwargs={'id': '2e62f1c2-e9f7-465e-b551-49bae07fe9f0'}, example=False),     AIMessage(content='whats up?', additional_kwargs={'id': 'b9be8eda-4c18-4cf8-81c3-e91e876927d0'}, example=False)] from langchain.memory.chat_message_histories import RocksetChatMessageHistoryfrom rockset import RocksetClient, Regionshistory = RocksetChatMessageHistory(    session_id="MySession",    client=RocksetClient(        api_key="YOUR API KEY",         host=Regions.usw2a1 # us-west-2 Oregon    ),    collection="langchain_demo",    sync=True)history.add_user_message("hi!")history.add_ai_message("whats up?")print(history.messages) from langchain.memory.chat_message_histories import RocksetChatMessageHistoryfrom rockset import RocksetClient, Regionshistory = RocksetChatMessageHistory(    session_id="MySession",    client=RocksetClient(        api_key="YOUR API KEY",         host=Regions.usw2a1 # us-west-2 Oregon    ),    collection="langchain_demo",    sync=True)history.add_user_message("hi!")history.add_ai_message("whats up?")print(history.messages)  API Reference:RocksetChatMessageHistory [    HumanMessage(content='hi!', additional_kwargs={'id': '2e62f1c2-e9f7-465e-b551-49bae07fe9f0'}, example=False),     AIMessage(content='whats up?', additional_kwargs={'id': 'b9be8eda-4c18-4cf8-81c3-e91e876927d0'}, example=False)] [    HumanMessage(content='hi!', additional_kwargs={'id': '2e62f1c2-e9f7-465e-b551-49bae07fe9f0'}, example=False),     AIMessage(content='whats up?', additional_kwargs={'id': 'b9be8eda-4c18-4cf8-81c3-e91e876927d0'}, example=False)]  Previous Redis Chat Message History Next SQL Chat Message History CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright ¬© 2023 LangChain, Inc. CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlog CommunityDiscordTwitter Community GitHubPythonJS/TS GitHub MoreHomepageBlog More Copyright ¬© 2023 LangChain, Inc. Copyright ¬© 2023 LangChain, Inc. Skip to main content (#docusaurus_skipToContent_fallback) ü¶úÔ∏èüîó LangChain (/) Docs (/docs/get_started/introduction) Use cases (/docs/use_cases) Integrations (/docs/integrations) API (https://api.python.langchain.com) LangSmith (https://smith.langchain.com) JS/TS Docs (https://js.langchain.com/docs)  (https://github.com/hwchase17/langchain) Integrations (/docs/integrations) Callbacks (/docs/integrations/callbacks/) Chat models (/docs/integrations/chat/) Chat loaders (/docs/integrations/chat_loaders/) Document loaders (/docs/integrations/document_loaders/) Document transformers (/docs/integrations/document_transformers/) LLMs (/docs/integrations/llms/) Memory (/docs/integrations/memory/) Cassandra Chat Message History (/docs/integrations/memory/cassandra_chat_message_history) Dynamodb Chat Message History (/docs/integrations/memory/dynamodb_chat_message_history) Entity Memory with SQLite storage (/docs/integrations/memory/entity_memory_with_sqlite) Momento Chat Message History (/docs/integrations/memory/momento_chat_message_history) Mongodb Chat Message History (/docs/integrations/memory/mongodb_chat_message_history) Mot√∂rhead Memory (/docs/integrations/memory/motorhead_memory) Mot√∂rhead Memory (Managed) (/docs/integrations/memory/motorhead_memory_managed) Postgres Chat Message History (/docs/integrations/memory/postgres_chat_message_history) Redis Chat Message History (/docs/integrations/memory/redis_chat_message_history) Rockset Chat Message History (/docs/integrations/memory/rockset_chat_message_history) SQL Chat Message History (/docs/integrations/memory/sql_chat_message_history) Streamlit Chat Message History (/docs/integrations/memory/streamlit_chat_message_history) Xata chat memory (/docs/integrations/memory/xata_chat_message_history) Zep Memory (/docs/integrations/memory/zep_memory) Retrievers (/docs/integrations/retrievers/) Text embedding models (/docs/integrations/text_embedding/) Agents & Toolkits (/docs/integrations/toolkits/) Tools (/docs/integrations/tools/) Vector stores (/docs/integrations/vectorstores/) Grouped by provider (/docs/integrations/providers/)  (/) Integrations (/docs/integrations) Memory (/docs/integrations/memory/) Rockset (https://rockset.com/docs) Rockset console (https://console.rockset.com/apikeys) API reference (https://rockset.com/docs/rest-api#introduction) RocksetChatMessageHistory (https://api.python.langchain.com/en/latest/memory/langchain.memory.chat_message_histories.rocksetdb.RocksetChatMessageHistory.html) PreviousRedis Chat Message History (/docs/integrations/memory/redis_chat_message_history) NextSQL Chat Message History (/docs/integrations/memory/sql_chat_message_history) Discord (https://discord.gg/cU2adEyC7w) Twitter (https://twitter.com/LangChainAI) Python (https://github.com/hwchase17/langchain) JS/TS (https://github.com/hwchase17/langchainjs) Homepage (https://langchain.com) Blog (https://blog.langchain.dev)