Nuclia automatically indexes your unstructured data from any internal and external source, providing optimized search results and generative answers. It can handle video and audio transcription, image content extraction, and document parsing. The Nuclia Understanding API document transformer splits text into paragraphs and sentences, identifies entities, provides a summary of the text and generates embeddings for all the sentences. To use the Nuclia Understanding API, you need to have a Nuclia account. You can create one for free at https://nuclia.cloud, and then create a NUA key. from langchain.document_transformers.nuclia_text_transform import NucliaTextTransformer To use the Nuclia document transformer, you need to instantiate a NucliaUnderstandingAPI tool with enable_ml set to True: The Nuclia document transformer must be called in async mode, so you need to use the atransform_documents method: IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersBeautiful SoupdocaiDoctran Extract PropertiesDoctran Interrogate DocumentsDoctran Translate Documentshtml2textNuclia Understanding API document transformerOpenAI Functions Metadata TaggerLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by provider Callbacks Chat models Chat loaders Document loaders Document transformersBeautiful SoupdocaiDoctran Extract PropertiesDoctran Interrogate DocumentsDoctran Translate Documentshtml2textNuclia Understanding API document transformerOpenAI Functions Metadata Tagger Beautiful Soup docai Doctran Extract Properties Doctran Interrogate Documents Doctran Translate Documents html2text Nuclia Understanding API document transformer OpenAI Functions Metadata Tagger LLMs Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by provider  Integrations Document transformers Nuclia Understanding API document transformer NucliaUnderstandingAPI NucliaTextTransformer Document Discord Twitter Python JS/TS Homepage Blog Skip to main contentü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLKIntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersBeautiful SoupdocaiDoctran Extract PropertiesDoctran Interrogate DocumentsDoctran Translate Documentshtml2textNuclia Understanding API document transformerOpenAI Functions Metadata TaggerLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerIntegrationsDocument transformersNuclia Understanding API document transformerNuclia Understanding API document transformerNuclia automatically indexes your unstructured data from any internal and external source, providing optimized search results and generative answers. It can handle video and audio transcription, image content extraction, and document parsing.The Nuclia Understanding API document transformer splits text into paragraphs and sentences, identifies entities, provides a summary of the text and generates embeddings for all the sentences.To use the Nuclia Understanding API, you need to have a Nuclia account. You can create one for free at https://nuclia.cloud, and then create a NUA key.from langchain.document_transformers.nuclia_text_transform import NucliaTextTransformer#!pip install --upgrade protobuf#!pip install nucliadb-protosimport osos.environ["NUCLIA_ZONE"] = "<YOUR_ZONE>"  # e.g. europe-1os.environ["NUCLIA_NUA_KEY"] = "<YOUR_API_KEY>"To use the Nuclia document transformer, you need to instantiate a NucliaUnderstandingAPI tool with enable_ml set to True:from langchain.tools.nuclia import NucliaUnderstandingAPInua = NucliaUnderstandingAPI(enable_ml=True)API Reference:NucliaUnderstandingAPIThe Nuclia document transformer must be called in async mode, so you need to use the atransform_documents method:import asynciofrom langchain.document_transformers.nuclia_text_transform import NucliaTextTransformerfrom langchain.schema.document import Documentasync def process():    documents = [        Document(page_content="<TEXT 1>", metadata={}),        Document(page_content="<TEXT 2>", metadata={}),        Document(page_content="<TEXT 3>", metadata={}),    ]    nuclia_transformer = NucliaTextTransformer(nua)    transformed_documents = await nuclia_transformer.atransform_documents(documents)    print(transformed_documents)asyncio.run(process())API Reference:NucliaTextTransformerDocumentPrevioushtml2textNextOpenAI Functions Metadata TaggerCommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright ¬© 2023 LangChain, Inc. Skip to main content ü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLK ü¶úÔ∏èüîó LangChainDocsUse casesIntegrationsAPI LangSmithJS/TS DocsCTRLK  CTRLK CTRLK  CTRLK   IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersBeautiful SoupdocaiDoctran Extract PropertiesDoctran Interrogate DocumentsDoctran Translate Documentshtml2textNuclia Understanding API document transformerOpenAI Functions Metadata TaggerLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerIntegrationsDocument transformersNuclia Understanding API document transformerNuclia Understanding API document transformerNuclia automatically indexes your unstructured data from any internal and external source, providing optimized search results and generative answers. It can handle video and audio transcription, image content extraction, and document parsing.The Nuclia Understanding API document transformer splits text into paragraphs and sentences, identifies entities, provides a summary of the text and generates embeddings for all the sentences.To use the Nuclia Understanding API, you need to have a Nuclia account. You can create one for free at https://nuclia.cloud, and then create a NUA key.from langchain.document_transformers.nuclia_text_transform import NucliaTextTransformer#!pip install --upgrade protobuf#!pip install nucliadb-protosimport osos.environ["NUCLIA_ZONE"] = "<YOUR_ZONE>"  # e.g. europe-1os.environ["NUCLIA_NUA_KEY"] = "<YOUR_API_KEY>"To use the Nuclia document transformer, you need to instantiate a NucliaUnderstandingAPI tool with enable_ml set to True:from langchain.tools.nuclia import NucliaUnderstandingAPInua = NucliaUnderstandingAPI(enable_ml=True)API Reference:NucliaUnderstandingAPIThe Nuclia document transformer must be called in async mode, so you need to use the atransform_documents method:import asynciofrom langchain.document_transformers.nuclia_text_transform import NucliaTextTransformerfrom langchain.schema.document import Documentasync def process():    documents = [        Document(page_content="<TEXT 1>", metadata={}),        Document(page_content="<TEXT 2>", metadata={}),        Document(page_content="<TEXT 3>", metadata={}),    ]    nuclia_transformer = NucliaTextTransformer(nua)    transformed_documents = await nuclia_transformer.atransform_documents(documents)    print(transformed_documents)asyncio.run(process())API Reference:NucliaTextTransformerDocumentPrevioushtml2textNextOpenAI Functions Metadata Tagger IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersBeautiful SoupdocaiDoctran Extract PropertiesDoctran Interrogate DocumentsDoctran Translate Documentshtml2textNuclia Understanding API document transformerOpenAI Functions Metadata TaggerLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerIntegrationsDocument transformersNuclia Understanding API document transformerNuclia Understanding API document transformerNuclia automatically indexes your unstructured data from any internal and external source, providing optimized search results and generative answers. It can handle video and audio transcription, image content extraction, and document parsing.The Nuclia Understanding API document transformer splits text into paragraphs and sentences, identifies entities, provides a summary of the text and generates embeddings for all the sentences.To use the Nuclia Understanding API, you need to have a Nuclia account. You can create one for free at https://nuclia.cloud, and then create a NUA key.from langchain.document_transformers.nuclia_text_transform import NucliaTextTransformer#!pip install --upgrade protobuf#!pip install nucliadb-protosimport osos.environ["NUCLIA_ZONE"] = "<YOUR_ZONE>"  # e.g. europe-1os.environ["NUCLIA_NUA_KEY"] = "<YOUR_API_KEY>"To use the Nuclia document transformer, you need to instantiate a NucliaUnderstandingAPI tool with enable_ml set to True:from langchain.tools.nuclia import NucliaUnderstandingAPInua = NucliaUnderstandingAPI(enable_ml=True)API Reference:NucliaUnderstandingAPIThe Nuclia document transformer must be called in async mode, so you need to use the atransform_documents method:import asynciofrom langchain.document_transformers.nuclia_text_transform import NucliaTextTransformerfrom langchain.schema.document import Documentasync def process():    documents = [        Document(page_content="<TEXT 1>", metadata={}),        Document(page_content="<TEXT 2>", metadata={}),        Document(page_content="<TEXT 3>", metadata={}),    ]    nuclia_transformer = NucliaTextTransformer(nua)    transformed_documents = await nuclia_transformer.atransform_documents(documents)    print(transformed_documents)asyncio.run(process())API Reference:NucliaTextTransformerDocumentPrevioushtml2textNextOpenAI Functions Metadata Tagger IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersBeautiful SoupdocaiDoctran Extract PropertiesDoctran Interrogate DocumentsDoctran Translate Documentshtml2textNuclia Understanding API document transformerOpenAI Functions Metadata TaggerLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by provider IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersBeautiful SoupdocaiDoctran Extract PropertiesDoctran Interrogate DocumentsDoctran Translate Documentshtml2textNuclia Understanding API document transformerOpenAI Functions Metadata TaggerLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by provider Integrations Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by provider IntegrationsDocument transformersNuclia Understanding API document transformerNuclia Understanding API document transformerNuclia automatically indexes your unstructured data from any internal and external source, providing optimized search results and generative answers. It can handle video and audio transcription, image content extraction, and document parsing.The Nuclia Understanding API document transformer splits text into paragraphs and sentences, identifies entities, provides a summary of the text and generates embeddings for all the sentences.To use the Nuclia Understanding API, you need to have a Nuclia account. You can create one for free at https://nuclia.cloud, and then create a NUA key.from langchain.document_transformers.nuclia_text_transform import NucliaTextTransformer#!pip install --upgrade protobuf#!pip install nucliadb-protosimport osos.environ["NUCLIA_ZONE"] = "<YOUR_ZONE>"  # e.g. europe-1os.environ["NUCLIA_NUA_KEY"] = "<YOUR_API_KEY>"To use the Nuclia document transformer, you need to instantiate a NucliaUnderstandingAPI tool with enable_ml set to True:from langchain.tools.nuclia import NucliaUnderstandingAPInua = NucliaUnderstandingAPI(enable_ml=True)API Reference:NucliaUnderstandingAPIThe Nuclia document transformer must be called in async mode, so you need to use the atransform_documents method:import asynciofrom langchain.document_transformers.nuclia_text_transform import NucliaTextTransformerfrom langchain.schema.document import Documentasync def process():    documents = [        Document(page_content="<TEXT 1>", metadata={}),        Document(page_content="<TEXT 2>", metadata={}),        Document(page_content="<TEXT 3>", metadata={}),    ]    nuclia_transformer = NucliaTextTransformer(nua)    transformed_documents = await nuclia_transformer.atransform_documents(documents)    print(transformed_documents)asyncio.run(process())API Reference:NucliaTextTransformerDocumentPrevioushtml2textNextOpenAI Functions Metadata Tagger IntegrationsDocument transformersNuclia Understanding API document transformerNuclia Understanding API document transformerNuclia automatically indexes your unstructured data from any internal and external source, providing optimized search results and generative answers. It can handle video and audio transcription, image content extraction, and document parsing.The Nuclia Understanding API document transformer splits text into paragraphs and sentences, identifies entities, provides a summary of the text and generates embeddings for all the sentences.To use the Nuclia Understanding API, you need to have a Nuclia account. You can create one for free at https://nuclia.cloud, and then create a NUA key.from langchain.document_transformers.nuclia_text_transform import NucliaTextTransformer#!pip install --upgrade protobuf#!pip install nucliadb-protosimport osos.environ["NUCLIA_ZONE"] = "<YOUR_ZONE>"  # e.g. europe-1os.environ["NUCLIA_NUA_KEY"] = "<YOUR_API_KEY>"To use the Nuclia document transformer, you need to instantiate a NucliaUnderstandingAPI tool with enable_ml set to True:from langchain.tools.nuclia import NucliaUnderstandingAPInua = NucliaUnderstandingAPI(enable_ml=True)API Reference:NucliaUnderstandingAPIThe Nuclia document transformer must be called in async mode, so you need to use the atransform_documents method:import asynciofrom langchain.document_transformers.nuclia_text_transform import NucliaTextTransformerfrom langchain.schema.document import Documentasync def process():    documents = [        Document(page_content="<TEXT 1>", metadata={}),        Document(page_content="<TEXT 2>", metadata={}),        Document(page_content="<TEXT 3>", metadata={}),    ]    nuclia_transformer = NucliaTextTransformer(nua)    transformed_documents = await nuclia_transformer.atransform_documents(documents)    print(transformed_documents)asyncio.run(process())API Reference:NucliaTextTransformerDocumentPrevioushtml2textNextOpenAI Functions Metadata Tagger IntegrationsDocument transformersNuclia Understanding API document transformerNuclia Understanding API document transformerNuclia automatically indexes your unstructured data from any internal and external source, providing optimized search results and generative answers. It can handle video and audio transcription, image content extraction, and document parsing.The Nuclia Understanding API document transformer splits text into paragraphs and sentences, identifies entities, provides a summary of the text and generates embeddings for all the sentences.To use the Nuclia Understanding API, you need to have a Nuclia account. You can create one for free at https://nuclia.cloud, and then create a NUA key.from langchain.document_transformers.nuclia_text_transform import NucliaTextTransformer#!pip install --upgrade protobuf#!pip install nucliadb-protosimport osos.environ["NUCLIA_ZONE"] = "<YOUR_ZONE>"  # e.g. europe-1os.environ["NUCLIA_NUA_KEY"] = "<YOUR_API_KEY>"To use the Nuclia document transformer, you need to instantiate a NucliaUnderstandingAPI tool with enable_ml set to True:from langchain.tools.nuclia import NucliaUnderstandingAPInua = NucliaUnderstandingAPI(enable_ml=True)API Reference:NucliaUnderstandingAPIThe Nuclia document transformer must be called in async mode, so you need to use the atransform_documents method:import asynciofrom langchain.document_transformers.nuclia_text_transform import NucliaTextTransformerfrom langchain.schema.document import Documentasync def process():    documents = [        Document(page_content="<TEXT 1>", metadata={}),        Document(page_content="<TEXT 2>", metadata={}),        Document(page_content="<TEXT 3>", metadata={}),    ]    nuclia_transformer = NucliaTextTransformer(nua)    transformed_documents = await nuclia_transformer.atransform_documents(documents)    print(transformed_documents)asyncio.run(process())API Reference:NucliaTextTransformerDocumentPrevioushtml2textNextOpenAI Functions Metadata Tagger IntegrationsDocument transformersNuclia Understanding API document transformerNuclia Understanding API document transformerNuclia automatically indexes your unstructured data from any internal and external source, providing optimized search results and generative answers. It can handle video and audio transcription, image content extraction, and document parsing.The Nuclia Understanding API document transformer splits text into paragraphs and sentences, identifies entities, provides a summary of the text and generates embeddings for all the sentences.To use the Nuclia Understanding API, you need to have a Nuclia account. You can create one for free at https://nuclia.cloud, and then create a NUA key.from langchain.document_transformers.nuclia_text_transform import NucliaTextTransformer#!pip install --upgrade protobuf#!pip install nucliadb-protosimport osos.environ["NUCLIA_ZONE"] = "<YOUR_ZONE>"  # e.g. europe-1os.environ["NUCLIA_NUA_KEY"] = "<YOUR_API_KEY>"To use the Nuclia document transformer, you need to instantiate a NucliaUnderstandingAPI tool with enable_ml set to True:from langchain.tools.nuclia import NucliaUnderstandingAPInua = NucliaUnderstandingAPI(enable_ml=True)API Reference:NucliaUnderstandingAPIThe Nuclia document transformer must be called in async mode, so you need to use the atransform_documents method:import asynciofrom langchain.document_transformers.nuclia_text_transform import NucliaTextTransformerfrom langchain.schema.document import Documentasync def process():    documents = [        Document(page_content="<TEXT 1>", metadata={}),        Document(page_content="<TEXT 2>", metadata={}),        Document(page_content="<TEXT 3>", metadata={}),    ]    nuclia_transformer = NucliaTextTransformer(nua)    transformed_documents = await nuclia_transformer.atransform_documents(documents)    print(transformed_documents)asyncio.run(process())API Reference:NucliaTextTransformerDocumentPrevioushtml2textNextOpenAI Functions Metadata Tagger Nuclia Understanding API document transformerNuclia automatically indexes your unstructured data from any internal and external source, providing optimized search results and generative answers. It can handle video and audio transcription, image content extraction, and document parsing.The Nuclia Understanding API document transformer splits text into paragraphs and sentences, identifies entities, provides a summary of the text and generates embeddings for all the sentences.To use the Nuclia Understanding API, you need to have a Nuclia account. You can create one for free at https://nuclia.cloud, and then create a NUA key.from langchain.document_transformers.nuclia_text_transform import NucliaTextTransformer#!pip install --upgrade protobuf#!pip install nucliadb-protosimport osos.environ["NUCLIA_ZONE"] = "<YOUR_ZONE>"  # e.g. europe-1os.environ["NUCLIA_NUA_KEY"] = "<YOUR_API_KEY>"To use the Nuclia document transformer, you need to instantiate a NucliaUnderstandingAPI tool with enable_ml set to True:from langchain.tools.nuclia import NucliaUnderstandingAPInua = NucliaUnderstandingAPI(enable_ml=True)API Reference:NucliaUnderstandingAPIThe Nuclia document transformer must be called in async mode, so you need to use the atransform_documents method:import asynciofrom langchain.document_transformers.nuclia_text_transform import NucliaTextTransformerfrom langchain.schema.document import Documentasync def process():    documents = [        Document(page_content="<TEXT 1>", metadata={}),        Document(page_content="<TEXT 2>", metadata={}),        Document(page_content="<TEXT 3>", metadata={}),    ]    nuclia_transformer = NucliaTextTransformer(nua)    transformed_documents = await nuclia_transformer.atransform_documents(documents)    print(transformed_documents)asyncio.run(process())API Reference:NucliaTextTransformerDocument #!pip install --upgrade protobuf#!pip install nucliadb-protos #!pip install --upgrade protobuf#!pip install nucliadb-protos  import osos.environ["NUCLIA_ZONE"] = "<YOUR_ZONE>"  # e.g. europe-1os.environ["NUCLIA_NUA_KEY"] = "<YOUR_API_KEY>" import osos.environ["NUCLIA_ZONE"] = "<YOUR_ZONE>"  # e.g. europe-1os.environ["NUCLIA_NUA_KEY"] = "<YOUR_API_KEY>"  from langchain.tools.nuclia import NucliaUnderstandingAPInua = NucliaUnderstandingAPI(enable_ml=True) from langchain.tools.nuclia import NucliaUnderstandingAPInua = NucliaUnderstandingAPI(enable_ml=True)  API Reference:NucliaUnderstandingAPI import asynciofrom langchain.document_transformers.nuclia_text_transform import NucliaTextTransformerfrom langchain.schema.document import Documentasync def process():    documents = [        Document(page_content="<TEXT 1>", metadata={}),        Document(page_content="<TEXT 2>", metadata={}),        Document(page_content="<TEXT 3>", metadata={}),    ]    nuclia_transformer = NucliaTextTransformer(nua)    transformed_documents = await nuclia_transformer.atransform_documents(documents)    print(transformed_documents)asyncio.run(process()) import asynciofrom langchain.document_transformers.nuclia_text_transform import NucliaTextTransformerfrom langchain.schema.document import Documentasync def process():    documents = [        Document(page_content="<TEXT 1>", metadata={}),        Document(page_content="<TEXT 2>", metadata={}),        Document(page_content="<TEXT 3>", metadata={}),    ]    nuclia_transformer = NucliaTextTransformer(nua)    transformed_documents = await nuclia_transformer.atransform_documents(documents)    print(transformed_documents)asyncio.run(process())  API Reference:NucliaTextTransformerDocument Previous html2text Next OpenAI Functions Metadata Tagger CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright ¬© 2023 LangChain, Inc. CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlog CommunityDiscordTwitter Community GitHubPythonJS/TS GitHub MoreHomepageBlog More Copyright ¬© 2023 LangChain, Inc. Copyright ¬© 2023 LangChain, Inc. Skip to main content (#docusaurus_skipToContent_fallback) ü¶úÔ∏èüîó LangChain (/) Docs (/docs/get_started/introduction) Use cases (/docs/use_cases) Integrations (/docs/integrations) API (https://api.python.langchain.com) LangSmith (https://smith.langchain.com) JS/TS Docs (https://js.langchain.com/docs)  (https://github.com/hwchase17/langchain) Integrations (/docs/integrations) Callbacks (/docs/integrations/callbacks/) Chat models (/docs/integrations/chat/) Chat loaders (/docs/integrations/chat_loaders/) Document loaders (/docs/integrations/document_loaders/) Document transformers (/docs/integrations/document_transformers/) Beautiful Soup (/docs/integrations/document_transformers/beautiful_soup) docai (/docs/integrations/document_transformers/docai) Doctran Extract Properties (/docs/integrations/document_transformers/doctran_extract_properties) Doctran Interrogate Documents (/docs/integrations/document_transformers/doctran_interrogate_document) Doctran Translate Documents (/docs/integrations/document_transformers/doctran_translate_document) html2text (/docs/integrations/document_transformers/html2text) Nuclia Understanding API document transformer (/docs/integrations/document_transformers/nuclia_transformer) OpenAI Functions Metadata Tagger (/docs/integrations/document_transformers/openai_metadata_tagger) LLMs (/docs/integrations/llms/) Memory (/docs/integrations/memory/) Retrievers (/docs/integrations/retrievers/) Text embedding models (/docs/integrations/text_embedding/) Agents & Toolkits (/docs/integrations/toolkits/) Tools (/docs/integrations/tools/) Vector stores (/docs/integrations/vectorstores/) Grouped by provider (/docs/integrations/providers/)  (/) Integrations (/docs/integrations) Document transformers (/docs/integrations/document_transformers/) Nuclia (https://nuclia.com) https://nuclia.cloud (https://nuclia.cloud) create a NUA key (https://docs.nuclia.dev/docs/docs/using/understanding/intro) NucliaUnderstandingAPI (https://api.python.langchain.com/en/latest/tools/langchain.tools.nuclia.tool.NucliaUnderstandingAPI.html) NucliaTextTransformer (https://api.python.langchain.com/en/latest/document_transformers/langchain.document_transformers.nuclia_text_transform.NucliaTextTransformer.html) Document (https://api.python.langchain.com/en/latest/schema/langchain.schema.document.Document.html) Previoushtml2text (/docs/integrations/document_transformers/html2text) NextOpenAI Functions Metadata Tagger (/docs/integrations/document_transformers/openai_metadata_tagger) Discord (https://discord.gg/cU2adEyC7w) Twitter (https://twitter.com/LangChainAI) Python (https://github.com/hwchase17/langchain) JS/TS (https://github.com/hwchase17/langchainjs) Homepage (https://langchain.com) Blog (https://blog.langchain.dev)