This notebook goes over how to use the Jira toolkit. The Jira toolkit allows agents to interact with a given Jira instance, performing actions such as searching for issues and creating issues, the tool wraps the atlassian-python-api library, for more see: https://atlassian-python-api.readthedocs.io/jira.html To use this tool, you must first set as environment variables: JIRA_API_TOKEN JIRA_USERNAME JIRA_INSTANCE_URL IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsAINetworkAirbyte Question AnsweringAmadeusAzure Cognitive ServicesCSVDocument ComparisonGithubGitlabGmailGoogle Drive toolJiraJSONMultiOnOffice365OpenAPINatural Language APIsPandas DataframePlayWright BrowserPowerBI DatasetPythonSpark DataframeSpark SQLSQL DatabaseVectorstoreXorbitsToolsVector storesGrouped by provider Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & ToolkitsAINetworkAirbyte Question AnsweringAmadeusAzure Cognitive ServicesCSVDocument ComparisonGithubGitlabGmailGoogle Drive toolJiraJSONMultiOnOffice365OpenAPINatural Language APIsPandas DataframePlayWright BrowserPowerBI DatasetPythonSpark DataframeSpark SQLSQL DatabaseVectorstoreXorbits AINetwork Airbyte Question Answering Amadeus Azure Cognitive Services CSV Document Comparison Github Gitlab Gmail Google Drive tool Jira JSON MultiOn Office365 OpenAPI Natural Language APIs Pandas Dataframe PlayWright Browser PowerBI Dataset Python Spark Dataframe Spark SQL SQL Database Vectorstore Xorbits Tools Vector stores Grouped by provider  Integrations Agents & Toolkits Jira AgentType initialize_agent JiraToolkit OpenAI JiraAPIWrapper Discord Twitter Python JS/TS Homepage Blog Skip to main content🦜️🔗 LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLKIntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsAINetworkAirbyte Question AnsweringAmadeusAzure Cognitive ServicesCSVDocument ComparisonGithubGitlabGmailGoogle Drive toolJiraJSONMultiOnOffice365OpenAPINatural Language APIsPandas DataframePlayWright BrowserPowerBI DatasetPythonSpark DataframeSpark SQLSQL DatabaseVectorstoreXorbitsToolsVector storesGrouped by providerIntegrationsAgents & ToolkitsJiraJiraThis notebook goes over how to use the Jira toolkit.The Jira toolkit allows agents to interact with a given Jira instance, performing actions such as searching for issues and creating issues, the tool wraps the atlassian-python-api library, for more see: https://atlassian-python-api.readthedocs.io/jira.htmlTo use this tool, you must first set as environment variables: JIRA_INSTANCE_URL%pip install atlassian-python-apiimport osfrom langchain.agents import AgentTypefrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits.jira.toolkit import JiraToolkitfrom langchain.llms import OpenAIfrom langchain.utilities.jira import JiraAPIWrapperAPI Reference:AgentTypeinitialize_agentJiraToolkitOpenAIJiraAPIWrapperos.environ["JIRA_API_TOKEN"] = "abc"os.environ["JIRA_USERNAME"] = "123"os.environ["JIRA_INSTANCE_URL"] = "https://jira.atlassian.com"os.environ["OPENAI_API_KEY"] = "xyz"llm = OpenAI(temperature=0)jira = JiraAPIWrapper()toolkit = JiraToolkit.from_jira_api_wrapper(jira)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run("make a new issue in project PW to remind me to make more fried rice")            > Entering new AgentExecutor chain...     I need to create an issue in project PW    Action: Create Issue    Action Input: {"summary": "Make more fried rice", "description": "Reminder to make more fried rice", "issuetype": {"name": "Task"}, "priority": {"name": "Low"}, "project": {"key": "PW"}}    Observation: None    Thought: I now know the final answer    Final Answer: A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".        > Finished chain.    'A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".'PreviousGoogle Drive toolNextJSONCommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright © 2023 LangChain, Inc. Skip to main content 🦜️🔗 LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLK 🦜️🔗 LangChainDocsUse casesIntegrationsAPI LangSmithJS/TS DocsCTRLK  CTRLK CTRLK  CTRLK   IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsAINetworkAirbyte Question AnsweringAmadeusAzure Cognitive ServicesCSVDocument ComparisonGithubGitlabGmailGoogle Drive toolJiraJSONMultiOnOffice365OpenAPINatural Language APIsPandas DataframePlayWright BrowserPowerBI DatasetPythonSpark DataframeSpark SQLSQL DatabaseVectorstoreXorbitsToolsVector storesGrouped by providerIntegrationsAgents & ToolkitsJiraJiraThis notebook goes over how to use the Jira toolkit.The Jira toolkit allows agents to interact with a given Jira instance, performing actions such as searching for issues and creating issues, the tool wraps the atlassian-python-api library, for more see: https://atlassian-python-api.readthedocs.io/jira.htmlTo use this tool, you must first set as environment variables: JIRA_INSTANCE_URL%pip install atlassian-python-apiimport osfrom langchain.agents import AgentTypefrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits.jira.toolkit import JiraToolkitfrom langchain.llms import OpenAIfrom langchain.utilities.jira import JiraAPIWrapperAPI Reference:AgentTypeinitialize_agentJiraToolkitOpenAIJiraAPIWrapperos.environ["JIRA_API_TOKEN"] = "abc"os.environ["JIRA_USERNAME"] = "123"os.environ["JIRA_INSTANCE_URL"] = "https://jira.atlassian.com"os.environ["OPENAI_API_KEY"] = "xyz"llm = OpenAI(temperature=0)jira = JiraAPIWrapper()toolkit = JiraToolkit.from_jira_api_wrapper(jira)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run("make a new issue in project PW to remind me to make more fried rice")            > Entering new AgentExecutor chain...     I need to create an issue in project PW    Action: Create Issue    Action Input: {"summary": "Make more fried rice", "description": "Reminder to make more fried rice", "issuetype": {"name": "Task"}, "priority": {"name": "Low"}, "project": {"key": "PW"}}    Observation: None    Thought: I now know the final answer    Final Answer: A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".        > Finished chain.    'A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".'PreviousGoogle Drive toolNextJSON IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsAINetworkAirbyte Question AnsweringAmadeusAzure Cognitive ServicesCSVDocument ComparisonGithubGitlabGmailGoogle Drive toolJiraJSONMultiOnOffice365OpenAPINatural Language APIsPandas DataframePlayWright BrowserPowerBI DatasetPythonSpark DataframeSpark SQLSQL DatabaseVectorstoreXorbitsToolsVector storesGrouped by providerIntegrationsAgents & ToolkitsJiraJiraThis notebook goes over how to use the Jira toolkit.The Jira toolkit allows agents to interact with a given Jira instance, performing actions such as searching for issues and creating issues, the tool wraps the atlassian-python-api library, for more see: https://atlassian-python-api.readthedocs.io/jira.htmlTo use this tool, you must first set as environment variables: JIRA_INSTANCE_URL%pip install atlassian-python-apiimport osfrom langchain.agents import AgentTypefrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits.jira.toolkit import JiraToolkitfrom langchain.llms import OpenAIfrom langchain.utilities.jira import JiraAPIWrapperAPI Reference:AgentTypeinitialize_agentJiraToolkitOpenAIJiraAPIWrapperos.environ["JIRA_API_TOKEN"] = "abc"os.environ["JIRA_USERNAME"] = "123"os.environ["JIRA_INSTANCE_URL"] = "https://jira.atlassian.com"os.environ["OPENAI_API_KEY"] = "xyz"llm = OpenAI(temperature=0)jira = JiraAPIWrapper()toolkit = JiraToolkit.from_jira_api_wrapper(jira)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run("make a new issue in project PW to remind me to make more fried rice")            > Entering new AgentExecutor chain...     I need to create an issue in project PW    Action: Create Issue    Action Input: {"summary": "Make more fried rice", "description": "Reminder to make more fried rice", "issuetype": {"name": "Task"}, "priority": {"name": "Low"}, "project": {"key": "PW"}}    Observation: None    Thought: I now know the final answer    Final Answer: A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".        > Finished chain.    'A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".'PreviousGoogle Drive toolNextJSON IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsAINetworkAirbyte Question AnsweringAmadeusAzure Cognitive ServicesCSVDocument ComparisonGithubGitlabGmailGoogle Drive toolJiraJSONMultiOnOffice365OpenAPINatural Language APIsPandas DataframePlayWright BrowserPowerBI DatasetPythonSpark DataframeSpark SQLSQL DatabaseVectorstoreXorbitsToolsVector storesGrouped by provider IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsAINetworkAirbyte Question AnsweringAmadeusAzure Cognitive ServicesCSVDocument ComparisonGithubGitlabGmailGoogle Drive toolJiraJSONMultiOnOffice365OpenAPINatural Language APIsPandas DataframePlayWright BrowserPowerBI DatasetPythonSpark DataframeSpark SQLSQL DatabaseVectorstoreXorbitsToolsVector storesGrouped by provider Integrations Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by provider IntegrationsAgents & ToolkitsJiraJiraThis notebook goes over how to use the Jira toolkit.The Jira toolkit allows agents to interact with a given Jira instance, performing actions such as searching for issues and creating issues, the tool wraps the atlassian-python-api library, for more see: https://atlassian-python-api.readthedocs.io/jira.htmlTo use this tool, you must first set as environment variables: JIRA_INSTANCE_URL%pip install atlassian-python-apiimport osfrom langchain.agents import AgentTypefrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits.jira.toolkit import JiraToolkitfrom langchain.llms import OpenAIfrom langchain.utilities.jira import JiraAPIWrapperAPI Reference:AgentTypeinitialize_agentJiraToolkitOpenAIJiraAPIWrapperos.environ["JIRA_API_TOKEN"] = "abc"os.environ["JIRA_USERNAME"] = "123"os.environ["JIRA_INSTANCE_URL"] = "https://jira.atlassian.com"os.environ["OPENAI_API_KEY"] = "xyz"llm = OpenAI(temperature=0)jira = JiraAPIWrapper()toolkit = JiraToolkit.from_jira_api_wrapper(jira)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run("make a new issue in project PW to remind me to make more fried rice")            > Entering new AgentExecutor chain...     I need to create an issue in project PW    Action: Create Issue    Action Input: {"summary": "Make more fried rice", "description": "Reminder to make more fried rice", "issuetype": {"name": "Task"}, "priority": {"name": "Low"}, "project": {"key": "PW"}}    Observation: None    Thought: I now know the final answer    Final Answer: A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".        > Finished chain.    'A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".'PreviousGoogle Drive toolNextJSON IntegrationsAgents & ToolkitsJiraJiraThis notebook goes over how to use the Jira toolkit.The Jira toolkit allows agents to interact with a given Jira instance, performing actions such as searching for issues and creating issues, the tool wraps the atlassian-python-api library, for more see: https://atlassian-python-api.readthedocs.io/jira.htmlTo use this tool, you must first set as environment variables: JIRA_INSTANCE_URL%pip install atlassian-python-apiimport osfrom langchain.agents import AgentTypefrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits.jira.toolkit import JiraToolkitfrom langchain.llms import OpenAIfrom langchain.utilities.jira import JiraAPIWrapperAPI Reference:AgentTypeinitialize_agentJiraToolkitOpenAIJiraAPIWrapperos.environ["JIRA_API_TOKEN"] = "abc"os.environ["JIRA_USERNAME"] = "123"os.environ["JIRA_INSTANCE_URL"] = "https://jira.atlassian.com"os.environ["OPENAI_API_KEY"] = "xyz"llm = OpenAI(temperature=0)jira = JiraAPIWrapper()toolkit = JiraToolkit.from_jira_api_wrapper(jira)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run("make a new issue in project PW to remind me to make more fried rice")            > Entering new AgentExecutor chain...     I need to create an issue in project PW    Action: Create Issue    Action Input: {"summary": "Make more fried rice", "description": "Reminder to make more fried rice", "issuetype": {"name": "Task"}, "priority": {"name": "Low"}, "project": {"key": "PW"}}    Observation: None    Thought: I now know the final answer    Final Answer: A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".        > Finished chain.    'A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".'PreviousGoogle Drive toolNextJSON JiraThis notebook goes over how to use the Jira toolkit.The Jira toolkit allows agents to interact with a given Jira instance, performing actions such as searching for issues and creating issues, the tool wraps the atlassian-python-api library, for more see: https://atlassian-python-api.readthedocs.io/jira.htmlTo use this tool, you must first set as environment variables: JIRA_INSTANCE_URL%pip install atlassian-python-apiimport osfrom langchain.agents import AgentTypefrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits.jira.toolkit import JiraToolkitfrom langchain.llms import OpenAIfrom langchain.utilities.jira import JiraAPIWrapperAPI Reference:AgentTypeinitialize_agentJiraToolkitOpenAIJiraAPIWrapperos.environ["JIRA_API_TOKEN"] = "abc"os.environ["JIRA_USERNAME"] = "123"os.environ["JIRA_INSTANCE_URL"] = "https://jira.atlassian.com"os.environ["OPENAI_API_KEY"] = "xyz"llm = OpenAI(temperature=0)jira = JiraAPIWrapper()toolkit = JiraToolkit.from_jira_api_wrapper(jira)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run("make a new issue in project PW to remind me to make more fried rice")            > Entering new AgentExecutor chain...     I need to create an issue in project PW    Action: Create Issue    Action Input: {"summary": "Make more fried rice", "description": "Reminder to make more fried rice", "issuetype": {"name": "Task"}, "priority": {"name": "Low"}, "project": {"key": "PW"}}    Observation: None    Thought: I now know the final answer    Final Answer: A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".        > Finished chain.    'A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".' %pip install atlassian-python-api %pip install atlassian-python-api  import osfrom langchain.agents import AgentTypefrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits.jira.toolkit import JiraToolkitfrom langchain.llms import OpenAIfrom langchain.utilities.jira import JiraAPIWrapper import osfrom langchain.agents import AgentTypefrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits.jira.toolkit import JiraToolkitfrom langchain.llms import OpenAIfrom langchain.utilities.jira import JiraAPIWrapper  API Reference:AgentTypeinitialize_agentJiraToolkitOpenAIJiraAPIWrapper os.environ["JIRA_API_TOKEN"] = "abc"os.environ["JIRA_USERNAME"] = "123"os.environ["JIRA_INSTANCE_URL"] = "https://jira.atlassian.com"os.environ["OPENAI_API_KEY"] = "xyz" os.environ["JIRA_API_TOKEN"] = "abc"os.environ["JIRA_USERNAME"] = "123"os.environ["JIRA_INSTANCE_URL"] = "https://jira.atlassian.com"os.environ["OPENAI_API_KEY"] = "xyz"  llm = OpenAI(temperature=0)jira = JiraAPIWrapper()toolkit = JiraToolkit.from_jira_api_wrapper(jira)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True) llm = OpenAI(temperature=0)jira = JiraAPIWrapper()toolkit = JiraToolkit.from_jira_api_wrapper(jira)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)  agent.run("make a new issue in project PW to remind me to make more fried rice") agent.run("make a new issue in project PW to remind me to make more fried rice")              > Entering new AgentExecutor chain...     I need to create an issue in project PW    Action: Create Issue    Action Input: {"summary": "Make more fried rice", "description": "Reminder to make more fried rice", "issuetype": {"name": "Task"}, "priority": {"name": "Low"}, "project": {"key": "PW"}}    Observation: None    Thought: I now know the final answer    Final Answer: A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".        > Finished chain.    'A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".'             > Entering new AgentExecutor chain...     I need to create an issue in project PW    Action: Create Issue    Action Input: {"summary": "Make more fried rice", "description": "Reminder to make more fried rice", "issuetype": {"name": "Task"}, "priority": {"name": "Low"}, "project": {"key": "PW"}}    Observation: None    Thought: I now know the final answer    Final Answer: A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".        > Finished chain.    'A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".'             > Entering new AgentExecutor chain...     I need to create an issue in project PW    Action: Create Issue    Action Input: {"summary": "Make more fried rice", "description": "Reminder to make more fried rice", "issuetype": {"name": "Task"}, "priority": {"name": "Low"}, "project": {"key": "PW"}}    Observation: None    Thought: I now know the final answer    Final Answer: A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".        > Finished chain.    'A new issue has been created in project PW with the summary "Make more fried rice" and description "Reminder to make more fried rice".'  Previous Google Drive tool Next JSON CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright © 2023 LangChain, Inc. CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlog CommunityDiscordTwitter Community GitHubPythonJS/TS GitHub MoreHomepageBlog More Copyright © 2023 LangChain, Inc. Copyright © 2023 LangChain, Inc. Skip to main content (#docusaurus_skipToContent_fallback) 🦜️🔗 LangChain (/) Docs (/docs/get_started/introduction) Use cases (/docs/use_cases) Integrations (/docs/integrations) API (https://api.python.langchain.com) LangSmith (https://smith.langchain.com) JS/TS Docs (https://js.langchain.com/docs)  (https://github.com/hwchase17/langchain) Integrations (/docs/integrations) Callbacks (/docs/integrations/callbacks/) Chat models (/docs/integrations/chat/) Chat loaders (/docs/integrations/chat_loaders/) Document loaders (/docs/integrations/document_loaders/) Document transformers (/docs/integrations/document_transformers/) LLMs (/docs/integrations/llms/) Memory (/docs/integrations/memory/) Retrievers (/docs/integrations/retrievers/) Text embedding models (/docs/integrations/text_embedding/) Agents & Toolkits (/docs/integrations/toolkits/) AINetwork (/docs/integrations/toolkits/ainetwork) Airbyte Question Answering (/docs/integrations/toolkits/airbyte_structured_qa) Amadeus (/docs/integrations/toolkits/amadeus) Azure Cognitive Services (/docs/integrations/toolkits/azure_cognitive_services) CSV (/docs/integrations/toolkits/csv) Document Comparison (/docs/integrations/toolkits/document_comparison_toolkit) Github (/docs/integrations/toolkits/github) Gitlab (/docs/integrations/toolkits/gitlab) Gmail (/docs/integrations/toolkits/gmail) Google Drive tool (/docs/integrations/toolkits/google_drive) Jira (/docs/integrations/toolkits/jira) JSON (/docs/integrations/toolkits/json) MultiOn (/docs/integrations/toolkits/multion) Office365 (/docs/integrations/toolkits/office365) OpenAPI (/docs/integrations/toolkits/openapi) Natural Language APIs (/docs/integrations/toolkits/openapi_nla) Pandas Dataframe (/docs/integrations/toolkits/pandas) PlayWright Browser (/docs/integrations/toolkits/playwright) PowerBI Dataset (/docs/integrations/toolkits/powerbi) Python (/docs/integrations/toolkits/python) Spark Dataframe (/docs/integrations/toolkits/spark) Spark SQL (/docs/integrations/toolkits/spark_sql) SQL Database (/docs/integrations/toolkits/sql_database) Vectorstore (/docs/integrations/toolkits/vectorstore) Xorbits (/docs/integrations/toolkits/xorbits) Tools (/docs/integrations/tools/) Vector stores (/docs/integrations/vectorstores/) Grouped by provider (/docs/integrations/providers/)  (/) Integrations (/docs/integrations) Agents & Toolkits (/docs/integrations/toolkits/) https://atlassian-python-api.readthedocs.io/jira.html (https://atlassian-python-api.readthedocs.io/jira.html) AgentType (https://api.python.langchain.com/en/latest/agents/langchain.agents.agent_types.AgentType.html) initialize_agent (https://api.python.langchain.com/en/latest/agents/langchain.agents.initialize.initialize_agent.html) JiraToolkit (https://api.python.langchain.com/en/latest/agents/langchain.agents.agent_toolkits.jira.toolkit.JiraToolkit.html) OpenAI (https://api.python.langchain.com/en/latest/llms/langchain.llms.openai.OpenAI.html) JiraAPIWrapper (https://api.python.langchain.com/en/latest/utilities/langchain.utilities.jira.JiraAPIWrapper.html) PreviousGoogle Drive tool (/docs/integrations/toolkits/google_drive) NextJSON (/docs/integrations/toolkits/json) Discord (https://discord.gg/cU2adEyC7w) Twitter (https://twitter.com/LangChainAI) Python (https://github.com/hwchase17/langchain) JS/TS (https://github.com/hwchase17/langchainjs) Homepage (https://langchain.com) Blog (https://blog.langchain.dev)