Apache Cassandra® is a NoSQL, row-oriented, highly scalable and highly available database, well suited for storing large amounts of data. This notebook goes over how to use Dynamodb to store chat message history. In this walkthrough we'll create a simple conversation chain which uses ConversationEntityMemory backed by a SqliteEntityStore. This notebook goes over how to use Momento Cache to store chat message history using the MomentoChatMessageHistory class. See the Momento docs for more detail on how to get set up with Momento. This notebook goes over how to use Mongodb to store chat message history. Motörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications. Motörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications. This notebook goes over how to use Postgres to store chat message history. This notebook goes over how to use Redis to store chat message history. This notebook goes over how to use Rockset to store chat message history. This notebook goes over a SQLChatMessageHistory class that allows to store chat history in any database supported by SQLAlchemy. This notebook goes over how to store and use chat message history in a Streamlit app. StreamlitChatMessageHistory will store messages in Xata is a serverless data platform, based on PostgreSQL and Elasticsearch. It provides a Python SDK for interacting with your database, and a UI for managing your data. With the XataChatMessageHistory class, you can use Xata databases for longer-term persistence of chat sessions. REACT Agent Chat Message History with Zep - A long-term memory store for LLM applications. IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryCassandra Chat Message HistoryDynamodb Chat Message HistoryEntity Memory with SQLite storageMomento Chat Message HistoryMongodb Chat Message HistoryMotörhead MemoryMotörhead Memory (Managed)Postgres Chat Message HistoryRedis Chat Message HistoryRockset Chat Message HistorySQL Chat Message HistoryStreamlit Chat Message HistoryXata chat memoryZep MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by provider Callbacks Chat models Chat loaders Document loaders Document transformers LLMs MemoryCassandra Chat Message HistoryDynamodb Chat Message HistoryEntity Memory with SQLite storageMomento Chat Message HistoryMongodb Chat Message HistoryMotörhead MemoryMotörhead Memory (Managed)Postgres Chat Message HistoryRedis Chat Message HistoryRockset Chat Message HistorySQL Chat Message HistoryStreamlit Chat Message HistoryXata chat memoryZep Memory Cassandra Chat Message History Dynamodb Chat Message History Entity Memory with SQLite storage Momento Chat Message History Mongodb Chat Message History Motörhead Memory Motörhead Memory (Managed) Postgres Chat Message History Redis Chat Message History Rockset Chat Message History SQL Chat Message History Streamlit Chat Message History Xata chat memory Zep Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by provider  Integrations Memory Discord Twitter Python JS/TS Homepage Blog Skip to main content🦜️🔗 LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLKIntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryCassandra Chat Message HistoryDynamodb Chat Message HistoryEntity Memory with SQLite storageMomento Chat Message HistoryMongodb Chat Message HistoryMotörhead MemoryMotörhead Memory (Managed)Postgres Chat Message HistoryRedis Chat Message HistoryRockset Chat Message HistorySQL Chat Message HistoryStreamlit Chat Message HistoryXata chat memoryZep MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerIntegrationsMemoryMemory📄️ Cassandra Chat Message HistoryApache Cassandra® is a NoSQL, row-oriented, highly scalable and highly available database, well suited for storing large amounts of data.📄️ Dynamodb Chat Message HistoryThis notebook goes over how to use Dynamodb to store chat message history.📄️ Entity Memory with SQLite storageIn this walkthrough we'll create a simple conversation chain which uses ConversationEntityMemory backed by a SqliteEntityStore.📄️ Momento Chat Message HistoryThis notebook goes over how to use Momento Cache to store chat message history using the MomentoChatMessageHistory class. See the Momento docs for more detail on how to get set up with Momento.📄️ Mongodb Chat Message HistoryThis notebook goes over how to use Mongodb to store chat message history.📄️ Motörhead MemoryMotörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications.📄️ Motörhead Memory (Managed)Motörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications.📄️ Postgres Chat Message HistoryThis notebook goes over how to use Postgres to store chat message history.📄️ Redis Chat Message HistoryThis notebook goes over how to use Redis to store chat message history.📄️ Rockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history.📄️ SQL Chat Message HistoryThis notebook goes over a SQLChatMessageHistory class that allows to store chat history in any database supported by SQLAlchemy.📄️ Streamlit Chat Message HistoryThis notebook goes over how to store and use chat message history in a Streamlit app. StreamlitChatMessageHistory will store messages in📄️ Xata chat memoryXata is a serverless data platform, based on PostgreSQL and Elasticsearch. It provides a Python SDK for interacting with your database, and a UI for managing your data. With the XataChatMessageHistory class, you can use Xata databases for longer-term persistence of chat sessions.📄️ Zep MemoryREACT Agent Chat Message History with Zep - A long-term memory store for LLM applications.PreviousXorbits Inference (Xinference)NextCassandra Chat Message HistoryCommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright © 2023 LangChain, Inc. Skip to main content 🦜️🔗 LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLK 🦜️🔗 LangChainDocsUse casesIntegrationsAPI LangSmithJS/TS DocsCTRLK  CTRLK CTRLK  CTRLK   IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryCassandra Chat Message HistoryDynamodb Chat Message HistoryEntity Memory with SQLite storageMomento Chat Message HistoryMongodb Chat Message HistoryMotörhead MemoryMotörhead Memory (Managed)Postgres Chat Message HistoryRedis Chat Message HistoryRockset Chat Message HistorySQL Chat Message HistoryStreamlit Chat Message HistoryXata chat memoryZep MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerIntegrationsMemoryMemory📄️ Cassandra Chat Message HistoryApache Cassandra® is a NoSQL, row-oriented, highly scalable and highly available database, well suited for storing large amounts of data.📄️ Dynamodb Chat Message HistoryThis notebook goes over how to use Dynamodb to store chat message history.📄️ Entity Memory with SQLite storageIn this walkthrough we'll create a simple conversation chain which uses ConversationEntityMemory backed by a SqliteEntityStore.📄️ Momento Chat Message HistoryThis notebook goes over how to use Momento Cache to store chat message history using the MomentoChatMessageHistory class. See the Momento docs for more detail on how to get set up with Momento.📄️ Mongodb Chat Message HistoryThis notebook goes over how to use Mongodb to store chat message history.📄️ Motörhead MemoryMotörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications.📄️ Motörhead Memory (Managed)Motörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications.📄️ Postgres Chat Message HistoryThis notebook goes over how to use Postgres to store chat message history.📄️ Redis Chat Message HistoryThis notebook goes over how to use Redis to store chat message history.📄️ Rockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history.📄️ SQL Chat Message HistoryThis notebook goes over a SQLChatMessageHistory class that allows to store chat history in any database supported by SQLAlchemy.📄️ Streamlit Chat Message HistoryThis notebook goes over how to store and use chat message history in a Streamlit app. StreamlitChatMessageHistory will store messages in📄️ Xata chat memoryXata is a serverless data platform, based on PostgreSQL and Elasticsearch. It provides a Python SDK for interacting with your database, and a UI for managing your data. With the XataChatMessageHistory class, you can use Xata databases for longer-term persistence of chat sessions.📄️ Zep MemoryREACT Agent Chat Message History with Zep - A long-term memory store for LLM applications.PreviousXorbits Inference (Xinference)NextCassandra Chat Message History IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryCassandra Chat Message HistoryDynamodb Chat Message HistoryEntity Memory with SQLite storageMomento Chat Message HistoryMongodb Chat Message HistoryMotörhead MemoryMotörhead Memory (Managed)Postgres Chat Message HistoryRedis Chat Message HistoryRockset Chat Message HistorySQL Chat Message HistoryStreamlit Chat Message HistoryXata chat memoryZep MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by providerIntegrationsMemoryMemory📄️ Cassandra Chat Message HistoryApache Cassandra® is a NoSQL, row-oriented, highly scalable and highly available database, well suited for storing large amounts of data.📄️ Dynamodb Chat Message HistoryThis notebook goes over how to use Dynamodb to store chat message history.📄️ Entity Memory with SQLite storageIn this walkthrough we'll create a simple conversation chain which uses ConversationEntityMemory backed by a SqliteEntityStore.📄️ Momento Chat Message HistoryThis notebook goes over how to use Momento Cache to store chat message history using the MomentoChatMessageHistory class. See the Momento docs for more detail on how to get set up with Momento.📄️ Mongodb Chat Message HistoryThis notebook goes over how to use Mongodb to store chat message history.📄️ Motörhead MemoryMotörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications.📄️ Motörhead Memory (Managed)Motörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications.📄️ Postgres Chat Message HistoryThis notebook goes over how to use Postgres to store chat message history.📄️ Redis Chat Message HistoryThis notebook goes over how to use Redis to store chat message history.📄️ Rockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history.📄️ SQL Chat Message HistoryThis notebook goes over a SQLChatMessageHistory class that allows to store chat history in any database supported by SQLAlchemy.📄️ Streamlit Chat Message HistoryThis notebook goes over how to store and use chat message history in a Streamlit app. StreamlitChatMessageHistory will store messages in📄️ Xata chat memoryXata is a serverless data platform, based on PostgreSQL and Elasticsearch. It provides a Python SDK for interacting with your database, and a UI for managing your data. With the XataChatMessageHistory class, you can use Xata databases for longer-term persistence of chat sessions.📄️ Zep MemoryREACT Agent Chat Message History with Zep - A long-term memory store for LLM applications.PreviousXorbits Inference (Xinference)NextCassandra Chat Message History IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryCassandra Chat Message HistoryDynamodb Chat Message HistoryEntity Memory with SQLite storageMomento Chat Message HistoryMongodb Chat Message HistoryMotörhead MemoryMotörhead Memory (Managed)Postgres Chat Message HistoryRedis Chat Message HistoryRockset Chat Message HistorySQL Chat Message HistoryStreamlit Chat Message HistoryXata chat memoryZep MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by provider IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryCassandra Chat Message HistoryDynamodb Chat Message HistoryEntity Memory with SQLite storageMomento Chat Message HistoryMongodb Chat Message HistoryMotörhead MemoryMotörhead Memory (Managed)Postgres Chat Message HistoryRedis Chat Message HistoryRockset Chat Message HistorySQL Chat Message HistoryStreamlit Chat Message HistoryXata chat memoryZep MemoryRetrieversText embedding modelsAgents & ToolkitsToolsVector storesGrouped by provider Integrations Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by provider IntegrationsMemoryMemory📄️ Cassandra Chat Message HistoryApache Cassandra® is a NoSQL, row-oriented, highly scalable and highly available database, well suited for storing large amounts of data.📄️ Dynamodb Chat Message HistoryThis notebook goes over how to use Dynamodb to store chat message history.📄️ Entity Memory with SQLite storageIn this walkthrough we'll create a simple conversation chain which uses ConversationEntityMemory backed by a SqliteEntityStore.📄️ Momento Chat Message HistoryThis notebook goes over how to use Momento Cache to store chat message history using the MomentoChatMessageHistory class. See the Momento docs for more detail on how to get set up with Momento.📄️ Mongodb Chat Message HistoryThis notebook goes over how to use Mongodb to store chat message history.📄️ Motörhead MemoryMotörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications.📄️ Motörhead Memory (Managed)Motörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications.📄️ Postgres Chat Message HistoryThis notebook goes over how to use Postgres to store chat message history.📄️ Redis Chat Message HistoryThis notebook goes over how to use Redis to store chat message history.📄️ Rockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history.📄️ SQL Chat Message HistoryThis notebook goes over a SQLChatMessageHistory class that allows to store chat history in any database supported by SQLAlchemy.📄️ Streamlit Chat Message HistoryThis notebook goes over how to store and use chat message history in a Streamlit app. StreamlitChatMessageHistory will store messages in📄️ Xata chat memoryXata is a serverless data platform, based on PostgreSQL and Elasticsearch. It provides a Python SDK for interacting with your database, and a UI for managing your data. With the XataChatMessageHistory class, you can use Xata databases for longer-term persistence of chat sessions.📄️ Zep MemoryREACT Agent Chat Message History with Zep - A long-term memory store for LLM applications.PreviousXorbits Inference (Xinference)NextCassandra Chat Message History IntegrationsMemoryMemory📄️ Cassandra Chat Message HistoryApache Cassandra® is a NoSQL, row-oriented, highly scalable and highly available database, well suited for storing large amounts of data.📄️ Dynamodb Chat Message HistoryThis notebook goes over how to use Dynamodb to store chat message history.📄️ Entity Memory with SQLite storageIn this walkthrough we'll create a simple conversation chain which uses ConversationEntityMemory backed by a SqliteEntityStore.📄️ Momento Chat Message HistoryThis notebook goes over how to use Momento Cache to store chat message history using the MomentoChatMessageHistory class. See the Momento docs for more detail on how to get set up with Momento.📄️ Mongodb Chat Message HistoryThis notebook goes over how to use Mongodb to store chat message history.📄️ Motörhead MemoryMotörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications.📄️ Motörhead Memory (Managed)Motörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications.📄️ Postgres Chat Message HistoryThis notebook goes over how to use Postgres to store chat message history.📄️ Redis Chat Message HistoryThis notebook goes over how to use Redis to store chat message history.📄️ Rockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history.📄️ SQL Chat Message HistoryThis notebook goes over a SQLChatMessageHistory class that allows to store chat history in any database supported by SQLAlchemy.📄️ Streamlit Chat Message HistoryThis notebook goes over how to store and use chat message history in a Streamlit app. StreamlitChatMessageHistory will store messages in📄️ Xata chat memoryXata is a serverless data platform, based on PostgreSQL and Elasticsearch. It provides a Python SDK for interacting with your database, and a UI for managing your data. With the XataChatMessageHistory class, you can use Xata databases for longer-term persistence of chat sessions.📄️ Zep MemoryREACT Agent Chat Message History with Zep - A long-term memory store for LLM applications.PreviousXorbits Inference (Xinference)NextCassandra Chat Message History IntegrationsMemoryMemory📄️ Cassandra Chat Message HistoryApache Cassandra® is a NoSQL, row-oriented, highly scalable and highly available database, well suited for storing large amounts of data.📄️ Dynamodb Chat Message HistoryThis notebook goes over how to use Dynamodb to store chat message history.📄️ Entity Memory with SQLite storageIn this walkthrough we'll create a simple conversation chain which uses ConversationEntityMemory backed by a SqliteEntityStore.📄️ Momento Chat Message HistoryThis notebook goes over how to use Momento Cache to store chat message history using the MomentoChatMessageHistory class. See the Momento docs for more detail on how to get set up with Momento.📄️ Mongodb Chat Message HistoryThis notebook goes over how to use Mongodb to store chat message history.📄️ Motörhead MemoryMotörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications.📄️ Motörhead Memory (Managed)Motörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications.📄️ Postgres Chat Message HistoryThis notebook goes over how to use Postgres to store chat message history.📄️ Redis Chat Message HistoryThis notebook goes over how to use Redis to store chat message history.📄️ Rockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history.📄️ SQL Chat Message HistoryThis notebook goes over a SQLChatMessageHistory class that allows to store chat history in any database supported by SQLAlchemy.📄️ Streamlit Chat Message HistoryThis notebook goes over how to store and use chat message history in a Streamlit app. StreamlitChatMessageHistory will store messages in📄️ Xata chat memoryXata is a serverless data platform, based on PostgreSQL and Elasticsearch. It provides a Python SDK for interacting with your database, and a UI for managing your data. With the XataChatMessageHistory class, you can use Xata databases for longer-term persistence of chat sessions.📄️ Zep MemoryREACT Agent Chat Message History with Zep - A long-term memory store for LLM applications.PreviousXorbits Inference (Xinference)NextCassandra Chat Message History IntegrationsMemoryMemory📄️ Cassandra Chat Message HistoryApache Cassandra® is a NoSQL, row-oriented, highly scalable and highly available database, well suited for storing large amounts of data.📄️ Dynamodb Chat Message HistoryThis notebook goes over how to use Dynamodb to store chat message history.📄️ Entity Memory with SQLite storageIn this walkthrough we'll create a simple conversation chain which uses ConversationEntityMemory backed by a SqliteEntityStore.📄️ Momento Chat Message HistoryThis notebook goes over how to use Momento Cache to store chat message history using the MomentoChatMessageHistory class. See the Momento docs for more detail on how to get set up with Momento.📄️ Mongodb Chat Message HistoryThis notebook goes over how to use Mongodb to store chat message history.📄️ Motörhead MemoryMotörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications.📄️ Motörhead Memory (Managed)Motörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications.📄️ Postgres Chat Message HistoryThis notebook goes over how to use Postgres to store chat message history.📄️ Redis Chat Message HistoryThis notebook goes over how to use Redis to store chat message history.📄️ Rockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history.📄️ SQL Chat Message HistoryThis notebook goes over a SQLChatMessageHistory class that allows to store chat history in any database supported by SQLAlchemy.📄️ Streamlit Chat Message HistoryThis notebook goes over how to store and use chat message history in a Streamlit app. StreamlitChatMessageHistory will store messages in📄️ Xata chat memoryXata is a serverless data platform, based on PostgreSQL and Elasticsearch. It provides a Python SDK for interacting with your database, and a UI for managing your data. With the XataChatMessageHistory class, you can use Xata databases for longer-term persistence of chat sessions.📄️ Zep MemoryREACT Agent Chat Message History with Zep - A long-term memory store for LLM applications.PreviousXorbits Inference (Xinference)NextCassandra Chat Message History Memory📄️ Cassandra Chat Message HistoryApache Cassandra® is a NoSQL, row-oriented, highly scalable and highly available database, well suited for storing large amounts of data.📄️ Dynamodb Chat Message HistoryThis notebook goes over how to use Dynamodb to store chat message history.📄️ Entity Memory with SQLite storageIn this walkthrough we'll create a simple conversation chain which uses ConversationEntityMemory backed by a SqliteEntityStore.📄️ Momento Chat Message HistoryThis notebook goes over how to use Momento Cache to store chat message history using the MomentoChatMessageHistory class. See the Momento docs for more detail on how to get set up with Momento.📄️ Mongodb Chat Message HistoryThis notebook goes over how to use Mongodb to store chat message history.📄️ Motörhead MemoryMotörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications.📄️ Motörhead Memory (Managed)Motörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications.📄️ Postgres Chat Message HistoryThis notebook goes over how to use Postgres to store chat message history.📄️ Redis Chat Message HistoryThis notebook goes over how to use Redis to store chat message history.📄️ Rockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history.📄️ SQL Chat Message HistoryThis notebook goes over a SQLChatMessageHistory class that allows to store chat history in any database supported by SQLAlchemy.📄️ Streamlit Chat Message HistoryThis notebook goes over how to store and use chat message history in a Streamlit app. StreamlitChatMessageHistory will store messages in📄️ Xata chat memoryXata is a serverless data platform, based on PostgreSQL and Elasticsearch. It provides a Python SDK for interacting with your database, and a UI for managing your data. With the XataChatMessageHistory class, you can use Xata databases for longer-term persistence of chat sessions.📄️ Zep MemoryREACT Agent Chat Message History with Zep - A long-term memory store for LLM applications. Previous Xorbits Inference (Xinference) Next Cassandra Chat Message History CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright © 2023 LangChain, Inc. CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlog CommunityDiscordTwitter Community GitHubPythonJS/TS GitHub MoreHomepageBlog More Copyright © 2023 LangChain, Inc. Copyright © 2023 LangChain, Inc. Skip to main content (#docusaurus_skipToContent_fallback) 🦜️🔗 LangChain (/) Docs (/docs/get_started/introduction) Use cases (/docs/use_cases) Integrations (/docs/integrations) API (https://api.python.langchain.com) LangSmith (https://smith.langchain.com) JS/TS Docs (https://js.langchain.com/docs)  (https://github.com/hwchase17/langchain) Integrations (/docs/integrations) Callbacks (/docs/integrations/callbacks/) Chat models (/docs/integrations/chat/) Chat loaders (/docs/integrations/chat_loaders/) Document loaders (/docs/integrations/document_loaders/) Document transformers (/docs/integrations/document_transformers/) LLMs (/docs/integrations/llms/) Memory (/docs/integrations/memory/) Cassandra Chat Message History (/docs/integrations/memory/cassandra_chat_message_history) Dynamodb Chat Message History (/docs/integrations/memory/dynamodb_chat_message_history) Entity Memory with SQLite storage (/docs/integrations/memory/entity_memory_with_sqlite) Momento Chat Message History (/docs/integrations/memory/momento_chat_message_history) Mongodb Chat Message History (/docs/integrations/memory/mongodb_chat_message_history) Motörhead Memory (/docs/integrations/memory/motorhead_memory) Motörhead Memory (Managed) (/docs/integrations/memory/motorhead_memory_managed) Postgres Chat Message History (/docs/integrations/memory/postgres_chat_message_history) Redis Chat Message History (/docs/integrations/memory/redis_chat_message_history) Rockset Chat Message History (/docs/integrations/memory/rockset_chat_message_history) SQL Chat Message History (/docs/integrations/memory/sql_chat_message_history) Streamlit Chat Message History (/docs/integrations/memory/streamlit_chat_message_history) Xata chat memory (/docs/integrations/memory/xata_chat_message_history) Zep Memory (/docs/integrations/memory/zep_memory) Retrievers (/docs/integrations/retrievers/) Text embedding models (/docs/integrations/text_embedding/) Agents & Toolkits (/docs/integrations/toolkits/) Tools (/docs/integrations/tools/) Vector stores (/docs/integrations/vectorstores/) Grouped by provider (/docs/integrations/providers/)  (/) Integrations (/docs/integrations) 📄️ Cassandra Chat Message HistoryApache Cassandra® is a NoSQL, row-oriented, highly scalable and highly available database, well suited for storing large amounts of data. (/docs/integrations/memory/cassandra_chat_message_history) 📄️ Dynamodb Chat Message HistoryThis notebook goes over how to use Dynamodb to store chat message history. (/docs/integrations/memory/dynamodb_chat_message_history) 📄️ Entity Memory with SQLite storageIn this walkthrough we'll create a simple conversation chain which uses ConversationEntityMemory backed by a SqliteEntityStore. (/docs/integrations/memory/entity_memory_with_sqlite) 📄️ Momento Chat Message HistoryThis notebook goes over how to use Momento Cache to store chat message history using the MomentoChatMessageHistory class. See the Momento docs for more detail on how to get set up with Momento. (/docs/integrations/memory/momento_chat_message_history) 📄️ Mongodb Chat Message HistoryThis notebook goes over how to use Mongodb to store chat message history. (/docs/integrations/memory/mongodb_chat_message_history) 📄️ Motörhead MemoryMotörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications. (/docs/integrations/memory/motorhead_memory) 📄️ Motörhead Memory (Managed)Motörhead is a memory server implemented in Rust. It automatically handles incremental summarization in the background and allows for stateless applications. (/docs/integrations/memory/motorhead_memory_managed) 📄️ Postgres Chat Message HistoryThis notebook goes over how to use Postgres to store chat message history. (/docs/integrations/memory/postgres_chat_message_history) 📄️ Redis Chat Message HistoryThis notebook goes over how to use Redis to store chat message history. (/docs/integrations/memory/redis_chat_message_history) 📄️ Rockset Chat Message HistoryThis notebook goes over how to use Rockset to store chat message history. (/docs/integrations/memory/rockset_chat_message_history) 📄️ SQL Chat Message HistoryThis notebook goes over a SQLChatMessageHistory class that allows to store chat history in any database supported by SQLAlchemy. (/docs/integrations/memory/sql_chat_message_history) 📄️ Streamlit Chat Message HistoryThis notebook goes over how to store and use chat message history in a Streamlit app. StreamlitChatMessageHistory will store messages in (/docs/integrations/memory/streamlit_chat_message_history) 📄️ Xata chat memoryXata is a serverless data platform, based on PostgreSQL and Elasticsearch. It provides a Python SDK for interacting with your database, and a UI for managing your data. With the XataChatMessageHistory class, you can use Xata databases for longer-term persistence of chat sessions. (/docs/integrations/memory/xata_chat_message_history) 📄️ Zep MemoryREACT Agent Chat Message History with Zep - A long-term memory store for LLM applications. (/docs/integrations/memory/zep_memory) PreviousXorbits Inference (Xinference) (/docs/integrations/llms/xinference) NextCassandra Chat Message History (/docs/integrations/memory/cassandra_chat_message_history) Discord (https://discord.gg/cU2adEyC7w) Twitter (https://twitter.com/LangChainAI) Python (https://github.com/hwchase17/langchain) JS/TS (https://github.com/hwchase17/langchainjs) Homepage (https://langchain.com) Blog (https://blog.langchain.dev)