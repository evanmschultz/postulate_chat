Zapier Natural Language Actions gives you access to the 5k+ apps, 20k+ actions on Zapier's platform through a natural language API interface. NLA supports apps like Gmail, Salesforce, Trello, Slack, Asana, HubSpot, Google Sheets, Microsoft Teams, and thousands more apps: https://zapier.com/apps Zapier NLA handles ALL the underlying API auth and translation from natural language --> underlying API call --> return simplified output for LLMs. The key idea is you, or your users, expose a set of actions via an oauth-like setup window, which you can then query and execute via a REST API. NLA offers both API Key and OAuth for signing NLA API requests. Server-side (API Key): for quickly getting started, testing, and production scenarios where LangChain will only use actions exposed in the developer's Zapier account (and will use the developer's connected accounts on Zapier.com) User-facing (Oauth): for production scenarios where you are deploying an end-user facing application and LangChain needs access to end-user's exposed actions and connected accounts on Zapier.com This quick start focus mostly on the server-side use case for brevity. Jump to Example Using OAuth Access Token to see a short example how to set up Zapier for user-facing situations. Review full docs for full user-facing oauth developer support. This example goes over how to use the Zapier integration with a SimpleSequentialChain, then an Agent. In code, below: Zapier tools can be used with an agent. See the example below. If you need more explicit control, use a chain, like below. The below snippet shows how to initialize the wrapper with a procured OAuth access token. Note the argument being passed in as opposed to setting an environment variable. Review the authentication docs for full user-facing oauth developer support. The developer is tasked with handling the OAuth handshaking to procure and refresh the access token. IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by provider Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & Toolkits ToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language Actions Alpha Vantage Apify ArXiv AWS Lambda Shell (bash) Bing Search Brave Search ChatGPT Plugins Dall-E Image Generator DataForSeo DuckDuckGo Search Eden AI File System Golden Query Google Drive Google Places Google Search Google Serper Gradio GraphQL HuggingFace Hub Tools Human as a tool IFTTT WebHooks Lemon Agent Metaphor Search Nuclia Understanding OpenWeatherMap PubMed Requests SceneXplain Search Tools SearxNG Search SerpAPI Twilio Wikipedia Wolfram Alpha Yahoo Finance News YouTube Zapier Natural Language Actions Vector stores Grouped by provider  Integrations Tools Zapier Natural Language Actions Server-side (API Key): for quickly getting started, testing, and production scenarios where LangChain will only use actions exposed in the developer's Zapier account (and will use the developer's connected accounts on Zapier.com) User-facing (Oauth): for production scenarios where you are deploying an end-user facing application and LangChain needs access to end-user's exposed actions and connected accounts on Zapier.com OpenAI initialize_agent ZapierToolkit AgentType ZapierNLAWrapper OpenAI LLMChain TransformChain SimpleSequentialChain PromptTemplate ZapierNLARunAction ZapierNLAWrapper Example with Agent Example with SimpleSequentialChain Example Using OAuth Access Token Discord Twitter Python JS/TS Homepage Blog Skip to main content🦜️🔗 LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLKIntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by providerIntegrationsToolsZapier Natural Language ActionsOn this pageZapier Natural Language ActionsZapier Natural Language Actions gives you access to the 5k+ apps, 20k+ actions on Zapier's platform through a natural language API interface.NLA supports apps like Gmail, Salesforce, Trello, Slack, Asana, HubSpot, Google Sheets, Microsoft Teams, and thousands more apps: https://zapier.com/apps Zapier NLA handles ALL the underlying API auth and translation from natural language --> underlying API call --> return simplified output for LLMs. The key idea is you, or your users, expose a set of actions via an oauth-like setup window, which you can then query and execute via a REST API.NLA offers both API Key and OAuth for signing NLA API requests.Server-side (API Key): for quickly getting started, testing, and production scenarios where LangChain will only use actions exposed in the developer's Zapier account (and will use the developer's connected accounts on Zapier.com)User-facing (Oauth): for production scenarios where you are deploying an end-user facing application and LangChain needs access to end-user's exposed actions and connected accounts on Zapier.comThis quick start focus mostly on the server-side use case for brevity. Jump to Example Using OAuth Access Token to see a short example how to set up Zapier for user-facing situations. Review full docs for full user-facing oauth developer support.This example goes over how to use the Zapier integration with a SimpleSequentialChain, then an Agent. In code, below:import os# get from https://platform.openai.com/os.environ["OPENAI_API_KEY"] = os.environ.get("OPENAI_API_KEY", "")# get from https://nla.zapier.com/docs/authentication/ after logging in):os.environ["ZAPIER_NLA_API_KEY"] = os.environ.get("ZAPIER_NLA_API_KEY", "")Example with Agent​Zapier tools can be used with an agent. See the example below.from langchain.llms import OpenAIfrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits import ZapierToolkitfrom langchain.agents import AgentTypefrom langchain.utilities.zapier import ZapierNLAWrapperAPI Reference:OpenAIinitialize_agentZapierToolkitAgentTypeZapierNLAWrapper## step 0. expose gmail 'find email' and slack 'send channel message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through firstllm = OpenAI(temperature=0)zapier = ZapierNLAWrapper()toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.")            > Entering new AgentExecutor chain...     I need to find the email and summarize it.    Action: Gmail: Find Email    Action Input: Find the latest email from Silicon Valley Bank    Observation: {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}    Thought: I need to summarize the email and send it to the #test-zapier channel in Slack.    Action: Slack: Send Channel Message    Action Input: Send a slack message to the #test-zapier channel with the text "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild."    Observation: {"message__text": "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild.", "message__permalink": "https://langchain.slack.com/archives/C04TSGU0RA7/p1678859932375259", "channel": "C04TSGU0RA7", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:58:52Z", "message__bot_profile__icons__image_36": "https://avatars.slack-edge.com/2022-08-02/3888649620612_f864dc1bb794cf7d82b0_36.png", "message__blocks[]block_id": "kdZZ", "message__blocks[]elements[]type": "['rich_text_section']"}    Thought: I now know the final answer.    Final Answer: I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.        > Finished chain.    'I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.'Example with SimpleSequentialChain​If you need more explicit control, use a chain, like below.from langchain.llms import OpenAIfrom langchain.chains import LLMChain, TransformChain, SimpleSequentialChainfrom langchain.prompts import PromptTemplatefrom langchain.tools.zapier.tool import ZapierNLARunActionfrom langchain.utilities.zapier import ZapierNLAWrapperAPI Reference:OpenAILLMChainTransformChainSimpleSequentialChainPromptTemplateZapierNLARunActionZapierNLAWrapper## step 0. expose gmail 'find email' and slack 'send direct message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through firstactions = ZapierNLAWrapper().list()## step 1. gmail find emailGMAIL_SEARCH_INSTRUCTIONS = "Grab the latest email from Silicon Valley Bank"def nla_gmail(inputs):    action = next(        (a for a in actions if a["description"].startswith("Gmail: Find Email")), None    )    return {        "email_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(inputs["instructions"])    }gmail_chain = TransformChain(    input_variables=["instructions"],    output_variables=["email_data"],    transform=nla_gmail,)## step 2. generate draft replytemplate = """You are an assisstant who drafts replies to an incoming email. Output draft reply in plain text (not JSON).Incoming email:{email_data}Draft email reply:"""prompt_template = PromptTemplate(input_variables=["email_data"], template=template)reply_chain = LLMChain(llm=OpenAI(temperature=0.7), prompt=prompt_template)## step 3. send draft reply via a slack direct messageSLACK_HANDLE = "@Ankush Gola"def nla_slack(inputs):    action = next(        (            a            for a in actions            if a["description"].startswith("Slack: Send Direct Message")        ),        None,    )    instructions = f'Send this to {SLACK_HANDLE} in Slack: {inputs["draft_reply"]}'    return {        "slack_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(instructions)    }slack_chain = TransformChain(    input_variables=["draft_reply"],    output_variables=["slack_data"],    transform=nla_slack,)## finally, executeoverall_chain = SimpleSequentialChain(    chains=[gmail_chain, reply_chain, slack_chain], verbose=True)overall_chain.run(GMAIL_SEARCH_INSTRUCTIONS)            > Entering new SimpleSequentialChain chain...    {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}        Dear Silicon Valley Bridge Bank,         Thank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you.         Best regards,     [Your Name]    {"message__text": "Dear Silicon Valley Bridge Bank, \n\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \n\nBest regards, \n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[['text']]", "message__blocks[]elements[]type": "['rich_text_section']"}        > Finished chain.    '{"message__text": "Dear Silicon Valley Bridge Bank, \\n\\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \\n\\nBest regards, \\n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[[\'text\']]", "message__blocks[]elements[]type": "[\'rich_text_section\']"}'Example Using OAuth Access Token​The below snippet shows how to initialize the wrapper with a procured OAuth access token. Note the argument being passed in as opposed to setting an environment variable. Review the authentication docs for full user-facing oauth developer support.The developer is tasked with handling the OAuth handshaking to procure and refresh the access token.llm = OpenAI(temperature=0)zapier = ZapierNLAWrapper(zapier_nla_oauth_access_token="<fill in access token here>")toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.")PreviousYouTubeNextVector storesExample with AgentExample with SimpleSequentialChainExample Using OAuth Access TokenCommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright © 2023 LangChain, Inc. Skip to main content 🦜️🔗 LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLK 🦜️🔗 LangChainDocsUse casesIntegrationsAPI LangSmithJS/TS DocsCTRLK  CTRLK CTRLK  CTRLK   IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by providerIntegrationsToolsZapier Natural Language ActionsOn this pageZapier Natural Language ActionsZapier Natural Language Actions gives you access to the 5k+ apps, 20k+ actions on Zapier's platform through a natural language API interface.NLA supports apps like Gmail, Salesforce, Trello, Slack, Asana, HubSpot, Google Sheets, Microsoft Teams, and thousands more apps: https://zapier.com/apps In code, below:import os# get from https://platform.openai.com/os.environ["OPENAI_API_KEY"] = os.environ.get("OPENAI_API_KEY", "")# get from https://nla.zapier.com/docs/authentication/ after logging in):os.environ["ZAPIER_NLA_API_KEY"] = os.environ.get("ZAPIER_NLA_API_KEY", "")Example with Agent​Zapier tools can be used with an agent. See the example below.from langchain.llms import OpenAIfrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits import ZapierToolkitfrom langchain.agents import AgentTypefrom langchain.utilities.zapier import ZapierNLAWrapperAPI Reference:OpenAIinitialize_agentZapierToolkitAgentTypeZapierNLAWrapper## step 0. expose gmail 'find email' and slack 'send channel message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through firstllm = OpenAI(temperature=0)zapier = ZapierNLAWrapper()toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.")            > Entering new AgentExecutor chain...     I need to find the email and summarize it.    Action: Gmail: Find Email    Action Input: Find the latest email from Silicon Valley Bank    Observation: {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}    Thought: I need to summarize the email and send it to the #test-zapier channel in Slack.    Action: Slack: Send Channel Message    Action Input: Send a slack message to the #test-zapier channel with the text "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild."    Observation: {"message__text": "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild.", "message__permalink": "https://langchain.slack.com/archives/C04TSGU0RA7/p1678859932375259", "channel": "C04TSGU0RA7", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:58:52Z", "message__bot_profile__icons__image_36": "https://avatars.slack-edge.com/2022-08-02/3888649620612_f864dc1bb794cf7d82b0_36.png", "message__blocks[]block_id": "kdZZ", "message__blocks[]elements[]type": "['rich_text_section']"}    Thought: I now know the final answer.    Final Answer: I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.        > Finished chain.    'I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.'Example with SimpleSequentialChain​If you need more explicit control, use a chain, like below.from langchain.llms import OpenAIfrom langchain.chains import LLMChain, TransformChain, SimpleSequentialChainfrom langchain.prompts import PromptTemplatefrom langchain.tools.zapier.tool import ZapierNLARunActionfrom langchain.utilities.zapier import ZapierNLAWrapperAPI Reference:OpenAILLMChainTransformChainSimpleSequentialChainPromptTemplateZapierNLARunActionZapierNLAWrapper## step 0. expose gmail 'find email' and slack 'send direct message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through firstactions = ZapierNLAWrapper().list()## step 1. gmail find emailGMAIL_SEARCH_INSTRUCTIONS = "Grab the latest email from Silicon Valley Bank"def nla_gmail(inputs):    action = next(        (a for a in actions if a["description"].startswith("Gmail: Find Email")), None    )    return {        "email_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(inputs["instructions"])    }gmail_chain = TransformChain(    input_variables=["instructions"],    output_variables=["email_data"],    transform=nla_gmail,)## step 2. generate draft replytemplate = """You are an assisstant who drafts replies to an incoming email. Output draft reply in plain text (not JSON).Incoming email:{email_data}Draft email reply:"""prompt_template = PromptTemplate(input_variables=["email_data"], template=template)reply_chain = LLMChain(llm=OpenAI(temperature=0.7), prompt=prompt_template)## step 3. send draft reply via a slack direct messageSLACK_HANDLE = "@Ankush Gola"def nla_slack(inputs):    action = next(        (            a            for a in actions            if a["description"].startswith("Slack: Send Direct Message")        ),        None,    )    instructions = f'Send this to {SLACK_HANDLE} in Slack: {inputs["draft_reply"]}'    return {        "slack_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(instructions)    }slack_chain = TransformChain(    input_variables=["draft_reply"],    output_variables=["slack_data"],    transform=nla_slack,)## finally, executeoverall_chain = SimpleSequentialChain(    chains=[gmail_chain, reply_chain, slack_chain], verbose=True)overall_chain.run(GMAIL_SEARCH_INSTRUCTIONS)            > Entering new SimpleSequentialChain chain...    {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}        Dear Silicon Valley Bridge Bank,         Thank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you.         Best regards,     [Your Name]    {"message__text": "Dear Silicon Valley Bridge Bank, \n\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \n\nBest regards, \n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[['text']]", "message__blocks[]elements[]type": "['rich_text_section']"}        > Finished chain.    '{"message__text": "Dear Silicon Valley Bridge Bank, \\n\\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \\n\\nBest regards, \\n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[[\'text\']]", "message__blocks[]elements[]type": "[\'rich_text_section\']"}'Example Using OAuth Access Token​The below snippet shows how to initialize the wrapper with a procured OAuth access token. Note the argument being passed in as opposed to setting an environment variable. Review the authentication docs for full user-facing oauth developer support.The developer is tasked with handling the OAuth handshaking to procure and refresh the access token.llm = OpenAI(temperature=0)zapier = ZapierNLAWrapper(zapier_nla_oauth_access_token="<fill in access token here>")toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.")PreviousYouTubeNextVector storesExample with AgentExample with SimpleSequentialChainExample Using OAuth Access Token IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by providerIntegrationsToolsZapier Natural Language ActionsOn this pageZapier Natural Language ActionsZapier Natural Language Actions gives you access to the 5k+ apps, 20k+ actions on Zapier's platform through a natural language API interface.NLA supports apps like Gmail, Salesforce, Trello, Slack, Asana, HubSpot, Google Sheets, Microsoft Teams, and thousands more apps: https://zapier.com/apps In code, below:import os# get from https://platform.openai.com/os.environ["OPENAI_API_KEY"] = os.environ.get("OPENAI_API_KEY", "")# get from https://nla.zapier.com/docs/authentication/ after logging in):os.environ["ZAPIER_NLA_API_KEY"] = os.environ.get("ZAPIER_NLA_API_KEY", "")Example with Agent​Zapier tools can be used with an agent. See the example below.from langchain.llms import OpenAIfrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits import ZapierToolkitfrom langchain.agents import AgentTypefrom langchain.utilities.zapier import ZapierNLAWrapperAPI Reference:OpenAIinitialize_agentZapierToolkitAgentTypeZapierNLAWrapper## step 0. expose gmail 'find email' and slack 'send channel message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through firstllm = OpenAI(temperature=0)zapier = ZapierNLAWrapper()toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.")            > Entering new AgentExecutor chain...     I need to find the email and summarize it.    Action: Gmail: Find Email    Action Input: Find the latest email from Silicon Valley Bank    Observation: {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}    Thought: I need to summarize the email and send it to the #test-zapier channel in Slack.    Action: Slack: Send Channel Message    Action Input: Send a slack message to the #test-zapier channel with the text "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild."    Observation: {"message__text": "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild.", "message__permalink": "https://langchain.slack.com/archives/C04TSGU0RA7/p1678859932375259", "channel": "C04TSGU0RA7", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:58:52Z", "message__bot_profile__icons__image_36": "https://avatars.slack-edge.com/2022-08-02/3888649620612_f864dc1bb794cf7d82b0_36.png", "message__blocks[]block_id": "kdZZ", "message__blocks[]elements[]type": "['rich_text_section']"}    Thought: I now know the final answer.    Final Answer: I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.        > Finished chain.    'I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.'Example with SimpleSequentialChain​If you need more explicit control, use a chain, like below.from langchain.llms import OpenAIfrom langchain.chains import LLMChain, TransformChain, SimpleSequentialChainfrom langchain.prompts import PromptTemplatefrom langchain.tools.zapier.tool import ZapierNLARunActionfrom langchain.utilities.zapier import ZapierNLAWrapperAPI Reference:OpenAILLMChainTransformChainSimpleSequentialChainPromptTemplateZapierNLARunActionZapierNLAWrapper## step 0. expose gmail 'find email' and slack 'send direct message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through firstactions = ZapierNLAWrapper().list()## step 1. gmail find emailGMAIL_SEARCH_INSTRUCTIONS = "Grab the latest email from Silicon Valley Bank"def nla_gmail(inputs):    action = next(        (a for a in actions if a["description"].startswith("Gmail: Find Email")), None    )    return {        "email_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(inputs["instructions"])    }gmail_chain = TransformChain(    input_variables=["instructions"],    output_variables=["email_data"],    transform=nla_gmail,)## step 2. generate draft replytemplate = """You are an assisstant who drafts replies to an incoming email. Output draft reply in plain text (not JSON).Incoming email:{email_data}Draft email reply:"""prompt_template = PromptTemplate(input_variables=["email_data"], template=template)reply_chain = LLMChain(llm=OpenAI(temperature=0.7), prompt=prompt_template)## step 3. send draft reply via a slack direct messageSLACK_HANDLE = "@Ankush Gola"def nla_slack(inputs):    action = next(        (            a            for a in actions            if a["description"].startswith("Slack: Send Direct Message")        ),        None,    )    instructions = f'Send this to {SLACK_HANDLE} in Slack: {inputs["draft_reply"]}'    return {        "slack_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(instructions)    }slack_chain = TransformChain(    input_variables=["draft_reply"],    output_variables=["slack_data"],    transform=nla_slack,)## finally, executeoverall_chain = SimpleSequentialChain(    chains=[gmail_chain, reply_chain, slack_chain], verbose=True)overall_chain.run(GMAIL_SEARCH_INSTRUCTIONS)            > Entering new SimpleSequentialChain chain...    {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}        Dear Silicon Valley Bridge Bank,         Thank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you.         Best regards,     [Your Name]    {"message__text": "Dear Silicon Valley Bridge Bank, \n\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \n\nBest regards, \n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[['text']]", "message__blocks[]elements[]type": "['rich_text_section']"}        > Finished chain.    '{"message__text": "Dear Silicon Valley Bridge Bank, \\n\\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \\n\\nBest regards, \\n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[[\'text\']]", "message__blocks[]elements[]type": "[\'rich_text_section\']"}'Example Using OAuth Access Token​The below snippet shows how to initialize the wrapper with a procured OAuth access token. Note the argument being passed in as opposed to setting an environment variable. Review the authentication docs for full user-facing oauth developer support.The developer is tasked with handling the OAuth handshaking to procure and refresh the access token.llm = OpenAI(temperature=0)zapier = ZapierNLAWrapper(zapier_nla_oauth_access_token="<fill in access token here>")toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.")PreviousYouTubeNextVector storesExample with AgentExample with SimpleSequentialChainExample Using OAuth Access Token IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by provider IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsToolsAlpha VantageApifyArXivAWS LambdaShell (bash)Bing SearchBrave SearchChatGPT PluginsDall-E Image GeneratorDataForSeoDuckDuckGo SearchEden AIFile SystemGolden QueryGoogle DriveGoogle PlacesGoogle SearchGoogle SerperGradioGraphQLHuggingFace Hub ToolsHuman as a toolIFTTT WebHooksLemon AgentMetaphor SearchNuclia UnderstandingOpenWeatherMapPubMedRequestsSceneXplainSearch ToolsSearxNG SearchSerpAPITwilioWikipediaWolfram AlphaYahoo Finance NewsYouTubeZapier Natural Language ActionsVector storesGrouped by provider Integrations Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by provider IntegrationsToolsZapier Natural Language ActionsOn this pageZapier Natural Language ActionsZapier Natural Language Actions gives you access to the 5k+ apps, 20k+ actions on Zapier's platform through a natural language API interface.NLA supports apps like Gmail, Salesforce, Trello, Slack, Asana, HubSpot, Google Sheets, Microsoft Teams, and thousands more apps: https://zapier.com/apps In code, below:import os# get from https://platform.openai.com/os.environ["OPENAI_API_KEY"] = os.environ.get("OPENAI_API_KEY", "")# get from https://nla.zapier.com/docs/authentication/ after logging in):os.environ["ZAPIER_NLA_API_KEY"] = os.environ.get("ZAPIER_NLA_API_KEY", "")Example with Agent​Zapier tools can be used with an agent. See the example below.from langchain.llms import OpenAIfrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits import ZapierToolkitfrom langchain.agents import AgentTypefrom langchain.utilities.zapier import ZapierNLAWrapperAPI Reference:OpenAIinitialize_agentZapierToolkitAgentTypeZapierNLAWrapper## step 0. expose gmail 'find email' and slack 'send channel message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through firstllm = OpenAI(temperature=0)zapier = ZapierNLAWrapper()toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.")            > Entering new AgentExecutor chain...     I need to find the email and summarize it.    Action: Gmail: Find Email    Action Input: Find the latest email from Silicon Valley Bank    Observation: {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}    Thought: I need to summarize the email and send it to the #test-zapier channel in Slack.    Action: Slack: Send Channel Message    Action Input: Send a slack message to the #test-zapier channel with the text "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild."    Observation: {"message__text": "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild.", "message__permalink": "https://langchain.slack.com/archives/C04TSGU0RA7/p1678859932375259", "channel": "C04TSGU0RA7", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:58:52Z", "message__bot_profile__icons__image_36": "https://avatars.slack-edge.com/2022-08-02/3888649620612_f864dc1bb794cf7d82b0_36.png", "message__blocks[]block_id": "kdZZ", "message__blocks[]elements[]type": "['rich_text_section']"}    Thought: I now know the final answer.    Final Answer: I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.        > Finished chain.    'I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.'Example with SimpleSequentialChain​If you need more explicit control, use a chain, like below.from langchain.llms import OpenAIfrom langchain.chains import LLMChain, TransformChain, SimpleSequentialChainfrom langchain.prompts import PromptTemplatefrom langchain.tools.zapier.tool import ZapierNLARunActionfrom langchain.utilities.zapier import ZapierNLAWrapperAPI Reference:OpenAILLMChainTransformChainSimpleSequentialChainPromptTemplateZapierNLARunActionZapierNLAWrapper## step 0. expose gmail 'find email' and slack 'send direct message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through firstactions = ZapierNLAWrapper().list()## step 1. gmail find emailGMAIL_SEARCH_INSTRUCTIONS = "Grab the latest email from Silicon Valley Bank"def nla_gmail(inputs):    action = next(        (a for a in actions if a["description"].startswith("Gmail: Find Email")), None    )    return {        "email_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(inputs["instructions"])    }gmail_chain = TransformChain(    input_variables=["instructions"],    output_variables=["email_data"],    transform=nla_gmail,)## step 2. generate draft replytemplate = """You are an assisstant who drafts replies to an incoming email. Output draft reply in plain text (not JSON).Incoming email:{email_data}Draft email reply:"""prompt_template = PromptTemplate(input_variables=["email_data"], template=template)reply_chain = LLMChain(llm=OpenAI(temperature=0.7), prompt=prompt_template)## step 3. send draft reply via a slack direct messageSLACK_HANDLE = "@Ankush Gola"def nla_slack(inputs):    action = next(        (            a            for a in actions            if a["description"].startswith("Slack: Send Direct Message")        ),        None,    )    instructions = f'Send this to {SLACK_HANDLE} in Slack: {inputs["draft_reply"]}'    return {        "slack_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(instructions)    }slack_chain = TransformChain(    input_variables=["draft_reply"],    output_variables=["slack_data"],    transform=nla_slack,)## finally, executeoverall_chain = SimpleSequentialChain(    chains=[gmail_chain, reply_chain, slack_chain], verbose=True)overall_chain.run(GMAIL_SEARCH_INSTRUCTIONS)            > Entering new SimpleSequentialChain chain...    {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}        Dear Silicon Valley Bridge Bank,         Thank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you.         Best regards,     [Your Name]    {"message__text": "Dear Silicon Valley Bridge Bank, \n\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \n\nBest regards, \n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[['text']]", "message__blocks[]elements[]type": "['rich_text_section']"}        > Finished chain.    '{"message__text": "Dear Silicon Valley Bridge Bank, \\n\\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \\n\\nBest regards, \\n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[[\'text\']]", "message__blocks[]elements[]type": "[\'rich_text_section\']"}'Example Using OAuth Access Token​The below snippet shows how to initialize the wrapper with a procured OAuth access token. Note the argument being passed in as opposed to setting an environment variable. Review the authentication docs for full user-facing oauth developer support.The developer is tasked with handling the OAuth handshaking to procure and refresh the access token.llm = OpenAI(temperature=0)zapier = ZapierNLAWrapper(zapier_nla_oauth_access_token="<fill in access token here>")toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.")PreviousYouTubeNextVector storesExample with AgentExample with SimpleSequentialChainExample Using OAuth Access Token IntegrationsToolsZapier Natural Language ActionsOn this pageZapier Natural Language ActionsZapier Natural Language Actions gives you access to the 5k+ apps, 20k+ actions on Zapier's platform through a natural language API interface.NLA supports apps like Gmail, Salesforce, Trello, Slack, Asana, HubSpot, Google Sheets, Microsoft Teams, and thousands more apps: https://zapier.com/apps In code, below:import os# get from https://platform.openai.com/os.environ["OPENAI_API_KEY"] = os.environ.get("OPENAI_API_KEY", "")# get from https://nla.zapier.com/docs/authentication/ after logging in):os.environ["ZAPIER_NLA_API_KEY"] = os.environ.get("ZAPIER_NLA_API_KEY", "")Example with Agent​Zapier tools can be used with an agent. See the example below.from langchain.llms import OpenAIfrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits import ZapierToolkitfrom langchain.agents import AgentTypefrom langchain.utilities.zapier import ZapierNLAWrapperAPI Reference:OpenAIinitialize_agentZapierToolkitAgentTypeZapierNLAWrapper## step 0. expose gmail 'find email' and slack 'send channel message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through firstllm = OpenAI(temperature=0)zapier = ZapierNLAWrapper()toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.")            > Entering new AgentExecutor chain...     I need to find the email and summarize it.    Action: Gmail: Find Email    Action Input: Find the latest email from Silicon Valley Bank    Observation: {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}    Thought: I need to summarize the email and send it to the #test-zapier channel in Slack.    Action: Slack: Send Channel Message    Action Input: Send a slack message to the #test-zapier channel with the text "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild."    Observation: {"message__text": "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild.", "message__permalink": "https://langchain.slack.com/archives/C04TSGU0RA7/p1678859932375259", "channel": "C04TSGU0RA7", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:58:52Z", "message__bot_profile__icons__image_36": "https://avatars.slack-edge.com/2022-08-02/3888649620612_f864dc1bb794cf7d82b0_36.png", "message__blocks[]block_id": "kdZZ", "message__blocks[]elements[]type": "['rich_text_section']"}    Thought: I now know the final answer.    Final Answer: I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.        > Finished chain.    'I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.'Example with SimpleSequentialChain​If you need more explicit control, use a chain, like below.from langchain.llms import OpenAIfrom langchain.chains import LLMChain, TransformChain, SimpleSequentialChainfrom langchain.prompts import PromptTemplatefrom langchain.tools.zapier.tool import ZapierNLARunActionfrom langchain.utilities.zapier import ZapierNLAWrapperAPI Reference:OpenAILLMChainTransformChainSimpleSequentialChainPromptTemplateZapierNLARunActionZapierNLAWrapper## step 0. expose gmail 'find email' and slack 'send direct message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through firstactions = ZapierNLAWrapper().list()## step 1. gmail find emailGMAIL_SEARCH_INSTRUCTIONS = "Grab the latest email from Silicon Valley Bank"def nla_gmail(inputs):    action = next(        (a for a in actions if a["description"].startswith("Gmail: Find Email")), None    )    return {        "email_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(inputs["instructions"])    }gmail_chain = TransformChain(    input_variables=["instructions"],    output_variables=["email_data"],    transform=nla_gmail,)## step 2. generate draft replytemplate = """You are an assisstant who drafts replies to an incoming email. Output draft reply in plain text (not JSON).Incoming email:{email_data}Draft email reply:"""prompt_template = PromptTemplate(input_variables=["email_data"], template=template)reply_chain = LLMChain(llm=OpenAI(temperature=0.7), prompt=prompt_template)## step 3. send draft reply via a slack direct messageSLACK_HANDLE = "@Ankush Gola"def nla_slack(inputs):    action = next(        (            a            for a in actions            if a["description"].startswith("Slack: Send Direct Message")        ),        None,    )    instructions = f'Send this to {SLACK_HANDLE} in Slack: {inputs["draft_reply"]}'    return {        "slack_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(instructions)    }slack_chain = TransformChain(    input_variables=["draft_reply"],    output_variables=["slack_data"],    transform=nla_slack,)## finally, executeoverall_chain = SimpleSequentialChain(    chains=[gmail_chain, reply_chain, slack_chain], verbose=True)overall_chain.run(GMAIL_SEARCH_INSTRUCTIONS)            > Entering new SimpleSequentialChain chain...    {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}        Dear Silicon Valley Bridge Bank,         Thank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you.         Best regards,     [Your Name]    {"message__text": "Dear Silicon Valley Bridge Bank, \n\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \n\nBest regards, \n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[['text']]", "message__blocks[]elements[]type": "['rich_text_section']"}        > Finished chain.    '{"message__text": "Dear Silicon Valley Bridge Bank, \\n\\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \\n\\nBest regards, \\n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[[\'text\']]", "message__blocks[]elements[]type": "[\'rich_text_section\']"}'Example Using OAuth Access Token​The below snippet shows how to initialize the wrapper with a procured OAuth access token. Note the argument being passed in as opposed to setting an environment variable. Review the authentication docs for full user-facing oauth developer support.The developer is tasked with handling the OAuth handshaking to procure and refresh the access token.llm = OpenAI(temperature=0)zapier = ZapierNLAWrapper(zapier_nla_oauth_access_token="<fill in access token here>")toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.")PreviousYouTubeNextVector stores IntegrationsToolsZapier Natural Language ActionsOn this pageZapier Natural Language ActionsZapier Natural Language Actions gives you access to the 5k+ apps, 20k+ actions on Zapier's platform through a natural language API interface.NLA supports apps like Gmail, Salesforce, Trello, Slack, Asana, HubSpot, Google Sheets, Microsoft Teams, and thousands more apps: https://zapier.com/apps In code, below:import os# get from https://platform.openai.com/os.environ["OPENAI_API_KEY"] = os.environ.get("OPENAI_API_KEY", "")# get from https://nla.zapier.com/docs/authentication/ after logging in):os.environ["ZAPIER_NLA_API_KEY"] = os.environ.get("ZAPIER_NLA_API_KEY", "")Example with Agent​Zapier tools can be used with an agent. See the example below.from langchain.llms import OpenAIfrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits import ZapierToolkitfrom langchain.agents import AgentTypefrom langchain.utilities.zapier import ZapierNLAWrapperAPI Reference:OpenAIinitialize_agentZapierToolkitAgentTypeZapierNLAWrapper## step 0. expose gmail 'find email' and slack 'send channel message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through firstllm = OpenAI(temperature=0)zapier = ZapierNLAWrapper()toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.")            > Entering new AgentExecutor chain...     I need to find the email and summarize it.    Action: Gmail: Find Email    Action Input: Find the latest email from Silicon Valley Bank    Observation: {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}    Thought: I need to summarize the email and send it to the #test-zapier channel in Slack.    Action: Slack: Send Channel Message    Action Input: Send a slack message to the #test-zapier channel with the text "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild."    Observation: {"message__text": "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild.", "message__permalink": "https://langchain.slack.com/archives/C04TSGU0RA7/p1678859932375259", "channel": "C04TSGU0RA7", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:58:52Z", "message__bot_profile__icons__image_36": "https://avatars.slack-edge.com/2022-08-02/3888649620612_f864dc1bb794cf7d82b0_36.png", "message__blocks[]block_id": "kdZZ", "message__blocks[]elements[]type": "['rich_text_section']"}    Thought: I now know the final answer.    Final Answer: I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.        > Finished chain.    'I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.'Example with SimpleSequentialChain​If you need more explicit control, use a chain, like below.from langchain.llms import OpenAIfrom langchain.chains import LLMChain, TransformChain, SimpleSequentialChainfrom langchain.prompts import PromptTemplatefrom langchain.tools.zapier.tool import ZapierNLARunActionfrom langchain.utilities.zapier import ZapierNLAWrapperAPI Reference:OpenAILLMChainTransformChainSimpleSequentialChainPromptTemplateZapierNLARunActionZapierNLAWrapper## step 0. expose gmail 'find email' and slack 'send direct message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through firstactions = ZapierNLAWrapper().list()## step 1. gmail find emailGMAIL_SEARCH_INSTRUCTIONS = "Grab the latest email from Silicon Valley Bank"def nla_gmail(inputs):    action = next(        (a for a in actions if a["description"].startswith("Gmail: Find Email")), None    )    return {        "email_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(inputs["instructions"])    }gmail_chain = TransformChain(    input_variables=["instructions"],    output_variables=["email_data"],    transform=nla_gmail,)## step 2. generate draft replytemplate = """You are an assisstant who drafts replies to an incoming email. Output draft reply in plain text (not JSON).Incoming email:{email_data}Draft email reply:"""prompt_template = PromptTemplate(input_variables=["email_data"], template=template)reply_chain = LLMChain(llm=OpenAI(temperature=0.7), prompt=prompt_template)## step 3. send draft reply via a slack direct messageSLACK_HANDLE = "@Ankush Gola"def nla_slack(inputs):    action = next(        (            a            for a in actions            if a["description"].startswith("Slack: Send Direct Message")        ),        None,    )    instructions = f'Send this to {SLACK_HANDLE} in Slack: {inputs["draft_reply"]}'    return {        "slack_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(instructions)    }slack_chain = TransformChain(    input_variables=["draft_reply"],    output_variables=["slack_data"],    transform=nla_slack,)## finally, executeoverall_chain = SimpleSequentialChain(    chains=[gmail_chain, reply_chain, slack_chain], verbose=True)overall_chain.run(GMAIL_SEARCH_INSTRUCTIONS)            > Entering new SimpleSequentialChain chain...    {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}        Dear Silicon Valley Bridge Bank,         Thank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you.         Best regards,     [Your Name]    {"message__text": "Dear Silicon Valley Bridge Bank, \n\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \n\nBest regards, \n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[['text']]", "message__blocks[]elements[]type": "['rich_text_section']"}        > Finished chain.    '{"message__text": "Dear Silicon Valley Bridge Bank, \\n\\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \\n\\nBest regards, \\n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[[\'text\']]", "message__blocks[]elements[]type": "[\'rich_text_section\']"}'Example Using OAuth Access Token​The below snippet shows how to initialize the wrapper with a procured OAuth access token. Note the argument being passed in as opposed to setting an environment variable. Review the authentication docs for full user-facing oauth developer support.The developer is tasked with handling the OAuth handshaking to procure and refresh the access token.llm = OpenAI(temperature=0)zapier = ZapierNLAWrapper(zapier_nla_oauth_access_token="<fill in access token here>")toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.")PreviousYouTubeNextVector stores On this page Zapier Natural Language ActionsZapier Natural Language Actions gives you access to the 5k+ apps, 20k+ actions on Zapier's platform through a natural language API interface.NLA supports apps like Gmail, Salesforce, Trello, Slack, Asana, HubSpot, Google Sheets, Microsoft Teams, and thousands more apps: https://zapier.com/apps In code, below:import os# get from https://platform.openai.com/os.environ["OPENAI_API_KEY"] = os.environ.get("OPENAI_API_KEY", "")# get from https://nla.zapier.com/docs/authentication/ after logging in):os.environ["ZAPIER_NLA_API_KEY"] = os.environ.get("ZAPIER_NLA_API_KEY", "")Example with Agent​Zapier tools can be used with an agent. See the example below.from langchain.llms import OpenAIfrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits import ZapierToolkitfrom langchain.agents import AgentTypefrom langchain.utilities.zapier import ZapierNLAWrapperAPI Reference:OpenAIinitialize_agentZapierToolkitAgentTypeZapierNLAWrapper## step 0. expose gmail 'find email' and slack 'send channel message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through firstllm = OpenAI(temperature=0)zapier = ZapierNLAWrapper()toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.")            > Entering new AgentExecutor chain...     I need to find the email and summarize it.    Action: Gmail: Find Email    Action Input: Find the latest email from Silicon Valley Bank    Observation: {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}    Thought: I need to summarize the email and send it to the #test-zapier channel in Slack.    Action: Slack: Send Channel Message    Action Input: Send a slack message to the #test-zapier channel with the text "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild."    Observation: {"message__text": "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild.", "message__permalink": "https://langchain.slack.com/archives/C04TSGU0RA7/p1678859932375259", "channel": "C04TSGU0RA7", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:58:52Z", "message__bot_profile__icons__image_36": "https://avatars.slack-edge.com/2022-08-02/3888649620612_f864dc1bb794cf7d82b0_36.png", "message__blocks[]block_id": "kdZZ", "message__blocks[]elements[]type": "['rich_text_section']"}    Thought: I now know the final answer.    Final Answer: I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.        > Finished chain.    'I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.'Example with SimpleSequentialChain​If you need more explicit control, use a chain, like below.from langchain.llms import OpenAIfrom langchain.chains import LLMChain, TransformChain, SimpleSequentialChainfrom langchain.prompts import PromptTemplatefrom langchain.tools.zapier.tool import ZapierNLARunActionfrom langchain.utilities.zapier import ZapierNLAWrapperAPI Reference:OpenAILLMChainTransformChainSimpleSequentialChainPromptTemplateZapierNLARunActionZapierNLAWrapper## step 0. expose gmail 'find email' and slack 'send direct message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through firstactions = ZapierNLAWrapper().list()## step 1. gmail find emailGMAIL_SEARCH_INSTRUCTIONS = "Grab the latest email from Silicon Valley Bank"def nla_gmail(inputs):    action = next(        (a for a in actions if a["description"].startswith("Gmail: Find Email")), None    )    return {        "email_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(inputs["instructions"])    }gmail_chain = TransformChain(    input_variables=["instructions"],    output_variables=["email_data"],    transform=nla_gmail,)## step 2. generate draft replytemplate = """You are an assisstant who drafts replies to an incoming email. Output draft reply in plain text (not JSON).Incoming email:{email_data}Draft email reply:"""prompt_template = PromptTemplate(input_variables=["email_data"], template=template)reply_chain = LLMChain(llm=OpenAI(temperature=0.7), prompt=prompt_template)## step 3. send draft reply via a slack direct messageSLACK_HANDLE = "@Ankush Gola"def nla_slack(inputs):    action = next(        (            a            for a in actions            if a["description"].startswith("Slack: Send Direct Message")        ),        None,    )    instructions = f'Send this to {SLACK_HANDLE} in Slack: {inputs["draft_reply"]}'    return {        "slack_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(instructions)    }slack_chain = TransformChain(    input_variables=["draft_reply"],    output_variables=["slack_data"],    transform=nla_slack,)## finally, executeoverall_chain = SimpleSequentialChain(    chains=[gmail_chain, reply_chain, slack_chain], verbose=True)overall_chain.run(GMAIL_SEARCH_INSTRUCTIONS)            > Entering new SimpleSequentialChain chain...    {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}        Dear Silicon Valley Bridge Bank,         Thank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you.         Best regards,     [Your Name]    {"message__text": "Dear Silicon Valley Bridge Bank, \n\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \n\nBest regards, \n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[['text']]", "message__blocks[]elements[]type": "['rich_text_section']"}        > Finished chain.    '{"message__text": "Dear Silicon Valley Bridge Bank, \\n\\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \\n\\nBest regards, \\n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[[\'text\']]", "message__blocks[]elements[]type": "[\'rich_text_section\']"}'Example Using OAuth Access Token​The below snippet shows how to initialize the wrapper with a procured OAuth access token. Note the argument being passed in as opposed to setting an environment variable. Review the authentication docs for full user-facing oauth developer support.The developer is tasked with handling the OAuth handshaking to procure and refresh the access token.llm = OpenAI(temperature=0)zapier = ZapierNLAWrapper(zapier_nla_oauth_access_token="<fill in access token here>")toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.") import os# get from https://platform.openai.com/os.environ["OPENAI_API_KEY"] = os.environ.get("OPENAI_API_KEY", "")# get from https://nla.zapier.com/docs/authentication/ after logging in):os.environ["ZAPIER_NLA_API_KEY"] = os.environ.get("ZAPIER_NLA_API_KEY", "") import os# get from https://platform.openai.com/os.environ["OPENAI_API_KEY"] = os.environ.get("OPENAI_API_KEY", "")# get from https://nla.zapier.com/docs/authentication/ after logging in):os.environ["ZAPIER_NLA_API_KEY"] = os.environ.get("ZAPIER_NLA_API_KEY", "")  from langchain.llms import OpenAIfrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits import ZapierToolkitfrom langchain.agents import AgentTypefrom langchain.utilities.zapier import ZapierNLAWrapper from langchain.llms import OpenAIfrom langchain.agents import initialize_agentfrom langchain.agents.agent_toolkits import ZapierToolkitfrom langchain.agents import AgentTypefrom langchain.utilities.zapier import ZapierNLAWrapper  API Reference:OpenAIinitialize_agentZapierToolkitAgentTypeZapierNLAWrapper ## step 0. expose gmail 'find email' and slack 'send channel message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through first ## step 0. expose gmail 'find email' and slack 'send channel message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through first  llm = OpenAI(temperature=0)zapier = ZapierNLAWrapper()toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True) llm = OpenAI(temperature=0)zapier = ZapierNLAWrapper()toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)  agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.") agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.")              > Entering new AgentExecutor chain...     I need to find the email and summarize it.    Action: Gmail: Find Email    Action Input: Find the latest email from Silicon Valley Bank    Observation: {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}    Thought: I need to summarize the email and send it to the #test-zapier channel in Slack.    Action: Slack: Send Channel Message    Action Input: Send a slack message to the #test-zapier channel with the text "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild."    Observation: {"message__text": "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild.", "message__permalink": "https://langchain.slack.com/archives/C04TSGU0RA7/p1678859932375259", "channel": "C04TSGU0RA7", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:58:52Z", "message__bot_profile__icons__image_36": "https://avatars.slack-edge.com/2022-08-02/3888649620612_f864dc1bb794cf7d82b0_36.png", "message__blocks[]block_id": "kdZZ", "message__blocks[]elements[]type": "['rich_text_section']"}    Thought: I now know the final answer.    Final Answer: I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.        > Finished chain.    'I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.'             > Entering new AgentExecutor chain...     I need to find the email and summarize it.    Action: Gmail: Find Email    Action Input: Find the latest email from Silicon Valley Bank    Observation: {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}    Thought: I need to summarize the email and send it to the #test-zapier channel in Slack.    Action: Slack: Send Channel Message    Action Input: Send a slack message to the #test-zapier channel with the text "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild."    Observation: {"message__text": "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild.", "message__permalink": "https://langchain.slack.com/archives/C04TSGU0RA7/p1678859932375259", "channel": "C04TSGU0RA7", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:58:52Z", "message__bot_profile__icons__image_36": "https://avatars.slack-edge.com/2022-08-02/3888649620612_f864dc1bb794cf7d82b0_36.png", "message__blocks[]block_id": "kdZZ", "message__blocks[]elements[]type": "['rich_text_section']"}    Thought: I now know the final answer.    Final Answer: I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.        > Finished chain.    'I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.'             > Entering new AgentExecutor chain...     I need to find the email and summarize it.    Action: Gmail: Find Email    Action Input: Find the latest email from Silicon Valley Bank    Observation: {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}    Thought: I need to summarize the email and send it to the #test-zapier channel in Slack.    Action: Slack: Send Channel Message    Action Input: Send a slack message to the #test-zapier channel with the text "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild."    Observation: {"message__text": "Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild.", "message__permalink": "https://langchain.slack.com/archives/C04TSGU0RA7/p1678859932375259", "channel": "C04TSGU0RA7", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:58:52Z", "message__bot_profile__icons__image_36": "https://avatars.slack-edge.com/2022-08-02/3888649620612_f864dc1bb794cf7d82b0_36.png", "message__blocks[]block_id": "kdZZ", "message__blocks[]elements[]type": "['rich_text_section']"}    Thought: I now know the final answer.    Final Answer: I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.        > Finished chain.    'I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.'  from langchain.llms import OpenAIfrom langchain.chains import LLMChain, TransformChain, SimpleSequentialChainfrom langchain.prompts import PromptTemplatefrom langchain.tools.zapier.tool import ZapierNLARunActionfrom langchain.utilities.zapier import ZapierNLAWrapper from langchain.llms import OpenAIfrom langchain.chains import LLMChain, TransformChain, SimpleSequentialChainfrom langchain.prompts import PromptTemplatefrom langchain.tools.zapier.tool import ZapierNLARunActionfrom langchain.utilities.zapier import ZapierNLAWrapper  API Reference:OpenAILLMChainTransformChainSimpleSequentialChainPromptTemplateZapierNLARunActionZapierNLAWrapper ## step 0. expose gmail 'find email' and slack 'send direct message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through firstactions = ZapierNLAWrapper().list() ## step 0. expose gmail 'find email' and slack 'send direct message' actions# first go here, log in, expose (enable) the two actions: https://nla.zapier.com/demo/start -- for this example, can leave all fields "Have AI guess"# in an oauth scenario, you'd get your own <provider> id (instead of 'demo') which you route your users through firstactions = ZapierNLAWrapper().list()  ## step 1. gmail find emailGMAIL_SEARCH_INSTRUCTIONS = "Grab the latest email from Silicon Valley Bank"def nla_gmail(inputs):    action = next(        (a for a in actions if a["description"].startswith("Gmail: Find Email")), None    )    return {        "email_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(inputs["instructions"])    }gmail_chain = TransformChain(    input_variables=["instructions"],    output_variables=["email_data"],    transform=nla_gmail,) ## step 1. gmail find emailGMAIL_SEARCH_INSTRUCTIONS = "Grab the latest email from Silicon Valley Bank"def nla_gmail(inputs):    action = next(        (a for a in actions if a["description"].startswith("Gmail: Find Email")), None    )    return {        "email_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(inputs["instructions"])    }gmail_chain = TransformChain(    input_variables=["instructions"],    output_variables=["email_data"],    transform=nla_gmail,)  ## step 2. generate draft replytemplate = """You are an assisstant who drafts replies to an incoming email. Output draft reply in plain text (not JSON).Incoming email:{email_data}Draft email reply:"""prompt_template = PromptTemplate(input_variables=["email_data"], template=template)reply_chain = LLMChain(llm=OpenAI(temperature=0.7), prompt=prompt_template) ## step 2. generate draft replytemplate = """You are an assisstant who drafts replies to an incoming email. Output draft reply in plain text (not JSON).Incoming email:{email_data}Draft email reply:"""prompt_template = PromptTemplate(input_variables=["email_data"], template=template)reply_chain = LLMChain(llm=OpenAI(temperature=0.7), prompt=prompt_template)  ## step 3. send draft reply via a slack direct messageSLACK_HANDLE = "@Ankush Gola"def nla_slack(inputs):    action = next(        (            a            for a in actions            if a["description"].startswith("Slack: Send Direct Message")        ),        None,    )    instructions = f'Send this to {SLACK_HANDLE} in Slack: {inputs["draft_reply"]}'    return {        "slack_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(instructions)    }slack_chain = TransformChain(    input_variables=["draft_reply"],    output_variables=["slack_data"],    transform=nla_slack,) ## step 3. send draft reply via a slack direct messageSLACK_HANDLE = "@Ankush Gola"def nla_slack(inputs):    action = next(        (            a            for a in actions            if a["description"].startswith("Slack: Send Direct Message")        ),        None,    )    instructions = f'Send this to {SLACK_HANDLE} in Slack: {inputs["draft_reply"]}'    return {        "slack_data": ZapierNLARunAction(            action_id=action["id"],            zapier_description=action["description"],            params_schema=action["params"],        ).run(instructions)    }slack_chain = TransformChain(    input_variables=["draft_reply"],    output_variables=["slack_data"],    transform=nla_slack,)  ## finally, executeoverall_chain = SimpleSequentialChain(    chains=[gmail_chain, reply_chain, slack_chain], verbose=True)overall_chain.run(GMAIL_SEARCH_INSTRUCTIONS) ## finally, executeoverall_chain = SimpleSequentialChain(    chains=[gmail_chain, reply_chain, slack_chain], verbose=True)overall_chain.run(GMAIL_SEARCH_INSTRUCTIONS)              > Entering new SimpleSequentialChain chain...    {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}        Dear Silicon Valley Bridge Bank,         Thank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you.         Best regards,     [Your Name]    {"message__text": "Dear Silicon Valley Bridge Bank, \n\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \n\nBest regards, \n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[['text']]", "message__blocks[]elements[]type": "['rich_text_section']"}        > Finished chain.    '{"message__text": "Dear Silicon Valley Bridge Bank, \\n\\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \\n\\nBest regards, \\n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[[\'text\']]", "message__blocks[]elements[]type": "[\'rich_text_section\']"}'             > Entering new SimpleSequentialChain chain...    {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}        Dear Silicon Valley Bridge Bank,         Thank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you.         Best regards,     [Your Name]    {"message__text": "Dear Silicon Valley Bridge Bank, \n\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \n\nBest regards, \n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[['text']]", "message__blocks[]elements[]type": "['rich_text_section']"}        > Finished chain.    '{"message__text": "Dear Silicon Valley Bridge Bank, \\n\\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \\n\\nBest regards, \\n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[[\'text\']]", "message__blocks[]elements[]type": "[\'rich_text_section\']"}'             > Entering new SimpleSequentialChain chain...    {"from__name": "Silicon Valley Bridge Bank, N.A.", "from__email": "sreply@svb.com", "body_plain": "Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG", "reply_to__email": "sreply@svb.com", "subject": "Meet the new CEO Tim Mayopoulos", "date": "Tue, 14 Mar 2023 23:42:29 -0500 (CDT)", "message_url": "https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a", "attachment_count": "0", "to__emails": "ankush@langchain.dev", "message_id": "186e393b13cfdf0a", "labels": "IMPORTANT, CATEGORY_UPDATES, INBOX"}        Dear Silicon Valley Bridge Bank,         Thank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you.         Best regards,     [Your Name]    {"message__text": "Dear Silicon Valley Bridge Bank, \n\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \n\nBest regards, \n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[['text']]", "message__blocks[]elements[]type": "['rich_text_section']"}        > Finished chain.    '{"message__text": "Dear Silicon Valley Bridge Bank, \\n\\nThank you for your email and the update regarding your new CEO Tim Mayopoulos. We appreciate your dedication to keeping your clients and partners informed and we look forward to continuing our relationship with you. \\n\\nBest regards, \\n[Your Name]", "message__permalink": "https://langchain.slack.com/archives/D04TKF5BBHU/p1678859968241629", "channel": "D04TKF5BBHU", "message__bot_profile__name": "Zapier", "message__team": "T04F8K3FZB5", "message__bot_id": "B04TRV4R74K", "message__bot_profile__deleted": "false", "message__bot_profile__app_id": "A024R9PQM", "ts_time": "2023-03-15T05:59:28Z", "message__blocks[]block_id": "p7i", "message__blocks[]elements[]elements[]type": "[[\'text\']]", "message__blocks[]elements[]type": "[\'rich_text_section\']"}'  llm = OpenAI(temperature=0)zapier = ZapierNLAWrapper(zapier_nla_oauth_access_token="<fill in access token here>")toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.") llm = OpenAI(temperature=0)zapier = ZapierNLAWrapper(zapier_nla_oauth_access_token="<fill in access token here>")toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)agent = initialize_agent(    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)agent.run(    "Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.")  Previous YouTube Next Vector stores Example with AgentExample with SimpleSequentialChainExample Using OAuth Access Token Example with AgentExample with SimpleSequentialChainExample Using OAuth Access Token CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright © 2023 LangChain, Inc. CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlog CommunityDiscordTwitter Community GitHubPythonJS/TS GitHub MoreHomepageBlog More Copyright © 2023 LangChain, Inc. Copyright © 2023 LangChain, Inc. Skip to main content (#docusaurus_skipToContent_fallback) 🦜️🔗 LangChain (/) Docs (/docs/get_started/introduction) Use cases (/docs/use_cases) Integrations (/docs/integrations) API (https://api.python.langchain.com) LangSmith (https://smith.langchain.com) JS/TS Docs (https://js.langchain.com/docs)  (https://github.com/hwchase17/langchain) Integrations (/docs/integrations) Callbacks (/docs/integrations/callbacks/) Chat models (/docs/integrations/chat/) Chat loaders (/docs/integrations/chat_loaders/) Document loaders (/docs/integrations/document_loaders/) Document transformers (/docs/integrations/document_transformers/) LLMs (/docs/integrations/llms/) Memory (/docs/integrations/memory/) Retrievers (/docs/integrations/retrievers/) Text embedding models (/docs/integrations/text_embedding/) Agents & Toolkits (/docs/integrations/toolkits/) Tools (/docs/integrations/tools/) Alpha Vantage (/docs/integrations/tools/alpha_vantage) Apify (/docs/integrations/tools/apify) ArXiv (/docs/integrations/tools/arxiv) AWS Lambda (/docs/integrations/tools/awslambda) Shell (bash) (/docs/integrations/tools/bash) Bing Search (/docs/integrations/tools/bing_search) Brave Search (/docs/integrations/tools/brave_search) ChatGPT Plugins (/docs/integrations/tools/chatgpt_plugins) Dall-E Image Generator (/docs/integrations/tools/dalle_image_generator) DataForSeo (/docs/integrations/tools/dataforseo) DuckDuckGo Search (/docs/integrations/tools/ddg) Eden AI (/docs/integrations/tools/edenai_tools) File System (/docs/integrations/tools/filesystem) Golden Query (/docs/integrations/tools/golden_query) Google Drive (/docs/integrations/tools/google_drive) Google Places (/docs/integrations/tools/google_places) Google Search (/docs/integrations/tools/google_search) Google Serper (/docs/integrations/tools/google_serper) Gradio (/docs/integrations/tools/gradio_tools) GraphQL (/docs/integrations/tools/graphql) HuggingFace Hub Tools (/docs/integrations/tools/huggingface_tools) Human as a tool (/docs/integrations/tools/human_tools) IFTTT WebHooks (/docs/integrations/tools/ifttt) Lemon Agent (/docs/integrations/tools/lemonai) Metaphor Search (/docs/integrations/tools/metaphor_search) Nuclia Understanding (/docs/integrations/tools/nuclia) OpenWeatherMap (/docs/integrations/tools/openweathermap) PubMed (/docs/integrations/tools/pubmed) Requests (/docs/integrations/tools/requests) SceneXplain (/docs/integrations/tools/sceneXplain) Search Tools (/docs/integrations/tools/search_tools) SearxNG Search (/docs/integrations/tools/searx_search) SerpAPI (/docs/integrations/tools/serpapi) Twilio (/docs/integrations/tools/twilio) Wikipedia (/docs/integrations/tools/wikipedia) Wolfram Alpha (/docs/integrations/tools/wolfram_alpha) Yahoo Finance News (/docs/integrations/tools/yahoo_finance_news) YouTube (/docs/integrations/tools/youtube) Zapier Natural Language Actions (/docs/integrations/tools/zapier) Vector stores (/docs/integrations/vectorstores/) Grouped by provider (/docs/integrations/providers/)  (/) Integrations (/docs/integrations) Tools (/docs/integrations/tools/) Zapier Natural Language Actions (https://nla.zapier.com/start/) https://zapier.com/apps (https://zapier.com/apps) Example Using OAuth Access Token (#oauth) full docs (https://nla.zapier.com/start/) ​ (#example-with-agent) OpenAI (https://api.python.langchain.com/en/latest/llms/langchain.llms.openai.OpenAI.html) initialize_agent (https://api.python.langchain.com/en/latest/agents/langchain.agents.initialize.initialize_agent.html) ZapierToolkit (https://api.python.langchain.com/en/latest/agents/langchain.agents.agent_toolkits.zapier.toolkit.ZapierToolkit.html) AgentType (https://api.python.langchain.com/en/latest/agents/langchain.agents.agent_types.AgentType.html) ZapierNLAWrapper (https://api.python.langchain.com/en/latest/utilities/langchain.utilities.zapier.ZapierNLAWrapper.html) ​ (#example-with-simplesequentialchain) OpenAI (https://api.python.langchain.com/en/latest/llms/langchain.llms.openai.OpenAI.html) LLMChain (https://api.python.langchain.com/en/latest/chains/langchain.chains.llm.LLMChain.html) TransformChain (https://api.python.langchain.com/en/latest/chains/langchain.chains.transform.TransformChain.html) SimpleSequentialChain (https://api.python.langchain.com/en/latest/chains/langchain.chains.sequential.SimpleSequentialChain.html) PromptTemplate (https://api.python.langchain.com/en/latest/prompts/langchain.prompts.prompt.PromptTemplate.html) ZapierNLARunAction (https://api.python.langchain.com/en/latest/tools/langchain.tools.zapier.tool.ZapierNLARunAction.html) ZapierNLAWrapper (https://api.python.langchain.com/en/latest/utilities/langchain.utilities.zapier.ZapierNLAWrapper.html) Example Using OAuth Access Token ​ (#example-using-oauth-access-token) authentication docs (https://nla.zapier.com/docs/authentication/#oauth-credentials) PreviousYouTube (/docs/integrations/tools/youtube) NextVector stores (/docs/integrations/vectorstores/) Example with Agent (#example-with-agent) Example with SimpleSequentialChain (#example-with-simplesequentialchain) Example Using OAuth Access Token (#example-using-oauth-access-token) Example Using OAuth Access Token Discord (https://discord.gg/cU2adEyC7w) Twitter (https://twitter.com/LangChainAI) Python (https://github.com/hwchase17/langchain) JS/TS (https://github.com/hwchase17/langchainjs) Homepage (https://langchain.com) Blog (https://blog.langchain.dev)