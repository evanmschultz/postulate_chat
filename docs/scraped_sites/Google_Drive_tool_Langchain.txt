This notebook walks through connecting a LangChain to the Google Drive API. By default, the GoogleDriveTools and GoogleDriveWrapper expects the credentials.json file to be ~/.credentials/credentials.json, but this is configurable using the GOOGLE_ACCOUNT_FILE environment variable. The location of token.json use the same directory (or use the parameter token_path). Note that token.json will be created automatically the first time you use the tool. GoogleDriveSearchTool can retrieve a selection of files with some requests.  By default, If you use a folder_id, all the files inside this folder can be retrieved to Document, if the name match the query. You can obtain your folder and document id from the URL: The special value root is for your personal home. By default, all files with these mime-type can be converted to Document. It's possible to update or customize this. See the documentation of GoogleDriveAPIWrapper. But, the corresponding packages must installed. IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsAINetworkAirbyte Question AnsweringAmadeusAzure Cognitive ServicesCSVDocument ComparisonGithubGitlabGmailGoogle Drive toolJiraJSONMultiOnOffice365OpenAPINatural Language APIsPandas DataframePlayWright BrowserPowerBI DatasetPythonSpark DataframeSpark SQLSQL DatabaseVectorstoreXorbitsToolsVector storesGrouped by provider Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & ToolkitsAINetworkAirbyte Question AnsweringAmadeusAzure Cognitive ServicesCSVDocument ComparisonGithubGitlabGmailGoogle Drive toolJiraJSONMultiOnOffice365OpenAPINatural Language APIsPandas DataframePlayWright BrowserPowerBI DatasetPythonSpark DataframeSpark SQLSQL DatabaseVectorstoreXorbits AINetwork Airbyte Question Answering Amadeus Azure Cognitive Services CSV Document Comparison Github Gitlab Gmail Google Drive tool Jira JSON MultiOn Office365 OpenAPI Natural Language APIs Pandas Dataframe PlayWright Browser PowerBI Dataset Python Spark Dataframe Spark SQL SQL Database Vectorstore Xorbits Tools Vector stores Grouped by provider  Integrations Agents & Toolkits Google Drive tool Create a Google Cloud project or use an existing project Enable the Google Drive API Authorize credentials for desktop app pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib Folder: https://drive.google.com/drive/u/0/folders/1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5 -> folder id is "1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5" Document: https://docs.google.com/document/d/1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw/edit -> document id is "1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw" text/text text/plain text/html text/csv text/markdown image/png image/jpeg application/epub+zip application/pdf application/rtf application/vnd.google-apps.document (GDoc) application/vnd.google-apps.presentation (GSlide) application/vnd.google-apps.spreadsheet (GSheet) application/vnd.google.colaboratory (Notebook colab) application/vnd.openxmlformats-officedocument.presentationml.presentation (PPTX) application/vnd.openxmlformats-officedocument.wordprocessingml.document (DOCX) load_tools initialize_agent AgentType Prerequisites Instructions for retrieving your Google Docs data Use within an Agent Discord Twitter Python JS/TS Homepage Blog Skip to main content🦜️🔗 LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLKIntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsAINetworkAirbyte Question AnsweringAmadeusAzure Cognitive ServicesCSVDocument ComparisonGithubGitlabGmailGoogle Drive toolJiraJSONMultiOnOffice365OpenAPINatural Language APIsPandas DataframePlayWright BrowserPowerBI DatasetPythonSpark DataframeSpark SQLSQL DatabaseVectorstoreXorbitsToolsVector storesGrouped by providerIntegrationsAgents & ToolkitsGoogle Drive toolOn this pageGoogle Drive toolThis notebook walks through connecting a LangChain to the Google Drive API.Prerequisites​Create a Google Cloud project or use an existing projectEnable the Google Drive APIAuthorize credentials for desktop apppip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlibInstructions for retrieving your Google Docs data​By default, the GoogleDriveTools and GoogleDriveWrapper expects the credentials.json file to be ~/.credentials/credentials.json, but this is configurable using the GOOGLE_ACCOUNT_FILE environment variable. The location of token.json use the same directory (or use the parameter token_path). Note that token.json will be created automatically the first time you use the tool.GoogleDriveSearchTool can retrieve a selection of files with some requests. By default, If you use a folder_id, all the files inside this folder can be retrieved to Document, if the name match the query.#!pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlibYou can obtain your folder and document id from the URL:Folder: https://drive.google.com/drive/u/0/folders/1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5 -> folder id is "1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5"Document: https://docs.google.com/document/d/1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw/edit -> document id is "1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw"The special value root is for your personal home.folder_id="root"#folder_id='1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5'By default, all files with these mime-type can be converted to Document.text/texttext/plaintext/htmltext/csvtext/markdownimage/pngimage/jpegapplication/epub+zipapplication/pdfapplication/rtfapplication/vnd.google-apps.document (GDoc)application/vnd.google-apps.presentation (GSlide)application/vnd.google-apps.spreadsheet (GSheet)application/vnd.google.colaboratory (Notebook colab)application/vnd.openxmlformats-officedocument.presentationml.presentation (PPTX)application/vnd.openxmlformats-officedocument.wordprocessingml.document (DOCX)It's possible to update or customize this. See the documentation of GoogleDriveAPIWrapper.But, the corresponding packages must installed.#!pip install unstructuredfrom langchain_googledrive.utilities.google_drive import GoogleDriveAPIWrapperfrom langchain_googledrive.tools.google_drive.tool import GoogleDriveSearchTool# By default, search only in the filename.tool = GoogleDriveSearchTool(    api_wrapper=GoogleDriveAPIWrapper(        folder_id=folder_id,        num_results=2,        template="gdrive-query-in-folder", # Search in the body of documents    ))import logginglogging.basicConfig(level=logging.INFO)tool.run("machine learning")tool.descriptionfrom langchain.agents import load_toolstools = load_tools(["google-drive-search"],                   folder_id=folder_id,                   template="gdrive-query-in-folder",                  )API Reference:load_toolsUse within an Agent​from langchain import OpenAIfrom langchain.agents import initialize_agent, AgentTypellm = OpenAI(temperature=0)agent = initialize_agent(    tools=tools,    llm=llm,    agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,)API Reference:initialize_agentAgentTypeagent.run(    "Search in google drive, who is 'Yann LeCun' ?")PreviousGmailNextJiraPrerequisitesInstructions for retrieving your Google Docs dataUse within an AgentCommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright © 2023 LangChain, Inc. Skip to main content 🦜️🔗 LangChainDocsUse casesIntegrationsAPILangSmithJS/TS DocsCTRLK 🦜️🔗 LangChainDocsUse casesIntegrationsAPI LangSmithJS/TS DocsCTRLK  CTRLK CTRLK  CTRLK   IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsAINetworkAirbyte Question AnsweringAmadeusAzure Cognitive ServicesCSVDocument ComparisonGithubGitlabGmailGoogle Drive toolJiraJSONMultiOnOffice365OpenAPINatural Language APIsPandas DataframePlayWright BrowserPowerBI DatasetPythonSpark DataframeSpark SQLSQL DatabaseVectorstoreXorbitsToolsVector storesGrouped by providerIntegrationsAgents & ToolkitsGoogle Drive toolOn this pageGoogle Drive toolThis notebook walks through connecting a LangChain to the Google Drive API.Prerequisites​Create a Google Cloud project or use an existing projectEnable the Google Drive APIAuthorize credentials for desktop apppip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlibInstructions for retrieving your Google Docs data​By default, the GoogleDriveTools and GoogleDriveWrapper expects the credentials.json file to be ~/.credentials/credentials.json, but this is configurable using the GOOGLE_ACCOUNT_FILE environment variable. The location of token.json use the same directory (or use the parameter token_path). Note that token.json will be created automatically the first time you use the tool.GoogleDriveSearchTool can retrieve a selection of files with some requests. By default, If you use a folder_id, all the files inside this folder can be retrieved to Document, if the name match the query.#!pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlibYou can obtain your folder and document id from the URL:Folder: https://drive.google.com/drive/u/0/folders/1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5 -> folder id is "1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5"Document: https://docs.google.com/document/d/1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw/edit -> document id is "1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw"The special value root is for your personal home.folder_id="root"#folder_id='1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5'By default, all files with these mime-type can be converted to Document.text/texttext/plaintext/htmltext/csvtext/markdownimage/pngimage/jpegapplication/epub+zipapplication/pdfapplication/rtfapplication/vnd.google-apps.document (GDoc)application/vnd.google-apps.presentation (GSlide)application/vnd.google-apps.spreadsheet (GSheet)application/vnd.google.colaboratory (Notebook colab)application/vnd.openxmlformats-officedocument.presentationml.presentation (PPTX)application/vnd.openxmlformats-officedocument.wordprocessingml.document (DOCX)It's possible to update or customize this. See the documentation of GoogleDriveAPIWrapper.But, the corresponding packages must installed.#!pip install unstructuredfrom langchain_googledrive.utilities.google_drive import GoogleDriveAPIWrapperfrom langchain_googledrive.tools.google_drive.tool import GoogleDriveSearchTool# By default, search only in the filename.tool = GoogleDriveSearchTool(    api_wrapper=GoogleDriveAPIWrapper(        folder_id=folder_id,        num_results=2,        template="gdrive-query-in-folder", # Search in the body of documents    ))import logginglogging.basicConfig(level=logging.INFO)tool.run("machine learning")tool.descriptionfrom langchain.agents import load_toolstools = load_tools(["google-drive-search"],                   folder_id=folder_id,                   template="gdrive-query-in-folder",                  )API Reference:load_toolsUse within an Agent​from langchain import OpenAIfrom langchain.agents import initialize_agent, AgentTypellm = OpenAI(temperature=0)agent = initialize_agent(    tools=tools,    llm=llm,    agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,)API Reference:initialize_agentAgentTypeagent.run(    "Search in google drive, who is 'Yann LeCun' ?")PreviousGmailNextJiraPrerequisitesInstructions for retrieving your Google Docs dataUse within an Agent IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsAINetworkAirbyte Question AnsweringAmadeusAzure Cognitive ServicesCSVDocument ComparisonGithubGitlabGmailGoogle Drive toolJiraJSONMultiOnOffice365OpenAPINatural Language APIsPandas DataframePlayWright BrowserPowerBI DatasetPythonSpark DataframeSpark SQLSQL DatabaseVectorstoreXorbitsToolsVector storesGrouped by providerIntegrationsAgents & ToolkitsGoogle Drive toolOn this pageGoogle Drive toolThis notebook walks through connecting a LangChain to the Google Drive API.Prerequisites​Create a Google Cloud project or use an existing projectEnable the Google Drive APIAuthorize credentials for desktop apppip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlibInstructions for retrieving your Google Docs data​By default, the GoogleDriveTools and GoogleDriveWrapper expects the credentials.json file to be ~/.credentials/credentials.json, but this is configurable using the GOOGLE_ACCOUNT_FILE environment variable. The location of token.json use the same directory (or use the parameter token_path). Note that token.json will be created automatically the first time you use the tool.GoogleDriveSearchTool can retrieve a selection of files with some requests. By default, If you use a folder_id, all the files inside this folder can be retrieved to Document, if the name match the query.#!pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlibYou can obtain your folder and document id from the URL:Folder: https://drive.google.com/drive/u/0/folders/1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5 -> folder id is "1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5"Document: https://docs.google.com/document/d/1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw/edit -> document id is "1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw"The special value root is for your personal home.folder_id="root"#folder_id='1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5'By default, all files with these mime-type can be converted to Document.text/texttext/plaintext/htmltext/csvtext/markdownimage/pngimage/jpegapplication/epub+zipapplication/pdfapplication/rtfapplication/vnd.google-apps.document (GDoc)application/vnd.google-apps.presentation (GSlide)application/vnd.google-apps.spreadsheet (GSheet)application/vnd.google.colaboratory (Notebook colab)application/vnd.openxmlformats-officedocument.presentationml.presentation (PPTX)application/vnd.openxmlformats-officedocument.wordprocessingml.document (DOCX)It's possible to update or customize this. See the documentation of GoogleDriveAPIWrapper.But, the corresponding packages must installed.#!pip install unstructuredfrom langchain_googledrive.utilities.google_drive import GoogleDriveAPIWrapperfrom langchain_googledrive.tools.google_drive.tool import GoogleDriveSearchTool# By default, search only in the filename.tool = GoogleDriveSearchTool(    api_wrapper=GoogleDriveAPIWrapper(        folder_id=folder_id,        num_results=2,        template="gdrive-query-in-folder", # Search in the body of documents    ))import logginglogging.basicConfig(level=logging.INFO)tool.run("machine learning")tool.descriptionfrom langchain.agents import load_toolstools = load_tools(["google-drive-search"],                   folder_id=folder_id,                   template="gdrive-query-in-folder",                  )API Reference:load_toolsUse within an Agent​from langchain import OpenAIfrom langchain.agents import initialize_agent, AgentTypellm = OpenAI(temperature=0)agent = initialize_agent(    tools=tools,    llm=llm,    agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,)API Reference:initialize_agentAgentTypeagent.run(    "Search in google drive, who is 'Yann LeCun' ?")PreviousGmailNextJiraPrerequisitesInstructions for retrieving your Google Docs dataUse within an Agent IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsAINetworkAirbyte Question AnsweringAmadeusAzure Cognitive ServicesCSVDocument ComparisonGithubGitlabGmailGoogle Drive toolJiraJSONMultiOnOffice365OpenAPINatural Language APIsPandas DataframePlayWright BrowserPowerBI DatasetPythonSpark DataframeSpark SQLSQL DatabaseVectorstoreXorbitsToolsVector storesGrouped by provider IntegrationsCallbacksChat modelsChat loadersDocument loadersDocument transformersLLMsMemoryRetrieversText embedding modelsAgents & ToolkitsAINetworkAirbyte Question AnsweringAmadeusAzure Cognitive ServicesCSVDocument ComparisonGithubGitlabGmailGoogle Drive toolJiraJSONMultiOnOffice365OpenAPINatural Language APIsPandas DataframePlayWright BrowserPowerBI DatasetPythonSpark DataframeSpark SQLSQL DatabaseVectorstoreXorbitsToolsVector storesGrouped by provider Integrations Callbacks Chat models Chat loaders Document loaders Document transformers LLMs Memory Retrievers Text embedding models Agents & Toolkits Tools Vector stores Grouped by provider IntegrationsAgents & ToolkitsGoogle Drive toolOn this pageGoogle Drive toolThis notebook walks through connecting a LangChain to the Google Drive API.Prerequisites​Create a Google Cloud project or use an existing projectEnable the Google Drive APIAuthorize credentials for desktop apppip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlibInstructions for retrieving your Google Docs data​By default, the GoogleDriveTools and GoogleDriveWrapper expects the credentials.json file to be ~/.credentials/credentials.json, but this is configurable using the GOOGLE_ACCOUNT_FILE environment variable. The location of token.json use the same directory (or use the parameter token_path). Note that token.json will be created automatically the first time you use the tool.GoogleDriveSearchTool can retrieve a selection of files with some requests. By default, If you use a folder_id, all the files inside this folder can be retrieved to Document, if the name match the query.#!pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlibYou can obtain your folder and document id from the URL:Folder: https://drive.google.com/drive/u/0/folders/1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5 -> folder id is "1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5"Document: https://docs.google.com/document/d/1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw/edit -> document id is "1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw"The special value root is for your personal home.folder_id="root"#folder_id='1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5'By default, all files with these mime-type can be converted to Document.text/texttext/plaintext/htmltext/csvtext/markdownimage/pngimage/jpegapplication/epub+zipapplication/pdfapplication/rtfapplication/vnd.google-apps.document (GDoc)application/vnd.google-apps.presentation (GSlide)application/vnd.google-apps.spreadsheet (GSheet)application/vnd.google.colaboratory (Notebook colab)application/vnd.openxmlformats-officedocument.presentationml.presentation (PPTX)application/vnd.openxmlformats-officedocument.wordprocessingml.document (DOCX)It's possible to update or customize this. See the documentation of GoogleDriveAPIWrapper.But, the corresponding packages must installed.#!pip install unstructuredfrom langchain_googledrive.utilities.google_drive import GoogleDriveAPIWrapperfrom langchain_googledrive.tools.google_drive.tool import GoogleDriveSearchTool# By default, search only in the filename.tool = GoogleDriveSearchTool(    api_wrapper=GoogleDriveAPIWrapper(        folder_id=folder_id,        num_results=2,        template="gdrive-query-in-folder", # Search in the body of documents    ))import logginglogging.basicConfig(level=logging.INFO)tool.run("machine learning")tool.descriptionfrom langchain.agents import load_toolstools = load_tools(["google-drive-search"],                   folder_id=folder_id,                   template="gdrive-query-in-folder",                  )API Reference:load_toolsUse within an Agent​from langchain import OpenAIfrom langchain.agents import initialize_agent, AgentTypellm = OpenAI(temperature=0)agent = initialize_agent(    tools=tools,    llm=llm,    agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,)API Reference:initialize_agentAgentTypeagent.run(    "Search in google drive, who is 'Yann LeCun' ?")PreviousGmailNextJiraPrerequisitesInstructions for retrieving your Google Docs dataUse within an Agent IntegrationsAgents & ToolkitsGoogle Drive toolOn this pageGoogle Drive toolThis notebook walks through connecting a LangChain to the Google Drive API.Prerequisites​Create a Google Cloud project or use an existing projectEnable the Google Drive APIAuthorize credentials for desktop apppip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlibInstructions for retrieving your Google Docs data​By default, the GoogleDriveTools and GoogleDriveWrapper expects the credentials.json file to be ~/.credentials/credentials.json, but this is configurable using the GOOGLE_ACCOUNT_FILE environment variable. The location of token.json use the same directory (or use the parameter token_path). Note that token.json will be created automatically the first time you use the tool.GoogleDriveSearchTool can retrieve a selection of files with some requests. By default, If you use a folder_id, all the files inside this folder can be retrieved to Document, if the name match the query.#!pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlibYou can obtain your folder and document id from the URL:Folder: https://drive.google.com/drive/u/0/folders/1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5 -> folder id is "1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5"Document: https://docs.google.com/document/d/1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw/edit -> document id is "1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw"The special value root is for your personal home.folder_id="root"#folder_id='1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5'By default, all files with these mime-type can be converted to Document.text/texttext/plaintext/htmltext/csvtext/markdownimage/pngimage/jpegapplication/epub+zipapplication/pdfapplication/rtfapplication/vnd.google-apps.document (GDoc)application/vnd.google-apps.presentation (GSlide)application/vnd.google-apps.spreadsheet (GSheet)application/vnd.google.colaboratory (Notebook colab)application/vnd.openxmlformats-officedocument.presentationml.presentation (PPTX)application/vnd.openxmlformats-officedocument.wordprocessingml.document (DOCX)It's possible to update or customize this. See the documentation of GoogleDriveAPIWrapper.But, the corresponding packages must installed.#!pip install unstructuredfrom langchain_googledrive.utilities.google_drive import GoogleDriveAPIWrapperfrom langchain_googledrive.tools.google_drive.tool import GoogleDriveSearchTool# By default, search only in the filename.tool = GoogleDriveSearchTool(    api_wrapper=GoogleDriveAPIWrapper(        folder_id=folder_id,        num_results=2,        template="gdrive-query-in-folder", # Search in the body of documents    ))import logginglogging.basicConfig(level=logging.INFO)tool.run("machine learning")tool.descriptionfrom langchain.agents import load_toolstools = load_tools(["google-drive-search"],                   folder_id=folder_id,                   template="gdrive-query-in-folder",                  )API Reference:load_toolsUse within an Agent​from langchain import OpenAIfrom langchain.agents import initialize_agent, AgentTypellm = OpenAI(temperature=0)agent = initialize_agent(    tools=tools,    llm=llm,    agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,)API Reference:initialize_agentAgentTypeagent.run(    "Search in google drive, who is 'Yann LeCun' ?")PreviousGmailNextJira IntegrationsAgents & ToolkitsGoogle Drive toolOn this pageGoogle Drive toolThis notebook walks through connecting a LangChain to the Google Drive API.Prerequisites​Create a Google Cloud project or use an existing projectEnable the Google Drive APIAuthorize credentials for desktop apppip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlibInstructions for retrieving your Google Docs data​By default, the GoogleDriveTools and GoogleDriveWrapper expects the credentials.json file to be ~/.credentials/credentials.json, but this is configurable using the GOOGLE_ACCOUNT_FILE environment variable. The location of token.json use the same directory (or use the parameter token_path). Note that token.json will be created automatically the first time you use the tool.GoogleDriveSearchTool can retrieve a selection of files with some requests. By default, If you use a folder_id, all the files inside this folder can be retrieved to Document, if the name match the query.#!pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlibYou can obtain your folder and document id from the URL:Folder: https://drive.google.com/drive/u/0/folders/1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5 -> folder id is "1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5"Document: https://docs.google.com/document/d/1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw/edit -> document id is "1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw"The special value root is for your personal home.folder_id="root"#folder_id='1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5'By default, all files with these mime-type can be converted to Document.text/texttext/plaintext/htmltext/csvtext/markdownimage/pngimage/jpegapplication/epub+zipapplication/pdfapplication/rtfapplication/vnd.google-apps.document (GDoc)application/vnd.google-apps.presentation (GSlide)application/vnd.google-apps.spreadsheet (GSheet)application/vnd.google.colaboratory (Notebook colab)application/vnd.openxmlformats-officedocument.presentationml.presentation (PPTX)application/vnd.openxmlformats-officedocument.wordprocessingml.document (DOCX)It's possible to update or customize this. See the documentation of GoogleDriveAPIWrapper.But, the corresponding packages must installed.#!pip install unstructuredfrom langchain_googledrive.utilities.google_drive import GoogleDriveAPIWrapperfrom langchain_googledrive.tools.google_drive.tool import GoogleDriveSearchTool# By default, search only in the filename.tool = GoogleDriveSearchTool(    api_wrapper=GoogleDriveAPIWrapper(        folder_id=folder_id,        num_results=2,        template="gdrive-query-in-folder", # Search in the body of documents    ))import logginglogging.basicConfig(level=logging.INFO)tool.run("machine learning")tool.descriptionfrom langchain.agents import load_toolstools = load_tools(["google-drive-search"],                   folder_id=folder_id,                   template="gdrive-query-in-folder",                  )API Reference:load_toolsUse within an Agent​from langchain import OpenAIfrom langchain.agents import initialize_agent, AgentTypellm = OpenAI(temperature=0)agent = initialize_agent(    tools=tools,    llm=llm,    agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,)API Reference:initialize_agentAgentTypeagent.run(    "Search in google drive, who is 'Yann LeCun' ?")PreviousGmailNextJira On this page Google Drive toolThis notebook walks through connecting a LangChain to the Google Drive API.Prerequisites​Create a Google Cloud project or use an existing projectEnable the Google Drive APIAuthorize credentials for desktop apppip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlibInstructions for retrieving your Google Docs data​By default, the GoogleDriveTools and GoogleDriveWrapper expects the credentials.json file to be ~/.credentials/credentials.json, but this is configurable using the GOOGLE_ACCOUNT_FILE environment variable. The location of token.json use the same directory (or use the parameter token_path). Note that token.json will be created automatically the first time you use the tool.GoogleDriveSearchTool can retrieve a selection of files with some requests. By default, If you use a folder_id, all the files inside this folder can be retrieved to Document, if the name match the query.#!pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlibYou can obtain your folder and document id from the URL:Folder: https://drive.google.com/drive/u/0/folders/1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5 -> folder id is "1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5"Document: https://docs.google.com/document/d/1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw/edit -> document id is "1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw"The special value root is for your personal home.folder_id="root"#folder_id='1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5'By default, all files with these mime-type can be converted to Document.text/texttext/plaintext/htmltext/csvtext/markdownimage/pngimage/jpegapplication/epub+zipapplication/pdfapplication/rtfapplication/vnd.google-apps.document (GDoc)application/vnd.google-apps.presentation (GSlide)application/vnd.google-apps.spreadsheet (GSheet)application/vnd.google.colaboratory (Notebook colab)application/vnd.openxmlformats-officedocument.presentationml.presentation (PPTX)application/vnd.openxmlformats-officedocument.wordprocessingml.document (DOCX)It's possible to update or customize this. See the documentation of GoogleDriveAPIWrapper.But, the corresponding packages must installed.#!pip install unstructuredfrom langchain_googledrive.utilities.google_drive import GoogleDriveAPIWrapperfrom langchain_googledrive.tools.google_drive.tool import GoogleDriveSearchTool# By default, search only in the filename.tool = GoogleDriveSearchTool(    api_wrapper=GoogleDriveAPIWrapper(        folder_id=folder_id,        num_results=2,        template="gdrive-query-in-folder", # Search in the body of documents    ))import logginglogging.basicConfig(level=logging.INFO)tool.run("machine learning")tool.descriptionfrom langchain.agents import load_toolstools = load_tools(["google-drive-search"],                   folder_id=folder_id,                   template="gdrive-query-in-folder",                  )API Reference:load_toolsUse within an Agent​from langchain import OpenAIfrom langchain.agents import initialize_agent, AgentTypellm = OpenAI(temperature=0)agent = initialize_agent(    tools=tools,    llm=llm,    agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,)API Reference:initialize_agentAgentTypeagent.run(    "Search in google drive, who is 'Yann LeCun' ?") #!pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib #!pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib  folder_id="root"#folder_id='1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5' folder_id="root"#folder_id='1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5'  #!pip install unstructured #!pip install unstructured  from langchain_googledrive.utilities.google_drive import GoogleDriveAPIWrapperfrom langchain_googledrive.tools.google_drive.tool import GoogleDriveSearchTool# By default, search only in the filename.tool = GoogleDriveSearchTool(    api_wrapper=GoogleDriveAPIWrapper(        folder_id=folder_id,        num_results=2,        template="gdrive-query-in-folder", # Search in the body of documents    )) from langchain_googledrive.utilities.google_drive import GoogleDriveAPIWrapperfrom langchain_googledrive.tools.google_drive.tool import GoogleDriveSearchTool# By default, search only in the filename.tool = GoogleDriveSearchTool(    api_wrapper=GoogleDriveAPIWrapper(        folder_id=folder_id,        num_results=2,        template="gdrive-query-in-folder", # Search in the body of documents    ))  import logginglogging.basicConfig(level=logging.INFO) import logginglogging.basicConfig(level=logging.INFO)  tool.run("machine learning") tool.run("machine learning")  tool.description tool.description  from langchain.agents import load_toolstools = load_tools(["google-drive-search"],                   folder_id=folder_id,                   template="gdrive-query-in-folder",                  ) from langchain.agents import load_toolstools = load_tools(["google-drive-search"],                   folder_id=folder_id,                   template="gdrive-query-in-folder",                  )  API Reference:load_tools from langchain import OpenAIfrom langchain.agents import initialize_agent, AgentTypellm = OpenAI(temperature=0)agent = initialize_agent(    tools=tools,    llm=llm,    agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,) from langchain import OpenAIfrom langchain.agents import initialize_agent, AgentTypellm = OpenAI(temperature=0)agent = initialize_agent(    tools=tools,    llm=llm,    agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,)  API Reference:initialize_agentAgentType agent.run(    "Search in google drive, who is 'Yann LeCun' ?") agent.run(    "Search in google drive, who is 'Yann LeCun' ?")  Previous Gmail Next Jira PrerequisitesInstructions for retrieving your Google Docs dataUse within an Agent PrerequisitesInstructions for retrieving your Google Docs dataUse within an Agent CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlogCopyright © 2023 LangChain, Inc. CommunityDiscordTwitterGitHubPythonJS/TSMoreHomepageBlog CommunityDiscordTwitter Community GitHubPythonJS/TS GitHub MoreHomepageBlog More Copyright © 2023 LangChain, Inc. Copyright © 2023 LangChain, Inc. Skip to main content (#docusaurus_skipToContent_fallback) 🦜️🔗 LangChain (/) Docs (/docs/get_started/introduction) Use cases (/docs/use_cases) Integrations (/docs/integrations) API (https://api.python.langchain.com) LangSmith (https://smith.langchain.com) JS/TS Docs (https://js.langchain.com/docs)  (https://github.com/hwchase17/langchain) Integrations (/docs/integrations) Callbacks (/docs/integrations/callbacks/) Chat models (/docs/integrations/chat/) Chat loaders (/docs/integrations/chat_loaders/) Document loaders (/docs/integrations/document_loaders/) Document transformers (/docs/integrations/document_transformers/) LLMs (/docs/integrations/llms/) Memory (/docs/integrations/memory/) Retrievers (/docs/integrations/retrievers/) Text embedding models (/docs/integrations/text_embedding/) Agents & Toolkits (/docs/integrations/toolkits/) AINetwork (/docs/integrations/toolkits/ainetwork) Airbyte Question Answering (/docs/integrations/toolkits/airbyte_structured_qa) Amadeus (/docs/integrations/toolkits/amadeus) Azure Cognitive Services (/docs/integrations/toolkits/azure_cognitive_services) CSV (/docs/integrations/toolkits/csv) Document Comparison (/docs/integrations/toolkits/document_comparison_toolkit) Github (/docs/integrations/toolkits/github) Gitlab (/docs/integrations/toolkits/gitlab) Gmail (/docs/integrations/toolkits/gmail) Google Drive tool (/docs/integrations/toolkits/google_drive) Jira (/docs/integrations/toolkits/jira) JSON (/docs/integrations/toolkits/json) MultiOn (/docs/integrations/toolkits/multion) Office365 (/docs/integrations/toolkits/office365) OpenAPI (/docs/integrations/toolkits/openapi) Natural Language APIs (/docs/integrations/toolkits/openapi_nla) Pandas Dataframe (/docs/integrations/toolkits/pandas) PlayWright Browser (/docs/integrations/toolkits/playwright) PowerBI Dataset (/docs/integrations/toolkits/powerbi) Python (/docs/integrations/toolkits/python) Spark Dataframe (/docs/integrations/toolkits/spark) Spark SQL (/docs/integrations/toolkits/spark_sql) SQL Database (/docs/integrations/toolkits/sql_database) Vectorstore (/docs/integrations/toolkits/vectorstore) Xorbits (/docs/integrations/toolkits/xorbits) Tools (/docs/integrations/tools/) Vector stores (/docs/integrations/vectorstores/) Grouped by provider (/docs/integrations/providers/)  (/) Integrations (/docs/integrations) Agents & Toolkits (/docs/integrations/toolkits/) ​ (#prerequisites) Google Drive API (https://console.cloud.google.com/flows/enableapi?apiid=drive.googleapis.com) Authorize credentials for desktop app (https://developers.google.com/drive/api/quickstart/python#authorize_credentials_for_a_desktop_application) ​ (#instructions-for-retrieving-your-google-docs-data) https://drive.google.com/drive/u/0/folders/1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5 (https://drive.google.com/drive/u/0/folders/1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5) https://docs.google.com/document/d/1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw/edit (https://docs.google.com/document/d/1bfaMQ18_i56204VaQDVeAFpqEijJTgvurupdEDiaUQw/edit) load_tools (https://api.python.langchain.com/en/latest/agents/langchain.agents.load_tools.load_tools.html) ​ (#use-within-an-agent) initialize_agent (https://api.python.langchain.com/en/latest/agents/langchain.agents.initialize.initialize_agent.html) AgentType (https://api.python.langchain.com/en/latest/agents/langchain.agents.agent_types.AgentType.html) PreviousGmail (/docs/integrations/toolkits/gmail) NextJira (/docs/integrations/toolkits/jira) Prerequisites (#prerequisites) Instructions for retrieving your Google Docs data (#instructions-for-retrieving-your-google-docs-data) Use within an Agent (#use-within-an-agent) Discord (https://discord.gg/cU2adEyC7w) Twitter (https://twitter.com/LangChainAI) Python (https://github.com/hwchase17/langchain) JS/TS (https://github.com/hwchase17/langchainjs) Homepage (https://langchain.com) Blog (https://blog.langchain.dev)